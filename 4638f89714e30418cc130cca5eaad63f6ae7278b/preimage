=encoding utf8

=head1 NAME

[ this is a template for a new perldelta file.  Any text flagged as XXX needs
to be processed before release. ]

perldelta - what is new for perl v5.27.7

=head1 DESCRIPTION

This document describes differences between the 5.27.6 release and the 5.27.7
release.

If you are upgrading from an earlier release such as 5.27.5, first read
L<perl5276delta>, which describes differences between 5.27.5 and 5.27.6.

=head1 Notice

XXX Any important notices here

=head1 Core Enhancements

XXX New core language features go here.  Summarize user-visible core language
enhancements.  Particularly prominent performance optimisations could go
here, but most should go in the L</Performance Enhancements> section.

[ List each enhancement as a =head2 entry ]

=head2  The C<sprintf> C<%j> format size modifier is now available with
pre-C99 compilers

The actual size used depends on the platform, so remains unportable.

=head2 Mixed Unicode scripts are now detectable

A mixture of scripts, such as Cyrillic and Latin, in a string is often
the sign of a spoofing attack.  A new regular expression construct
now allows for easy detection of these.  For example, you can say

 qr/(?script_run: \d+ \b )/x

And the digits matched will all be from the same set of 10.  You won't
get a look-alike digit from a different script that has a different
value than what it appears to be.

=head2 New read-only predefined variable C<${^SAFE_LOCALES}>

This variable is 1 if the Perl interpreter is operating in an
environment where it is safe to use and change locales (see
L<perllocale>.)  Currently this is true only when the perl is
unthreaded.

=head2 Script runs now are specified with a different syntax

This isn't really an enhancement, but is being put in this category
because it changes an enhancement from 5.27.8, and there is a new
abbreviated form for it.  The syntax is now either of:

 (*script_run:...)
 (*sr:...)

Previously a C<"+"> was used instead of the C<"*">.

=head2 There is a new form for script runs which combines with
C<(?E<gt>...)> (or C<*atomic:...)>)

C<(*asr:...> is an easier way to write C<(*sr:(?E<gt>...))>,
which is expected to be a commonly used idiom.
C<(*atomic_script_run:...> is also available.  See
L<perlre/Script Runs>.

=head2 Experimentally, there are now alphabetic synonyms for some
regular expression assertions

If you find it difficult to remember how to write certain of the pattern
assertions, there are now alphabetic synonyms.

 CURRENT                NEW SYNONYMS
 ------                 ------------
 (?=...)        (*pla:...) or (*positive_lookahead:...)
 (?!...)        (*nla:...) or (*negative_lookahead:...)
 (?<=...)       (*plb:...) or (*positive_lookbehind:...)
 (?<!...)       (*nlb:...) or (*negative_lookbehind:...)
 (?>...)        (*atomic:...)

These are considered experimental, so using any of these will raise
(unless turned off) a warning in the C<experimental::alpha_assertions>
category.

=head1 Security

XXX Any security-related notices go here.  In particular, any security
vulnerabilities closed should be noted here rather than in the
L</Selected Bug Fixes> section.

[ List each security issue as a =head2 entry ]

=head1 Incompatible Changes

XXX For a release on a stable branch, this section aspires to be:

    There are no changes intentionally incompatible with 5.XXX.XXX
    If any exist, they are bugs, and we request that you submit a
    report.  See L</Reporting Bugs> below.

[ List each incompatible change as a =head2 entry ]

=head2 Over-radix digits in floating point literals

Octal and binary floating point literals used to permit any hexadecimal
digit to appear after the radix point.  The digits are now restricted
to those appropriate for the radix, as digits before the radix point
always were.

=head2 Return type of C<unpackstring()>

The return types of the C API functions C<unpackstring()> and
C<unpack_str()> have changed from C<I32> to C<SSize_t>, in order to
accommodate datasets of more than two billion items.

=head1 Deprecations

XXX Any deprecated features, syntax, modules etc. should be listed here.

=head2 Assignment to C<$[> will be fatal in Perl 5.30

Assigning a non-zero value to L<C<$[>|perlvar/$[> has been deprecated
since Perl 5.12, but was never given a deadline for removal.  This has
now been scheduled for Perl 5.30.

=head2 Module removals

XXX Remove this section if not applicable.

The following modules will be removed from the core distribution in a
future release, and will at that time need to be installed from CPAN.
Distributions on CPAN which require these modules will need to list them as
prerequisites.

The core versions of these modules will now issue C<"deprecated">-category
warnings to alert you to this fact.  To silence these deprecation warnings,
install the modules in question from CPAN.

Note that these are (with rare exceptions) fine modules that you are encouraged
to continue to use.  Their disinclusion from core primarily hinges on their
necessity to bootstrapping a fully functional, CPAN-capable Perl installation,
not usually on concerns over their design.

=over

=item L<Locale::Codes> and its associated Country, Currency and Language modules

XXX Note that deprecated modules should be listed here even if they are listed
as an updated module in the L</Modules and Pragmata> section.

=back

[ List each other deprecation as a =head2 entry ]

=head1 Deprecations

=head2 Use of code points over 0xFF in string bitwise operators

Some uses of these already are illegal after a previous deprecation
cycle.  This deprecates the remaining uses.  See L<perldeprecation>.

=head2 Use of unescaped C<"{"> immediately after a C<"(">

Using unescaped left braces is officially deprecated everywhere, but it
is not enforced in contexts where their use does not interfere with
expected extensions to the language.  A deprecation is added in this
release when the brace appears immediately after an opening parenthesis.
Before this, even if the brace was part of a legal quantifier, it was
not interpreted as such, but as the literal characters, unlike other
quantifiers that follow a C<"("> which are considered errors.  Now,
their use will raise a deprecation message, unless turned off.

=head1 Performance Enhancements

XXX Changes which enhance performance without changing behaviour go here.
There may well be none in a stable release.

[ List each enhancement as an =item entry ]

=over 4

=item *

Various optimizations have been applied to matching regular expression
patterns, so under the right circumstances, significant performance
gains may be noticed.  But in an application with many varied patterns,
little overall improvement likely will be seen.

=item *

Other optimizations have been applied to UTF-8 handling, but these are
not typically a major factor in most applications.

=back

=head1 Modules and Pragmata

XXX All changes to installed files in F<cpan/>, F<dist/>, F<ext/> and F<lib/>
go here.  If Module::CoreList is updated, generate an initial draft of the
following sections using F<Porting/corelist-perldelta.pl>.  A paragraph summary
for important changes should then be added by hand.  In an ideal world,
dual-life modules would have a F<Changes> file that could be cribbed.

The list of new and updated modules is modified automatically as part of
preparing a Perl release, so the only reason to manually add entries here is if
you're summarising the important changes in the module update. (Also, if the
manually-added details don't match the automatically-generated ones, the
release manager will have to investigate the situation carefully.)

[ Within each section, list entries as an =item entry ]

=head2 New Modules and Pragmata

=over 4

=item *

XXX Remove this section if not applicable.

=back

=head2 Updated Modules and Pragmata

=over 4

=item *

L<Locale::Codes> has been upgraded from version 3.54 to 3.55

B<NOTE>: L<Locale::Codes> is deprecated in core and will be removed
from Perl 5.30.

=item *

L<threads> has been upgraded from version 2.19 to 2.20.
The documentation now better describes the problems that arise when
returning values from threads, and no longer warns about creating threads
in C<BEGIN> blocks.  [perl #96538]

=item *

L<Data::Dumper> has been upgraded from version 2.167_02 to 2.169.
Quoting of glob names now obeys the Useqq option [perl #119831].
Attempts to set an option to C<undef> through a combined getter/setter
method are no longer mistaken for getter calls [perl #113090].

=item *

L<Pod::Html> has been upgraded from version 1.2203 to 1.23.
A title for the HTML document will now be automatically generated by
default from a "NAME" section in the POD document, as it used to be
before the module was rewritten to use L<Pod::Simple::XHTML> to do the
core of its job.  [perl #110520]

=item *

L<GDBM_File> has been upgraded from version 1.16 to 1.17.
Its documentation now explains that C<each> and C<delete> don't mix in
hashes tied to this module [perl #117449].
It will now retry opening with an acceptable block size if asking gdbm
to default the block size failed [perl #119623].

=item *

<<<<<<<
L<Digest::SHA> has been upgraded from version 5.96 to 6.01.

=item *

L<DirHandle> has been upgraded from version 1.04 to 1.05.

=item *

L<DynaLoader> has been upgraded from version 1.42 to 1.45.

Its documentation now shows the use of C<__PACKAGE__> and direct object
syntax
L<[perl #132247]|https://rt.perl.org/Ticket/Display.html?id=132247>.

=item *

L<Encode> has been upgraded from version 2.88 to 2.97.

=item *

L<encoding> has been upgraded from version 2.19 to 2.22.

=item *

L<Errno> has been upgraded from version 1.28 to 1.29.

=item *

L<experimental> has been upgraded from version 0.016 to 0.019.

=item *

L<Exporter> has been upgraded from version 5.72 to 5.73.

=item *

L<ExtUtils::CBuilder> has been upgraded from version 0.280225 to 0.280230.

=item *

L<ExtUtils::Constant> has been upgraded from version 0.23 to 0.25.

=item *

L<ExtUtils::Embed> has been upgraded from version 1.34 to 1.35.

=item *

L<ExtUtils::Install> has been upgraded from version 2.04 to 2.14.

=item *

L<ExtUtils::MakeMaker> has been upgraded from version 7.24 to 7.34.

=item *

L<ExtUtils::Miniperl> has been upgraded from version 1.06 to 1.08.

=item *

L<ExtUtils::ParseXS> has been upgraded from version 3.34 to 3.39.

=item *

L<ExtUtils::Typemaps> has been upgraded from version 3.34 to 3.38.

=item *

L<ExtUtils::XSSymSet> has been upgraded from version 1.3 to 1.4.

=item *

L<feature> has been upgraded from version 1.47 to 1.52.

=item *

L<fields> has been upgraded from version 2.23 to 2.24.

=item *

L<File::Copy> has been upgraded from version 2.32 to 2.33.

It will now use the sub-second precision variant of utime() supplied by
L<Time::HiRes> where available.
L<[perl #132401|https://rt.perl.org/Ticket/Display.html?id=132401>.

=item *

L<File::Fetch> has been upgraded from version 0.52 to 0.56.

=item *

L<File::Glob> has been upgraded from version 1.28 to 1.31.

=item *

L<File::Path> has been upgraded from version 2.12_01 to 2.15.

=item *

L<File::Spec> and L<Cwd> have been upgraded from version 3.67 to 3.74.

=item *

L<File::stat> has been upgraded from version 1.07 to 1.08.

=item *

L<FileCache> has been upgraded from version 1.09 to 1.10.

=item *

L<Filter::Simple> has been upgraded from version 0.93 to 0.95.

=item *

L<Filter::Util::Call> has been upgraded from version 1.55 to 1.58.

=item *

L<GDBM_File> has been upgraded from version 1.15 to 1.17.

Its documentation now explains that C<each> and C<delete> don't mix in
hashes tied to this module
L<[perl #117449]|https://rt.perl.org/Ticket/Display.html?id=117449>.

It will now retry opening with an acceptable block size if asking gdbm
to default the block size failed
L<[perl #119623]|https://rt.perl.org/Ticket/Display.html?id=119623>.

=item *

L<Getopt::Long> has been upgraded from version 2.49 to 2.5.

=item *

L<Hash::Util::FieldHash> has been upgraded from version 1.19 to 1.20.

=item *

L<I18N::Langinfo> has been upgraded from version 0.13 to 0.17.

This module is now available on all platforms, emulating the system
L<nl_langinfo(3)> on systems that lack it.  Some caveats apply, as
L<detailed in its documentation|I18N::Langinfo>, the most severe being
that, except for MS Windows, the C<CODESET> item is not implemented on
those systems, always returning C<"">.

It now sets the UTF-8 flag in its returned scalar if the string contains
legal non-ASCII UTF-8, and the locale is UTF-8
L<[perl #127288]|https://rt.perl.org/Ticket/Display.html?id=127288>.

This update also fixes a bug in which the underlying locale was ignored
for the C<RADIXCHAR> (always was returned as a dot) and the C<THOUSEP>
(always empty).  Now the locale-appropriate values are returned.

=item *

L<I18N::LangTags> has been upgraded from version 0.42 to 0.43.

=item *

L<if> has been upgraded from version 0.0606 to 0.0608.

=item *

L<IO> has been upgraded from version 1.38 to 1.39.

=item *

L<IO::Socket::IP> has been upgraded from version 0.38 to 0.39.

=item *

L<IPC::Cmd> has been upgraded from version 0.96 to 1.00.

=item *

L<JSON::PP> has been upgraded from version 2.27400_02 to 2.97001.

=item *

The C<libnet> distribution has been upgraded from version 3.10 to 3.11.

=item *

L<List::Util> has been upgraded from version 1.46_02 to 1.49.

=item *

L<Locale::Codes> has been upgraded from version 3.42 to 3.56.

B<NOTE>: L<Locale::Codes> scheduled to be removed from core in Perl 5.30.

=item *

L<Locale::Maketext> has been upgraded from version 1.28 to 1.29.

=item *

L<Math::BigInt> has been upgraded from version 1.999806 to 1.999811.

=item *

L<Math::BigInt::FastCalc> has been upgraded from version 0.5005 to 0.5006.

=item *

L<Math::BigRat> has been upgraded from version 0.2611 to 0.2613.

=item *

L<Module::CoreList> has been upgraded from version 5.20170530 to 5.20180606.

=item *

L<mro> has been upgraded from version 1.20 to 1.22.

=item *

L<Net::Ping> has been upgraded from version 2.55 to 2.62.

=item *

L<NEXT> has been upgraded from version 0.67 to 0.67_01.

=item *

L<ODBM_File> has been upgraded from version 1.14 to 1.15.

=item *

L<Opcode> has been upgraded from version 1.39 to 1.43.

=item *

L<overload> has been upgraded from version 1.28 to 1.30.

=item *

L<PerlIO::encoding> has been upgraded from version 0.25 to 0.26.

=item *

L<PerlIO::scalar> has been upgraded from version 0.26 to 0.29.

=item *

L<PerlIO::via> has been upgraded from version 0.16 to 0.17.

=item *

L<Pod::Functions> has been upgraded from version 1.11 to 1.13.

=item *

L<Pod::Html> has been upgraded from version 1.2202 to 1.24.

A title for the HTML document will now be automatically generated by
default from a "NAME" section in the POD document, as it used to be
before the module was rewritten to use L<Pod::Simple::XHTML> to do the
core of its job
L<[perl #110520]|https://rt.perl.org/Ticket/Display.html?id=110520>.

=item *

L<Pod::Perldoc> has been upgraded from version 3.28 to 3.2801.

=item *

The C<podlators> distribution has been upgraded from version 4.09 to 4.10.

Man page references and function names now follow the Linux man page
formatting standards, instead of the Solaris standard.

=item *

L<POSIX> has been upgraded from version 1.76 to 1.84.

Some more cautions were added about using locale-specific functions in
threaded applications.

=item *

L<re> has been upgraded from version 0.34 to 0.36.

=item *

L<Scalar::Util> has been upgraded from version 1.46_02 to 1.50.

=item *

L<SelfLoader> has been upgraded from version 1.23 to 1.25.

=item *

L<Socket> has been upgraded from version 2.020_03 to 2.027.

=item *

L<sort> has been upgraded from version 2.02 to 2.04.

=item *

L<Storable> has been upgraded from version 2.62 to 3.08.

=item *

L<Sub::Util> has been upgraded from version 1.48 to 1.49.

=item *

L<subs> has been upgraded from version 1.02 to 1.03.

=item *

L<Sys::Hostname> has been upgraded from version 1.20 to 1.22.

=item *

L<Term::ReadLine> has been upgraded from version 1.16 to 1.17.

=item *

L<Test> has been upgraded from version 1.30 to 1.31.

=item *

L<Test::Harness> has been upgraded from version 3.38 to 3.42.

=item *

L<Test::Simple> has been upgraded from version 1.302073 to 1.302133.

=item *

L<threads> has been upgraded from version 2.15 to 2.22.

The documentation now better describes the problems that arise when
returning values from threads, and no longer warns about creating threads
in C<BEGIN> blocks.
L<[perl #96538]|https://rt.perl.org/Ticket/Display.html?id=96538>

=item *

L<threads::shared> has been upgraded from version 1.56 to 1.58.

=item *

L<Tie::Array> has been upgraded from version 1.06 to 1.07.

=item *

L<Tie::StdHandle> has been upgraded from version 4.4 to 4.5.

=item *

L<Time::gmtime> has been upgraded from version 1.03 to 1.04.

=item *

L<Time::HiRes> has been upgraded from version 1.9741 to 1.9759.

=item *

L<Time::localtime> has been upgraded from version 1.02 to 1.03.

=item *

L<Time::Piece> has been upgraded from version 1.31 to 1.3204.

=item *

L<Unicode::Collate> has been upgraded from version 1.19 to 1.25.

=item *

L<Unicode::Normalize> has been upgraded from version 1.25 to 1.26.

=item *

L<Unicode::UCD> has been upgraded from version 0.68 to 0.70.

The function C<num> now accepts an optional parameter to help in
diagnosing error returns.

=item *

L<User::grent> has been upgraded from version 1.01 to 1.02.

=item *

L<User::pwent> has been upgraded from version 1.00 to 1.01.

=item *

L<utf8> has been upgraded from version 1.19 to 1.21.

=item *

L<vars> has been upgraded from version 1.03 to 1.04.

=item *

L<version> has been upgraded from version 0.9917 to 0.9923.

=item *

L<VMS::DCLsym> has been upgraded from version 1.08 to 1.09.

=item *

L<VMS::Stdio> has been upgraded from version 2.41 to 2.44.

=item *

L<warnings> has been upgraded from version 1.37 to 1.42.

It now includes new functions with names ending in C<_at_level>, allowing
callers to specify the exact call frame.
L<[perl #132468]|https://rt.perl.org/Ticket/Display.html?id=132468>

=item *

L<XS::Typemap> has been upgraded from version 0.15 to 0.16.

=item *

L<XSLoader> has been upgraded from version 0.27 to 0.30.

Its documentation now shows the use of C<__PACKAGE__>, and direct object
syntax for example C<DynaLoader> usage
L<[perl #132247]|https://rt.perl.org/Ticket/Display.html?id=132247>.

Platforms that use C<mod2fname> to edit the names of loadable
libraries now look for bootstrap (.bs) files under the correct,
non-edited name.

=back

=head2 Removed Modules and Pragmata

=over 4

=item *

The C<VMS::stdio> compatibility shim has been removed.

=back

=head1 Documentation

=head2 Changes to Existing Documentation

We have attempted to update the documentation to reflect the changes
listed in this document.  If you find any we have missed, send email
to L<perlbug@perl.org|mailto:perlbug@perl.org>.

Additionally, the following selected changes have been made:

=head3 L<perlapi>

=over 4

=item *

The API functions C<perl_parse()>, C<perl_run()>, and C<perl_destruct()>
are now documented comprehensively, where previously the only
documentation was a reference to the L<perlembed> tutorial.

=item *

The documentation of C<newGIVENOP()> has been belatedly updated to
account for the removal of lexical C<$_>.

=item *

The API functions C<newCONSTSUB()> and C<newCONSTSUB_flags()> are
documented much more comprehensively than before.

=back

=head3 L<perldata>

=over 4

=item *

The section "Truth and Falsehood" in L<perlsyn> has been moved into
L<perldata>.

=back

=head3 L<perldebguts>

=over 4

=item *

The description of the conditions under which C<DB::sub()> will be called
has been clarified.
L<[perl #131672]|https://rt.perl.org/Ticket/Display.html?id=131672>

=back

=head3 L<perldiag>

=over 4

=item * L<perldiag/Variable length lookbehind not implemented in regex mE<sol>%sE<sol>>

This now gives more ideas as to workarounds to the issue that was
introduced in Perl 5.18 (but not documented explicitly in its perldelta)
for the fact that some Unicode C</i> rules cause a few sequences such as

 (?<!st)

to be considered variable length, and hence disallowed.

=item * "Use of state $_ is experimental" in L<perldiag>

This entry has been removed, as the experimental support of this construct was
removed in perl 5.24.0.

=item *

The diagnostic C<Initialization of state variables in list context
currently forbidden> has changed to C<Initialization of state variables
in list currently forbidden>, because list-context initialization of
single aggregate state variables is now permitted.

=back

=head3 L<perlembed>

=over 4

=item *

The examples in L<perlembed> have been made more portable in the way
they exit, and the example that gets an exit code from the embedded Perl
interpreter now gets it from the right place.  The examples that pass
a constructed argv to Perl now show the mandatory null C<argv[argc]>.

=item *

An example in L<perlembed> used the string value of C<ERRSV> as a
format string when calling croak().  If that string contains format
codes such as C<%s> this could crash the program.

This has been changed to a call to croak_sv().

An alternative could have been to supply a trivial format string:

  croak("%s", SvPV_nolen(ERRSV));

or as a special case for C<ERRSV> simply:

  croak(NULL);

=back

=head3 L<perlfunc>

=over 4

=item *

There is now a note that warnings generated by built-in functions are
documented in L<perldiag> and L<warnings>.
L<[perl #116080]|https://rt.perl.org/Ticket/Display.html?id=116080>

=item *

The documentation for the C<exists> operator no longer says that
autovivification behaviour "may be fixed in a future release".
We've determined that we're not going to change the default behaviour.
L<[perl #127712]|https://rt.perl.org/Ticket/Display.html?id=127712>

=item *

A couple of small details in the documentation for the C<bless> operator
have been clarified.
L<[perl #124428]|https://rt.perl.org/Ticket/Display.html?id=124428>

=item *

The description of C<@INC> hooks in the documentation for C<require>
has been corrected to say that filter subroutines receive a useless
first argument.
L<[perl #115754]|https://rt.perl.org/Ticket/Display.html?id=115754>

=item *

The documentation of C<ref> has been rewritten for clarity.

=item *

The documentation of C<use> now explains what syntactically qualifies
as a version number for its module version checking feature.

=item *

The documentation of C<warn> has been updated to reflect that since Perl
5.14 it has treated complex exception objects in a manner equivalent
to C<die>.
L<[perl #121372]|https://rt.perl.org/Ticket/Display.html?id=121372>

=item *

The documentation of C<die> and C<warn> has been revised for clarity.

=item *

The documentation of C<each> has been improved, with a slightly more
explicit description of the sharing of iterator state, and with
caveats regarding the fragility of while-each loops.
L<[perl #132644]|https://rt.perl.org/Ticket/Display.html?id=132644>

=item *

Clarification to C<require> was added to explain the differences between

    require Foo::Bar;
    require "Foo/Bar.pm";

=back

=head3 L<perlgit>

=over 4

=item *

The precise rules for identifying C<smoke-me> branches are now stated.

=back

=head3 L<perlguts>

=over 4

=item *

The section on reference counting in L<perlguts> has been heavily revised,
to describe references in the way a programmer needs to think about them
rather than in terms of the physical data structures.

=item *

Improve documentation related to UTF-8 multibytes.

=back

=head3 L<perlintern>

=over 4

=item *

The internal functions C<newXS_len_flags()> and C<newATTRSUB_x()> are
now documented.

=back

=head3 L<perlobj>

=over 4

=item *

The documentation about C<DESTROY> methods has been corrected, updated,
and revised, especially in regard to how they interact with exceptions.
L<[perl #122753]|https://rt.perl.org/Ticket/Display.html?id=122753>

=back

=head3 L<perlop>

=over 4

=item *

The description of the C<x> operator in L<perlop> has been clarified.
L<[perl #132460]|https://rt.perl.org/Ticket/Display.html?id=132460>

=item *

L<perlop> has been updated to note that C<qw>'s whitespace rules differ
from that of C<split>'s in that only ASCII whitespace is used.

=item *

The general explanation of operator precedence and associativity has
been corrected and clarified.
L<[perl #127391]|https://rt.perl.org/Ticket/Display.html?id=127391>

=item *

The documentation for the C<\> referencing operator now explains the
unusual context that it supplies to its operand.
L<[perl #131061]|https://rt.perl.org/Ticket/Display.html?id=131061>

=back

=head3 L<perlrequick>

=over 4

=item *

Clarifications on metacharacters and character classes

=back

=head3 L<perlretut>

=over 4

=item *

Clarify metacharacters.

=back

=head3 L<perlrun>

=over 4

=item *

Clarify the differences between B<< -M >> and B<< -m >>.
L<[perl #131518]|https://rt.perl.org/Ticket/Display.html?id=131518>

=back

=head3 L<perlsec>

=over 4

=item *

The documentation about set-id scripts has been updated and revised.
L<[perl #74142]|https://rt.perl.org/Ticket/Display.html?id=74142>

=item *

A section about using C<sudo> to run Perl scripts has been added.

=back

=head3 L<perlsyn>

=over 4

=item *

The section "Truth and Falsehood" in L<perlsyn> has been removed from
that document, where it didn't belong, and merged into the existing
paragraph on the same topic in L<perldata>.

=item *

The means to disambiguate between code blocks and hash constructors,
already documented in L<perlref>, are now documented in L<perlsyn> too.
L<[perl #130958]|https://rt.perl.org/Ticket/Display.html?id=130958>

=back

=head3 L<perluniprops>

=over 4

=item *

L<perluniprops> has been updated to note that C<\p{Word}> now includes
code points matching the C<\p{Join_Control}> property.  The change to
the property was made in Perl 5.18, but not documented until now.  There
are currently only two code points that match this property U+200C (ZERO
WIDTH NON-JOINER) and U+200D (ZERO WIDTH JOINER).

=item *

For each binary table or property, the documentation now includes which
characters in the range C<\x00-\xFF> it matches, as well as a list of
the first few ranges of code points matched above that.

=back

=head3 L<perlvar>

=over 4

=item *

The entry for C<$+> in perlvar has been expanded upon to describe handling of
multiply-named capturing groups.

=back

=head3 L<perlfunc>, L<perlop>, L<perlsyn>

=over 4

=item *

In various places, improve the documentation of the special cases
in the condition expression of a while loop, such as implicit C<defined>
and assignment to C<$_>.
L<[perl #132644]|https://rt.perl.org/Ticket/Display.html?id=132644>

=back

=head1 Diagnostics

The following additions or changes have been made to diagnostic output,
including warnings and fatal error messages.  For the complete list of
diagnostic messages, see L<perldiag>.

=head2 New Diagnostics

=head3 New Errors

=over 4

=item *

L<Can't "goto" into a "given" block|perldiag/"Can't E<quot>gotoE<quot> into a E<quot>givenE<quot> block">

(F) A "goto" statement was executed to jump into the middle of a C<given>
block.  You can't get there from here.  See L<perlfunc/goto>.

=item *

L<Can't "goto" into a binary or list expression|perldiag/"Can't E<quot>gotoE<quot> into a binary or list expression">

Use of C<goto> to jump into the parameter of a binary or list operator has
been prohibited, to prevent crashes and stack corruption.
L<[perl #130936]|https://rt.perl.org/Ticket/Display.html?id=130936>

You may only enter the I<first> argument of an operator that takes a fixed
number of arguments, since this is a case that will not cause stack
corruption.
L<[perl #132854]|https://rt.perl.org/Ticket/Display.html?id=132854>

=back

=head3 New Warnings

=over 4

=item *

L<Old package separator used in string|perldiag/"Old package separator used in string">

(W syntax) You used the old package separator, "'", in a variable
named inside a double-quoted string; e.g., C<"In $name's house">.  This
is equivalent to C<"In $name::s house">.  If you meant the former, put
a backslash before the apostrophe (C<"In $name\'s house">).

=item *

L<perldiag/Locale '%s' contains (at least) the following characters which
have unexpected meanings: %s  The Perl program will use the expected
meanings>

=back

=head2 Changes to Existing Diagnostics

=over 4

=item *

A false-positive warning that was issued when using a
numerically-quantified sub-pattern in a recursive regex has been
silenced. L<[perl #131868]|https://rt.perl.org/Public/Bug/Display.html?id=131868>

=item *

The warning about useless use of a concatenation operator in void context
is now generated for expressions with multiple concatenations, such as
C<$a.$b.$c>, which used to mistakenly not warn.
L<[perl #6997]|https://rt.perl.org/Ticket/Display.html?id=6997>

=item *

Warnings that a variable or subroutine "masks earlier declaration in same
...", or that an C<our> variable has been redeclared, have been moved to a
new warnings category "shadow".  Previously they were in category "misc".

=item *

The deprecation warning from C<Sys::Hostname::hostname()> saying that
it doesn't accept arguments now states the Perl version in which the
warning will be upgraded to an error.
L<[perl #124349]|https://rt.perl.org/Ticket/Display.html?id=124349>

=item *

The L<perldiag> entry for the error regarding a set-id script has been
expanded to make clear that the error is reporting a specific security
vulnerability, and to advise how to fix it.

=item *

The C<< Unable to flush stdout >> error message was missing a trailing
newline. [debian #875361]

=back

=head1 Utility Changes

=head2 L<perlbug>

=over 4

=item *

C<--help> and C<--version> options have been added.

=back

=head1 Configuration and Compilation

=over 4

=item * C89 requirement

Perl has been documented as requiring a C89 compiler to build since October
1998.  A variety of simplifications have now been made to Perl's internals to
rely on the features specified by the C89 standard. We believe that this
internal change hasn't altered the set of platforms that Perl builds on, but
please report a bug if Perl now has new problems building on your platform.

=item *

On GCC, C<-Werror=pointer-arith> is now enabled by default,
disallowing arithmetic on void and function pointers.

=item *

Where an HTML version of the documentation is installed, the HTML
documents now use relative links to refer to each other.  Links from
the index page of L<perlipc> to the individual section documents are
now correct.
L<[perl #110056]|https://rt.perl.org/Ticket/Display.html?id=110056>

=item *

F<lib/unicore/mktables> now correctly canonicalizes the names of the
dependencies stored in the files it generates.

F<regen/mk_invlists.pl>, unlike the other F<regen/*.pl> scripts, used
C<$0> to name itself in the dependencies stored in the files it
generates.  It now uses a literal so that the path stored in the
generated files doesn't depend on how F<regen/mk_invlists.pl> is
invoked.

This lack of canonical names could cause test failures in F<t/porting/regen.t>.
L<[perl #132925]|https://rt.perl.org/Ticket/Display.html?id=132925>

=item * New probes

=over 2

=item HAS_BUILTIN_ADD_OVERFLOW

=item HAS_BUILTIN_MUL_OVERFLOW

=item HAS_BUILTIN_SUB_OVERFLOW

=item HAS_THREAD_SAFE_NL_LANGINFO_L

=item HAS_LOCALECONV_L

=item HAS_MBRLEN

=item HAS_MBRTOWC

=item HAS_MEMRCHR

=item HAS_NANOSLEEP
=======
L<Unicode::UCD> has been upgraded from version 0.69 to 0.70.
>>>>>>>

The function C<num> now accepts an optional parameter to help in
diagnosing error returns.

L<I18N::Langinfo> has been upgraded from version 0.15 to 0.16.

This module is now available on all platforms, emulating the system
L<nl_langinfo(3)> on systems that lack it.  Some caveats apply, as
L<detailed in its documentation|I18N::Langinfo>, the most severe being
that, except for MS Windows, the C<CODESET> item is not implemented on
those systems, always returning C<"">.

It now sets the UTF-8 flag in its returned scalar if the string contains
legal non-ASCII UTF-8, and the locale is UTF-8 ([perl #127288].

=back

=head2 Removed Modules and Pragmata

=over 4

=item *

XXX

=back

=head1 Documentation

XXX Changes to files in F<pod/> go here.  Consider grouping entries by
file and be sure to link to the appropriate page, e.g. L<perlfunc>.

=head2 New Documentation

XXX Changes which create B<new> files in F<pod/> go here.

=head3 L<XXX>

XXX Description of the purpose of the new file here

=head2 Changes to Existing Documentation

We have attempted to update the documentation to reflect the changes
listed in this document.  If you find any we have missed, send email
to L<perlbug@perl.org|mailto:perlbug@perl.org>.

XXX Changes which significantly change existing files in F<pod/> go here.
However, any changes to F<pod/perldiag.pod> should go in the L</Diagnostics>
section.

Additionally, the following selected changes have been made:

=head3 L<perlapi>

The API functions C<perl_parse()>, C<perl_run()>, and C<perl_destruct()>
are now documented comprehensively, where previously the only
documentation was a reference to the L<perlembed> tutorial.

The documentation of C<newGIVENOP()> has been belatedly updated to
account for the removal of lexical C<$_>.

The API functions C<newCONSTSUB()> and C<newCONSTSUB_flags()> are
documented much more comprehensively than before.

=head3 L<perlop>

The general explanation of operator precedence and associativity has
been corrected and clarified.  [perl #127391]

The documentation for the C<\> referencing operator now explains the
unusual context that it supplies to its operand.  [perl #131061]

=head3 L<perlsyn>

The means to disambiguate between code blocks and hash constructors,
already documented in L<perlref>, are now documented in L<perlsyn> too.
[perl #130958]

=head3 L<perlfunc>

There is now a note that warnings generated by built-in functions are
documented in L<perldiag> and L<warnings>.  [perl #116080]

The documentation for the C<exists> operator no longer says that
autovivification behaviour "may be fixed in a future release".
We've determined that we're not going to change the default behaviour.
[perl #127712]

A couple of small details in the documentation for the C<bless> operator
have been clarified.  [perl #124428]

The description of C<@INC> hooks in the documentation for C<require>
has been corrected to say that filter subroutines receive a useless
first argument.  [perl #115754]

The documentation of C<ref> has been rewritten for clarity.

The documentation of C<use> now explains what syntactically qualifies
as a version number for its module version checking feature.

The documentation of C<warn> has been updated to reflect that since Perl
5.14 it has treated complex exception objects in a manner equivalent
to C<die>.  [perl #121372]

The documentation of C<die> and C<warn> has been revised for clarity.

=head3 L<perluniprops>

For each binary table or property, the documentation now includes which
characters in the range C<\x00-\xFF> it matches, as well as a list of
the first few ranges of code points matched above that.

=head3 L<perlobj>

The documentation about C<DESTROY> methods has been corrected, updated,
and revised, especially in regard to how they interact with exceptions.
[perl #122753]

=head3 L<perlsec>

The documentation about set-id scripts has been updated and revised.
[perl #74142]

A section about using C<sudo> to run Perl scripts has been added.

=head3 L<perlembed>

The examples in L<perlembed> have been made more portable in the way
they exit, and the example that gets an exit code from the embedded Perl
interpreter now gets it from the right place.  The examples that pass
a constructed argv to Perl now show the mandatory null C<argv[argc]>.

=head3 L<perldebguts>

The description of the conditions under which C<DB::sub()> will be called
has been clarified.  [perl #131672]

=head3 L<perlintern>

The internal functions C<newXS_len_flags()> and C<newATTRSUB_x()> are
now documented.

=head3 L<perlgit>

The precise rules for identifying C<smoke-me> branches are now stated.

=over 4

=item *

XXX Description of the change here

=back

=head1 Diagnostics

The following additions or changes have been made to diagnostic output,
including warnings and fatal error messages.  For the complete list of
diagnostic messages, see L<perldiag>.

XXX New or changed warnings emitted by the core's C<C> code go here.  Also
include any changes in L<perldiag> that reconcile it to the C<C> code.

=head2 New Diagnostics

XXX Newly added diagnostic messages go under here, separated into New Errors
and New Warnings

=head3 New Errors

=over 4

=item *

L<Can't "goto" into a "given" block|perldiag/"Can't E<quot>gotoE<quot> into a E<quot>givenE<quot> block">

(F) A "goto" statement was executed to jump into the middle of a C<given>
block.  You can't get there from here.  See L<perlfunc/goto>.

=back

=head3 New Warnings

=over 4

=item *

L<Locale '%s' contains (at least) the following characters which have
non-standard meanings: %s  The Perl program will use the standard
meanings|perldiag/"Locale '%s' contains (at least) the following
characters which have non-standard meanings: %s  The Perl program will
use the standard meanings">.

=back

=head2 Changes to Existing Diagnostics

XXX Changes (i.e. rewording) of diagnostic messages go here

=over 4

=item *

The new (as of 5.27.8) restriction forbidding use of C<goto> to enter the
argument of a binary or list expression (see L<perldiag/"Can't
E<quot>gotoE<quot> into a binary or list expression">) has been relaxed to
allow entering the I<first> argument of an operator that takes a fixed
number of arguments, since this is a case that will not cause stack
corruption.  [perl #132854]

=item *

Warnings that a variable or subroutine "masks earlier declaration in same
...", or that an C<our> variable has been redeclared, have been moved to a
new warnings category "shadow".  Previously they were in category "misc".

=item *

The warning added in 5.27.8 concerning UTF-8 locale compatibility was
misleading.  The new wording and explanation are at
L<perldiag/Locale '%s' contains (at least) the following characters which
have unexepected meanings: %s  The Perl program will use the exepected
meanings>

=back

=head1 Utility Changes

XXX Changes to installed programs such as F<perlbug> and F<xsubpp> go here.
Most of these are built within the directory F<utils>.

[ List utility changes as a =head2 entry for each utility and =item
entries for each change
Use L<XXX> with program names to get proper documentation linking. ]

=head2 L<XXX>

=over 4

=item *

XXX

=back

=head1 Configuration and Compilation

XXX Changes to F<Configure>, F<installperl>, F<installman>, and analogous tools
go here.  Any other changes to the Perl build process should be listed here.
However, any platform-specific changes should be listed in the
L</Platform Support> section, instead.

[ List changes as an =item entry ].

=over 4

=item *

XXX

=back

=head1 Testing

XXX Any significant changes to the testing of a freshly built perl should be
listed here.  Changes which create B<new> files in F<t/> go here as do any
large changes to the testing harness (e.g. when parallel testing was added).
Changes to existing files in F<t/> aren't worth summarizing, although the bugs
that they represent may be covered elsewhere.

XXX If there were no significant test changes, say this:

Tests were added and changed to reflect the other additions and changes
in this release.

XXX If instead there were significant changes, say this:

Tests were added and changed to reflect the other additions and
changes in this release.  Furthermore, these significant changes were
made:

[ List each test improvement as an =item entry ]

=over 4

=item *

XXX

=back

=head1 Platform Support

XXX Any changes to platform support should be listed in the sections below.

[ Within the sections, list each platform as an =item entry with specific
changes as paragraphs below it. ]

=head2 New Platforms

XXX List any platforms that this version of perl compiles on, that previous
versions did not.  These will either be enabled by new files in the F<hints/>
directories, or new subdirectories and F<README> files at the top level of the
source tree.

=over 4

=item XXX-some-platform

XXX

=item VMS

CRTL features can now be set by embedders before invoking Perl by using the
C<decc$feature_set> and C<decc$feature_set_value> functions.  Previously any attempt
to set features after image initialization were ignored.

=back

=head2 Discontinued Platforms

XXX List any platforms that this version of perl no longer compiles on.

=over 4

=item XXX-some-platform

XXX

=back

=head2 Platform-Specific Notes

XXX List any changes for specific platforms.  This could include configuration
and compilation changes or changes in portability/compatibility.  However,
changes within modules for platforms should generally be listed in the
L</Modules and Pragmata> section.

=over 4

=item XXX-some-platform

XXX

=back

=head1 Internal Changes

XXX Changes which affect the interface available to C<XS> code go here.  Other
significant internal changes for future core maintainers should be noted as
well.

=over 4

=item *

XS modules can now automatically get reentrant versions of system
functions on threaded perls.

By saying

 #define PERL_REENTRANT

near the beginning of an C<XS> file, it will be compiled so that
whatever reentrant functions perl knows about on that system will
automatically and invisibly be used instead of the plain, non-reentrant
versions.  For example, if you write C<getpwnam()> in your code, on a
system that has C<pwnam_r()> all calls to the former will be translated
invisibly into the latter.  This does not happen except on threaded
perls, as they aren't needed otherwise.  Be aware that which functions
have reentrant versions varies from system to system.

=item *

The C<PERL_NO_OP_PARENT> build define is no longer supported, which means
that perl is now always built with C<PERL_OP_PARENT> enabled.

=item *

A new compiler C<#define>, C<dTHX_DEBUGGING>. has been added.  This is
useful for XS or C code that only need the thread context because their
debugging statements that get compiled only under C<-DDEBUGGING> need
one.

=item *

A new API function L<perlapi/Perl_setlocale> has been added.

The item names passed to the function L<perlapi/Perl_langinfo>,
introduced in 5.27.4, may no longer be prefixed with C<PERL_>.  For
example, if you want the current floating point radix character, you
must call it like C<Perl_langinfo(RADIXCHAR)>.

=back

=head1 Selected Bug Fixes

XXX Important bug fixes in the core language are summarized here.  Bug fixes in
files in F<ext/> and F<lib/> are best summarized in L</Modules and Pragmata>.

[ List each fix as an =item entry ]

=over 4

=item *

C<pack> and C<unpack> can now handle repeat counts and lengths that
exceed two billion.  [perl #119367]

=item *

Digits past the radix point in octal and binary floating point literals
now have the correct weight on platforms where a floating point
significand doesn't fit into an integer type.

=item *

C<exit(0)> in a C<UNITCHECK> or C<CHECK> block no longer permits the
main program to run, and C<exit(0)> in a C<BEGIN> block no longer permits
C<INIT> blocks to run before exiting.  [perl #2754]

=item *

The canonical truth value no longer has a spurious special meaning as
a callable.  It used to be a magic placeholder for a missing C<import>
or C<unimport> method.  It is now treated like any other string C<1>.
[perl #126042]

=item *

C<system> now reduces its arguments to strings in the parent process, so
any effects of stringifying them (such as overload methods being called
or warnings being emitted) are visible in the way the program expects.
[perl #121105]

=item *

The C<readpipe()> built-in function now checks at compile time that
it has only one parameter expression, and puts it in scalar context,
thus ensuring that it doesn't corrupt the stack at runtime.  [perl #4574]

=item *

C<sort> now performs correct reference counting when aliasing C<$a> and
C<$b>, thus avoiding premature destruction and leakage of scalars if they
are re-aliased during execution of the sort comparator.  [perl #92264]

=item *

C<reverse> with no operand, reversing C<$_> by default, is no longer in
danger of corrupting the stack.  [perl #132544]

=item *

C<exec>, C<system>, et al are no longer liable to have their argument
lists corrupted by reentrant calls and by magic such as tied scalars.
[perl #129888]

=item *

Perl's own C<malloc> no longer gets confused by attempts to allocate
more than 4 GiB on a 64-bit platform.  [perl #119829]

=back

=head1 Known Problems

XXX Descriptions of platform agnostic bugs we know we can't fix go here.  Any
tests that had to be C<TODO>ed for the release would be noted here.  Unfixed
platform specific bugs also go here.

[ List each fix as an =item entry ]

=over 4

=item *

XXX

=item *

The bugfix for [perl #2754] in Perl 5.27.7 turned out to cause so much
trouble on CPAN [perl #132577] that it is being postponed.  The bug has
been restored, so C<exit(0)> in a C<UNITCHECK> or C<CHECK> block now
once again permits the main program to run, and C<exit(0)> in a C<BEGIN>
block once again permits C<INIT> blocks to run before exiting.  The bug
will be fixed again for Perl 5.30.

=back

=head1 Errata From Previous Releases

=over 4

=item *

XXX Add anything here that we forgot to add, or were mistaken about, in
the perldelta of a previous release.

=back

=head1 Obituary

XXX If any significant core contributor or member of the CPAN community has
died, add a short obituary here.

=head1 Acknowledgements

XXX Generate this with:

  perl Porting/acknowledgements.pl v5.27.6..HEAD

=head1 Reporting Bugs

If you find what you think is a bug, you might check the perl bug database
at L<https://rt.perl.org/> .  There may also be information at
L<http://www.perl.org/> , the Perl Home Page.

If you believe you have an unreported bug, please run the L<perlbug> program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of C<perl -V>,
will be sent off to perlbug@perl.org to be analysed by the Perl porting team.

If the bug you are reporting has security implications which make it
inappropriate to send to a publicly archived mailing list, then see
L<perlsec/SECURITY VULNERABILITY CONTACT INFORMATION>
for details of how to report the issue.

=head1 Give Thanks

If you wish to thank the Perl 5 Porters for the work we had done in Perl 5,
you can do so by running the C<perlthanks> program:

    perlthanks

This will send an email to the Perl 5 Porters list with your show of thanks.

=head1 SEE ALSO

The F<Changes> file for an explanation of how to view exhaustive details on
what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut
