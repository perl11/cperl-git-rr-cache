/* ex: set ro ft=c: -*- buffer-read-only: t -*-
   !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!
   This file is built by regen_perly.pl from perly.y.
   Any changes made here will be lost!
 */

case 2:
<<<<<<<
#line 117 "perly.y" /* yacc.c:1646  */
=======
#line 118 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  parser->expect = XSTATE;
			}

    break;

  case 3:
<<<<<<<
#line 121 "perly.y" /* yacc.c:1646  */
=======
#line 122 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  newPROG(block_end((ps[-1].val.ival),(ps[0].val.opval)));
			  PL_compiling.cop_seq = 0;
			  (yyval.ival) = 0;
			}

    break;

  case 4:
<<<<<<<
#line 127 "perly.y" /* yacc.c:1646  */
=======
#line 128 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  parser->expect = XTERM;
			}

    break;

  case 5:
<<<<<<<
#line 131 "perly.y" /* yacc.c:1646  */
=======
#line 132 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  PL_eval_root = (ps[0].val.opval);
			  (yyval.ival) = 0;
			}

    break;

  case 6:
<<<<<<<
#line 136 "perly.y" /* yacc.c:1646  */
=======
#line 137 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  parser->expect = XBLOCK;
			}

    break;

  case 7:
<<<<<<<
#line 140 "perly.y" /* yacc.c:1646  */
=======
#line 141 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  PL_pad_reset_pending = TRUE;
			  PL_eval_root = (ps[0].val.opval);
			  (yyval.ival) = 0;
			  yyunlex();
			  parser->yychar = YYEOF;
			}

    break;

  case 8:
<<<<<<<
#line 148 "perly.y" /* yacc.c:1646  */
=======
#line 149 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  parser->expect = XSTATE;
			}

    break;

  case 9:
<<<<<<<
#line 152 "perly.y" /* yacc.c:1646  */
=======
#line 153 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  PL_pad_reset_pending = TRUE;
			  PL_eval_root = (ps[0].val.opval);
			  (yyval.ival) = 0;
			  yyunlex();
			  parser->yychar = YYEOF;
			}

    break;

  case 10:
<<<<<<<
#line 160 "perly.y" /* yacc.c:1646  */
=======
#line 161 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  parser->expect = XSTATE;
			}

    break;

  case 11:
<<<<<<<
#line 164 "perly.y" /* yacc.c:1646  */
=======
#line 165 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  PL_pad_reset_pending = TRUE;
			  PL_eval_root = (ps[0].val.opval);
			  (yyval.ival) = 0;
			  yyunlex();
			  parser->yychar = YYEOF;
			}

    break;

  case 12:
<<<<<<<
#line 172 "perly.y" /* yacc.c:1646  */
=======
#line 173 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  parser->expect = XSTATE;
			}

    break;

  case 13:
<<<<<<<
#line 176 "perly.y" /* yacc.c:1646  */
=======
#line 177 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  PL_eval_root = (ps[0].val.opval);
			  (yyval.ival) = 0;
			}

    break;

  case 14:
<<<<<<<
#line 184 "perly.y" /* yacc.c:1646  */
=======
#line 185 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { if (parser->copline > (line_t)(ps[-3].val.ival))
			      parser->copline = (line_t)(ps[-3].val.ival);
			  (yyval.opval) = block_end((ps[-2].val.ival), (ps[-1].val.opval));
			}

    break;

  case 15:
<<<<<<<
#line 192 "perly.y" /* yacc.c:1646  */
=======
#line 193 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { if (parser->copline > (line_t)(ps[-6].val.ival))
			      parser->copline = (line_t)(ps[-6].val.ival);
			  (yyval.opval) = block_end((ps[-5].val.ival), (ps[-2].val.opval));
			}

    break;

  case 16:
<<<<<<<
#line 199 "perly.y" /* yacc.c:1646  */
=======
#line 200 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.ival) = block_start(TRUE);
			  parser->parsed_sub = 0; }

    break;

  case 17:
<<<<<<<
#line 204 "perly.y" /* yacc.c:1646  */
=======
#line 205 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { if (parser->copline > (line_t)(ps[-3].val.ival))
			      parser->copline = (line_t)(ps[-3].val.ival);
			  (yyval.opval) = block_end((ps[-2].val.ival), (ps[-1].val.opval));
			}

    break;

  case 18:
<<<<<<<
#line 211 "perly.y" /* yacc.c:1646  */
=======
#line 212 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.ival) = block_start(FALSE);
			  parser->parsed_sub = 0; }

    break;

  case 19:
<<<<<<<
#line 217 "perly.y" /* yacc.c:1646  */
=======
#line 218 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = (OP*)NULL; }

    break;

  case 20:
<<<<<<<
#line 219 "perly.y" /* yacc.c:1646  */
=======
#line 220 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {   (yyval.opval) = op_append_list(OP_LINESEQ, (ps[-1].val.opval), (ps[0].val.opval));
			    PL_pad_reset_pending = TRUE;
			    if ((ps[-1].val.opval) && (ps[0].val.opval))
				PL_hints |= HINT_BLOCK_SCOPE;
			}

    break;

  case 21:
<<<<<<<
#line 228 "perly.y" /* yacc.c:1646  */
=======
#line 229 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = (OP*)NULL; }

    break;

  case 22:
<<<<<<<
#line 230 "perly.y" /* yacc.c:1646  */
=======
#line 231 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {   (yyval.opval) = op_append_list(OP_LINESEQ, (ps[-1].val.opval), (ps[0].val.opval));
			    PL_pad_reset_pending = TRUE;
			    if ((ps[-1].val.opval) && (ps[0].val.opval))
				PL_hints |= HINT_BLOCK_SCOPE;
			}

    break;

  case 23:
<<<<<<<
#line 239 "perly.y" /* yacc.c:1646  */
=======
#line 240 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  (yyval.opval) = (ps[0].val.opval) ? newSTATEOP(0, NULL, (ps[0].val.opval)) : NULL;
			}

    break;

  case 24:
<<<<<<<
#line 243 "perly.y" /* yacc.c:1646  */
=======
#line 244 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = (ps[0].val.opval); }

    break;

  case 25:
<<<<<<<
#line 247 "perly.y" /* yacc.c:1646  */
=======
#line 248 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  (yyval.opval) = newSTATEOP(SVf_UTF8 * (ps[-1].val.pval)[strlen((ps[-1].val.pval))+1], (ps[-1].val.pval), (ps[0].val.opval));
			}

    break;

  case 26:
<<<<<<<
#line 251 "perly.y" /* yacc.c:1646  */
=======
#line 252 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  (yyval.opval) = newSTATEOP(SVf_UTF8 * (ps[-1].val.pval)[strlen((ps[-1].val.pval))+1], (ps[-1].val.pval), (ps[0].val.opval));
			}

    break;

  case 27:
<<<<<<<
#line 258 "perly.y" /* yacc.c:1646  */
=======
#line 259 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = (ps[0].val.opval); }

    break;

  case 28:
<<<<<<<
#line 260 "perly.y" /* yacc.c:1646  */
=======
#line 261 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  CV *fmtcv = PL_compcv;
			  newFORM((ps[-2].val.ival), (ps[-1].val.opval), (ps[0].val.opval));
			  (yyval.opval) = (OP*)NULL;
			  if (CvOUTSIDE(fmtcv) && !CvEVAL(CvOUTSIDE(fmtcv)))
			      pad_add_weakref(fmtcv);
			  parser->parsed_sub = 1;
			}

    break;

  case 29:
<<<<<<<
#line 269 "perly.y" /* yacc.c:1646  */
=======
#line 270 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  if ((ps[-1].val.opval)->op_type == OP_CONST) {
			    const char *const name =
				SvPV_nolen_const(((SVOP*)(ps[-1].val.opval))->op_sv);
			    if (strEQc(name, "BEGIN") || strEQc(name, "END")
                             || strEQc(name, "INIT")  || strEQc(name, "CHECK")
                             || strEQ(name, "UNITCHECK"))
			      CvSPECIAL_on(PL_compcv);
			  }
			  else
                              /* State subs inside anonymous subs need to be
                                 clonable themselves. */
                              if (CvANON(CvOUTSIDE(PL_compcv))
                                  || CvCLONE(CvOUTSIDE(PL_compcv))
                                  || !PadnameIsSTATE(PadlistNAMESARRAY(CvPADLIST(
                                         CvOUTSIDE(PL_compcv)))[(ps[-1].val.opval)->op_targ]))
                                  CvCLONE_on(PL_compcv);
			  parser->in_my = 0;
			  parser->in_my_stash = NULL;
			}

    break;

  case 30:
<<<<<<<
#line 290 "perly.y" /* yacc.c:1646  */
=======
#line 291 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  SvREFCNT_inc_simple_void(PL_compcv);
			  (ps[-5].val.opval)->op_type == OP_CONST
			      ? newATTRSUB((ps[-4].val.ival), (ps[-5].val.opval), (ps[-2].val.opval), (ps[-1].val.opval), (ps[0].val.opval))
			      : newMYSUB((ps[-4].val.ival), (ps[-5].val.opval), (ps[-2].val.opval), (ps[-1].val.opval), (ps[0].val.opval))
			  ;
			  (yyval.opval) = (OP*)NULL;
			  intro_my();
			  parser->parsed_sub = 1;
			}

    break;

  case 31:
<<<<<<<
#line 301 "perly.y" /* yacc.c:1646  */
=======
#line 302 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  if ((ps[-1].val.opval)->op_type == OP_CONST) {
			    const char *const name =
				SvPV_nolen_const(((SVOP*)(ps[-1].val.opval))->op_sv);
			    if (strEQc(name, "BEGIN") || strEQc(name, "END")
                             || strEQc(name, "INIT")  || strEQc(name, "CHECK")
                             || strEQc(name, "UNITCHECK"))
                                CvSPECIAL_on(PL_compcv);
			  }
			  else
                              /* State subs inside anonymous subs need to be
                                 clonable themselves. */
                              if (CvANON(CvOUTSIDE(PL_compcv))
                               || CvCLONE(CvOUTSIDE(PL_compcv))
                               || !PadnameIsSTATE(PadlistNAMESARRAY(CvPADLIST(
                                      CvOUTSIDE(PL_compcv)))[(ps[-1].val.opval)->op_targ]))
                                  CvCLONE_on(PL_compcv);
			  parser->in_my = 0;
			  parser->in_my_stash = NULL;
			}

    break;

  case 32:
<<<<<<<
#line 322 "perly.y" /* yacc.c:1646  */
=======
#line 323 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  OP *sig = (ps[-4].val.opval), *body = (ps[-1].val.opval);
                          /* empty sig sub needs a nextstate at the end
                           * to clear the stack of any default expression
                           * detritus */
                          if (!body && (!sig || !OpHAS_SIBLING(sig)))
                               body = newSTATEOP(0, NULL, NULL);
			  if (parser->copline > (line_t)(ps[-2].val.ival))
			      parser->copline = (line_t)(ps[-2].val.ival);
			  body = block_end((ps[-5].val.ival),
				op_append_list(OP_LINESEQ, sig, body));

			  SvREFCNT_inc_simple_void(PL_compcv);
			  (ps[-8].val.opval)->op_type == OP_CONST
			      ? newATTRSUB((ps[-7].val.ival), (ps[-8].val.opval), NULL, (ps[-3].val.opval), body)
			      : newMYSUB((ps[-7].val.ival), (ps[-8].val.opval), NULL, (ps[-3].val.opval), body);
			  (yyval.opval) = (OP*)NULL;
			  intro_my();
			  parser->parsed_sub = 1;
			}

    break;

  case 33:
<<<<<<<
#line 343 "perly.y" /* yacc.c:1646  */
=======
#line 344 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  package((ps[-1].val.opval));
			  if ((ps[-2].val.opval))
			      package_version((ps[-2].val.opval));
			  (yyval.opval) = (OP*)NULL;
			}

    break;

  case 34:
<<<<<<<
#line 350 "perly.y" /* yacc.c:1646  */
=======
#line 351 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { CvSPECIAL_on(PL_compcv); /* It's a BEGIN {} */ }

    break;

  case 35:
<<<<<<<
#line 352 "perly.y" /* yacc.c:1646  */
=======
#line 353 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  SvREFCNT_inc_simple_void(PL_compcv);
			  utilize((ps[-6].val.ival), (ps[-5].val.ival), (ps[-3].val.opval), (ps[-2].val.opval), (ps[-1].val.opval));
			  parser->parsed_sub = 1;
			  (yyval.opval) = (OP*)NULL;
			}

    break;

  case 36:
<<<<<<<
#line 359 "perly.y" /* yacc.c:1646  */
=======
#line 360 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  (yyval.opval) = block_end((ps[-4].val.ival),
			      newCONDOP(0, (ps[-3].val.opval), op_scope((ps[-1].val.opval)), (ps[0].val.opval)));
			  parser->copline = (line_t)(ps[-6].val.ival);
			}

    break;

  case 37:
<<<<<<<
#line 365 "perly.y" /* yacc.c:1646  */
=======
#line 366 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  (yyval.opval) = block_end((ps[-4].val.ival),
                              newCONDOP(0, (ps[-3].val.opval), (ps[0].val.opval), op_scope((ps[-1].val.opval))));
			  parser->copline = (line_t)(ps[-6].val.ival);
			}

    break;

  case 38:
<<<<<<<
#line 371 "perly.y" /* yacc.c:1646  */
=======
#line 372 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  const PADOFFSET offset = pad_findmy_pvs("$_", 0);
			  (yyval.opval) = block_end((ps[-3].val.ival),
				  newGIVENOP((ps[-2].val.opval), op_scope((ps[0].val.opval)),
				    offset == NOT_IN_PAD
				    || PAD_COMPNAME_FLAGS_isOUR(offset)
				      ? 0
				      : offset));
			  parser->copline = (line_t)(ps[-5].val.ival);
			}

    break;

  case 39:
<<<<<<<
#line 382 "perly.y" /* yacc.c:1646  */
=======
#line 383 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = block_end((ps[-3].val.ival), newWHENOP((ps[-2].val.opval), op_scope((ps[0].val.opval)))); }

    break;

  case 40:
<<<<<<<
#line 384 "perly.y" /* yacc.c:1646  */
=======
#line 385 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newWHENOP(0, op_scope((ps[0].val.opval))); }

    break;

  case 41:
<<<<<<<
#line 386 "perly.y" /* yacc.c:1646  */
=======
#line 387 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  (yyval.opval) = block_end((ps[-5].val.ival),
				  newWHILEOP(0, 1, (LOOP*)(OP*)NULL,
				      (ps[-4].val.opval), (ps[-1].val.opval), (ps[0].val.opval), (ps[-2].val.ival)));
			  parser->copline = (line_t)(ps[-7].val.ival);
			}

    break;

  case 42:
<<<<<<<
#line 393 "perly.y" /* yacc.c:1646  */
=======
#line 394 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  (yyval.opval) = block_end((ps[-5].val.ival),
				  newWHILEOP(0, 1, (LOOP*)(OP*)NULL,
				      (ps[-4].val.opval), (ps[-1].val.opval), (ps[0].val.opval), (ps[-2].val.ival)));
			  parser->copline = (line_t)(ps[-7].val.ival);
			}

    break;

  case 43:
<<<<<<<
#line 400 "perly.y" /* yacc.c:1646  */
=======
#line 401 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { parser->expect = XTERM; }

    break;

  case 44:
<<<<<<<
#line 402 "perly.y" /* yacc.c:1646  */
=======
#line 403 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { parser->expect = XTERM; }

    break;

  case 45:
<<<<<<<
#line 405 "perly.y" /* yacc.c:1646  */
=======
#line 406 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  OP *initop = (ps[-9].val.opval);
			  OP *forop = newWHILEOP(0, 1, (LOOP*)(OP*)NULL,
				      scalar((ps[-6].val.opval)), (ps[0].val.opval), (ps[-2].val.opval), (ps[-3].val.ival));
			  if (initop) {
			      forop = op_prepend_elem(OP_LINESEQ, initop,
				  op_append_elem(OP_LINESEQ,
				      newOP(OP_UNSTACK, OPf_SPECIAL),
				      forop));
			  }
			  PL_hints |= HINT_BLOCK_SCOPE;
			  (yyval.opval) = block_end((ps[-10].val.ival), forop);
			  parser->copline = (line_t)(ps[-12].val.ival);
			}

    break;

  case 46:
<<<<<<<
#line 420 "perly.y" /* yacc.c:1646  */
=======
#line 421 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  (yyval.opval) = block_end((ps[-6].val.ival), newFOROP(0, (ps[-5].val.opval), (ps[-3].val.opval), (ps[-1].val.opval), (ps[0].val.opval)));
			  parser->copline = (line_t)(ps[-8].val.ival);
			}

    break;

  case 47:
<<<<<<<
#line 425 "perly.y" /* yacc.c:1646  */
=======
#line 426 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  (yyval.opval) = block_end((ps[-4].val.ival), newFOROP(0,
			         op_lvalue((ps[-6].val.opval), OP_ENTERLOOP), (ps[-3].val.opval), (ps[-1].val.opval), (ps[0].val.opval)));
			  parser->copline = (line_t)(ps[-7].val.ival);
			}

    break;

  case 48:
<<<<<<<
#line 431 "perly.y" /* yacc.c:1646  */
=======
#line 432 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { parser->in_my = 0; (yyval.opval) = my((ps[0].val.opval)); }

    break;

  case 49:
<<<<<<<
#line 433 "perly.y" /* yacc.c:1646  */
=======
#line 434 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  (yyval.opval) = block_end((ps[-7].val.ival), newFOROP(0,
			         op_lvalue(newUNOP(OP_REFGEN, 0, (ps[-5].val.opval)),
                                           OP_ENTERLOOP),
					 (ps[-3].val.opval), (ps[-1].val.opval), (ps[0].val.opval)));
			  parser->copline = (line_t)(ps[-9].val.ival);
			}

    break;

  case 50:
<<<<<<<
#line 441 "perly.y" /* yacc.c:1646  */
=======
#line 447 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
                          (yyval.opval) = block_end((ps[-4].val.ival), newFOROP(0,
				 op_lvalue(newUNOP(OP_REFGEN, 0, (ps[-6].val.opval)),
                                           OP_ENTERLOOP),
                                         (ps[-3].val.opval), (ps[-1].val.opval), (ps[0].val.opval)));
			  parser->copline = (line_t)(ps[-8].val.ival);
			}

    break;

  case 51:
<<<<<<<
#line 449 "perly.y" /* yacc.c:1646  */
=======
#line 455 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  (yyval.opval) = block_end((ps[-4].val.ival),
				  newFOROP(0, (OP*)NULL, (ps[-3].val.opval), (ps[-1].val.opval), (ps[0].val.opval)));
			  parser->copline = (line_t)(ps[-6].val.ival);
			}

    break;

  case 52:
<<<<<<<
#line 455 "perly.y" /* yacc.c:1646  */
    {
			  (yyval.opval) = block_end((ps[-3].val.ival),
				  newFOROP(0, (OP*)NULL, (ps[-2].val.opval), (ps[-1].val.opval), (ps[0].val.opval)));
			  parser->copline = (line_t)(ps[-4].val.ival);
			}

    break;

  case 53:
#line 461 "perly.y" /* yacc.c:1646  */
=======
#line 461 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  /* a block is a loop that happens once */
			  (yyval.opval) = newWHILEOP(0, 1, (LOOP*)(OP*)NULL,
				  (OP*)NULL, (ps[-1].val.opval), (ps[0].val.opval), 0);
			}

    break;

<<<<<<<
  case 53:
#line 467 "perly.y" /* yacc.c:1646  */
=======
  case 54:
#line 467 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  package((ps[-2].val.opval));
			  if ((ps[-3].val.opval)) {
			      package_version((ps[-3].val.opval));
			  }
			}

    break;

<<<<<<<
  case 54:
#line 474 "perly.y" /* yacc.c:1646  */
=======
  case 55:
#line 474 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  /* a block is a loop that happens once */
			  (yyval.opval) = newWHILEOP(0, 1, (LOOP*)(OP*)NULL,
				  (OP*)NULL, block_end((ps[-3].val.ival), (ps[-1].val.opval)), (OP*)NULL, 0);
			  if (parser->copline > (line_t)(ps[-4].val.ival))
			      parser->copline = (line_t)(ps[-4].val.ival);
			}

    break;

<<<<<<<
  case 55:
#line 482 "perly.y" /* yacc.c:1646  */
=======
  case 56:
#line 482 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  (yyval.opval) = (ps[-1].val.opval);
			}

    break;

<<<<<<<
  case 56:
#line 486 "perly.y" /* yacc.c:1646  */
=======
  case 57:
#line 486 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  (yyval.opval) = (OP*)NULL;
			  parser->copline = NOLINE;
			}

    break;

<<<<<<<
  case 57:
#line 494 "perly.y" /* yacc.c:1646  */
=======
  case 58:
#line 494 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { OP *list;
			  if ((ps[0].val.opval)) {
			      OP *term = (ps[0].val.opval);
			      list = op_append_elem(OP_LIST, (ps[-1].val.opval), term);
			  }
			  else {
			      list = (ps[-1].val.opval);
			  }
			  if (parser->copline == NOLINE)
			       parser->copline = CopLINE(PL_curcop)-1;
			  else parser->copline--;
			  (yyval.opval) = newSTATEOP(0, NULL,
					  op_convert_list(OP_FORMLINE, 0, list));
			}

    break;

<<<<<<<
  case 58:
#line 511 "perly.y" /* yacc.c:1646  */
=======
  case 59:
#line 511 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = NULL; }

    break;

<<<<<<<
  case 59:
#line 513 "perly.y" /* yacc.c:1646  */
=======
  case 60:
#line 513 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = op_unscope((ps[-1].val.opval)); }

    break;

<<<<<<<
  case 60:
#line 518 "perly.y" /* yacc.c:1646  */
=======
  case 61:
#line 518 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = (OP*)NULL; }

    break;

<<<<<<<
  case 61:
#line 520 "perly.y" /* yacc.c:1646  */
=======
  case 62:
#line 520 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = (ps[0].val.opval); }

    break;

<<<<<<<
  case 62:
#line 522 "perly.y" /* yacc.c:1646  */
=======
  case 63:
#line 522 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newLOGOP(OP_AND, 0, (ps[0].val.opval), (ps[-2].val.opval)); }

    break;

<<<<<<<
  case 63:
#line 524 "perly.y" /* yacc.c:1646  */
=======
  case 64:
#line 524 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newLOGOP(OP_OR, 0, (ps[0].val.opval), (ps[-2].val.opval)); }

    break;

<<<<<<<
  case 64:
#line 526 "perly.y" /* yacc.c:1646  */
=======
  case 65:
#line 526 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newLOOPOP(OPf_PARENS, 1, scalar((ps[0].val.opval)), (ps[-2].val.opval)); }

    break;

<<<<<<<
  case 65:
#line 528 "perly.y" /* yacc.c:1646  */
=======
  case 66:
#line 528 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newLOOPOP(OPf_PARENS, 1, (ps[0].val.opval), (ps[-2].val.opval)); }

    break;

<<<<<<<
  case 66:
#line 530 "perly.y" /* yacc.c:1646  */
=======
  case 67:
#line 530 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newFOROP(0, (OP*)NULL, (ps[0].val.opval), (ps[-2].val.opval), (OP*)NULL);
			  parser->copline = (line_t)(ps[-1].val.ival); }

    break;

<<<<<<<
  case 67:
#line 533 "perly.y" /* yacc.c:1646  */
=======
  case 68:
#line 533 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newWHENOP((ps[0].val.opval), op_scope((ps[-2].val.opval))); }

    break;

<<<<<<<
  case 68:
#line 538 "perly.y" /* yacc.c:1646  */
=======
  case 69:
#line 538 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = (OP*)NULL; }

    break;

<<<<<<<
  case 69:
#line 540 "perly.y" /* yacc.c:1646  */
=======
  case 70:
#line 540 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  ((ps[0].val.opval))->op_flags |= OPf_PARENS;
			  (yyval.opval) = op_scope((ps[0].val.opval));
			}

    break;

<<<<<<<
  case 70:
#line 545 "perly.y" /* yacc.c:1646  */
    { parser->copline = (line_t)(ps[-5].val.ival);
=======
  case 71:
#line 545 "perly.y" /* yacc.c:1646  */
    {   parser->copline = (line_t)(ps[-5].val.ival);
>>>>>>>
			    (yyval.opval) = newCONDOP(0,
				newSTATEOP(OPf_SPECIAL,NULL,(ps[-3].val.opval)),
				op_scope((ps[-1].val.opval)), (ps[0].val.opval));
			  PL_hints |= HINT_BLOCK_SCOPE;
			}

    break;

<<<<<<<
  case 71:
#line 555 "perly.y" /* yacc.c:1646  */
=======
  case 72:
#line 555 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = (OP*)NULL; }

    break;

<<<<<<<
  case 72:
#line 557 "perly.y" /* yacc.c:1646  */
=======
  case 73:
#line 557 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = op_scope((ps[0].val.opval)); }

    break;

<<<<<<<
  case 73:
#line 562 "perly.y" /* yacc.c:1646  */
=======
  case 74:
#line 562 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.ival) = (PL_min_intro_pending &&
			    PL_max_intro_pending >=  PL_min_intro_pending);
			  intro_my(); }

    break;

<<<<<<<
  case 74:
#line 568 "perly.y" /* yacc.c:1646  */
=======
  case 75:
#line 568 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = (OP*)NULL; }

    break;

<<<<<<<
  case 76:
#line 574 "perly.y" /* yacc.c:1646  */
=======
  case 77:
#line 574 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { YYSTYPE tmplval;
			  (void)scan_num("1", &tmplval);
			  (yyval.opval) = tmplval.opval; }

    break;

<<<<<<<
  case 78:
#line 582 "perly.y" /* yacc.c:1646  */
=======
  case 79:
#line 582 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = invert(scalar((ps[0].val.opval))); }

    break;

<<<<<<<
  case 79:
#line 587 "perly.y" /* yacc.c:1646  */
=======
  case 80:
#line 587 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = (ps[0].val.opval); intro_my(); }

    break;

<<<<<<<
  case 80:
#line 591 "perly.y" /* yacc.c:1646  */
=======
  case 81:
#line 591 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = (ps[0].val.opval); intro_my(); }

    break;

<<<<<<<
  case 81:
#line 594 "perly.y" /* yacc.c:1646  */
=======
  case 82:
#line 594 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = (ps[0].val.opval); }

    break;

<<<<<<<
  case 82:
#line 595 "perly.y" /* yacc.c:1646  */
=======
  case 83:
#line 595 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = (OP*)NULL; }

    break;

<<<<<<<
  case 83:
#line 599 "perly.y" /* yacc.c:1646  */
=======
  case 84:
#line 599 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.ival) = start_subparse(FALSE, 0);
			    SAVEFREESV(PL_compcv); }

    break;

<<<<<<<
  case 84:
#line 605 "perly.y" /* yacc.c:1646  */
=======
  case 85:
#line 605 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.ival) = start_subparse(FALSE, CVf_ANON);
			    SAVEFREESV(PL_compcv); }

    break;

<<<<<<<
  case 85:
#line 610 "perly.y" /* yacc.c:1646  */
=======
  case 86:
#line 610 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.ival) = start_subparse(TRUE, 0);
			    SAVEFREESV(PL_compcv); }

    break;

<<<<<<<
  case 88:
#line 621 "perly.y" /* yacc.c:1646  */
=======
  case 89:
#line 621 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = (OP*)NULL; }

    break;

<<<<<<<
  case 90:
#line 627 "perly.y" /* yacc.c:1646  */
=======
  case 91:
#line 627 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = (OP*)NULL; }

    break;

<<<<<<<
  case 91:
#line 629 "perly.y" /* yacc.c:1646  */
=======
  case 92:
#line 629 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = (ps[0].val.opval); }

    break;

<<<<<<<
  case 92:
#line 631 "perly.y" /* yacc.c:1646  */
=======
  case 93:
#line 631 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = (OP*)NULL; }

    break;

<<<<<<<
  case 93:
#line 636 "perly.y" /* yacc.c:1646  */
=======
  case 94:
#line 636 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = (ps[0].val.opval); }

    break;

<<<<<<<
  case 94:
#line 638 "perly.y" /* yacc.c:1646  */
=======
  case 95:
#line 638 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = (OP*)NULL; }

    break;

<<<<<<<
  case 95:
#line 648 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (OP*)NULL; }
=======
  case 96:
#line 643 "perly.y" /* yacc.c:1646  */
    {
#ifndef USE_CPERL
			  /* We shouldn't get here otherwise */
			  assert(FEATURE_SIGNATURES_IS_ENABLED);
			  Perl_ck_warner_d(aTHX_
				packWARN(WARN_EXPERIMENTAL__SIGNATURES),
				"The signatures feature is experimental");
#endif
			  (yyval.opval) = parse_subsignature();
			}
>>>>>>>

    break;

<<<<<<<
  case 96:
#line 650 "perly.y" /* yacc.c:1646  */
=======
  case 97:
#line 654 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
                            (yyval.opval) = (ps[0].val.opval);
                            PL_parser->in_my = 0;
                        }

    break;

  case 97:
#line 658 "perly.y" /* yacc.c:1646  */
    { (yyval.ival) = '@'; }

    break;

<<<<<<<
  case 98:
#line 660 "perly.y" /* yacc.c:1646  */
    { (yyval.ival) = '%'; }
=======
  case 99:
#line 662 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (OP*)NULL; }
>>>>>>>

    break;

<<<<<<<
  case 100:
#line 667 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newLOGOP(OP_AND, 0, (ps[-2].val.opval), (ps[0].val.opval)); }
=======
  case 99:
#line 664 "perly.y" /* yacc.c:1646  */
    {
                            I32 sigil = (ps[-2].val.ival);
                            OP *var   = (ps[-1].val.opval);
                            OP *defexpr = (ps[0].val.opval);
                            int type = (sigil == '@' ? OP_PADAV : OP_PADHV);

                            if (PL_parser->sig_slurpy)
                                yyerror("Multiple slurpy parameters not allowed");
                            PL_parser->sig_slurpy = sigil;

                            if (defexpr)
                                yyerror("a slurpy parameter may not have "
                                        "a default value");

                            if (var) {
                                OP *slice;

                                var->op_type    = type;
                                var->op_ppaddr  = PL_ppaddr[type];
                                var->op_flags   = (OPf_WANT_LIST | OPf_MOD);
                                var->op_private = OPpLVAL_INTRO;

                                slice = PL_parser->sig_elems
                                    ? op_prepend_elem(OP_ASLICE,
                                        newOP(OP_PUSHMARK, 0),
                                        newLISTOP(OP_ASLICE, 0,
                                            list(newRANGE(0,
                                                newSVOP(OP_CONST, 0,
                                                    newSViv(PL_parser->sig_elems)),
                                                newUNOP(OP_AV2ARYLEN, 0,
                                                    ref(newUNOP(OP_RV2AV, 0,
                                                            newGVOP(OP_GV, 0, PL_defgv)),
                                                        OP_AV2ARYLEN)))),
                                            ref(newUNOP(OP_RV2AV, 0,
                                                    newGVOP(OP_GV, 0, PL_defgv)),
                                                OP_ASLICE)))
                                    : newUNOP(OP_RV2AV, 0, newGVOP(OP_GV, 0, PL_defgv));
                                (yyval.opval) = newSTATEOP(0, NULL,
                                       newASSIGNOP(OPf_STACKED, var, 0, slice));
                            }
                            else
                                (yyval.opval) = (OP*)NULL;
                        }
>>>>>>>

    break;

<<<<<<<
  case 100:
#line 711 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (OP*)NULL; }
=======
  case 101:
#line 669 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newLOGOP((ps[-1].val.ival), 0, (ps[-2].val.opval), (ps[0].val.opval)); }
>>>>>>>

    break;

<<<<<<<
  case 101:
#line 713 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newOP(OP_NULL, 0); }

    break;

  case 102:
#line 715 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }
=======
  case 102:
#line 671 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newLOGOP(OP_DOR, 0, (ps[-2].val.opval), (ps[0].val.opval)); }
>>>>>>>

    break;

<<<<<<<
  case 103:
#line 721 "perly.y" /* yacc.c:1646  */
    {
                            OP *var     = (ps[-1].val.opval);
                            OP *defexpr = (ps[0].val.opval);
                            OP *argn    = NULL;
                            OP *expr    = NULL;

                            if (PL_parser->sig_slurpy)
                                yyerror("Slurpy parameter not last");

                            PL_parser->sig_elems++;

                            if (var) {
                                var->op_type    = OP_PADSV;
                                var->op_ppaddr  = PL_ppaddr[OP_PADSV];
                                var->op_flags   = (OPf_WANT_SCALAR | OPf_MOD);
                                var->op_private = OPpLVAL_INTRO;
                            }

                            /* $_[N] */
                            argn = newBINOP(OP_AELEM, 0,
                                ref(newUNOP(OP_RV2AV, 0,
                                        newGVOP(OP_GV, 0, PL_defgv)),
                                    OP_RV2AV),
                                newSVOP(OP_CONST, 0,
                                    newSViv(PL_parser->sig_elems - 1)));

                            if (defexpr) {
                                PL_parser->sig_optelems++;
                                /* is it '$var=undef', '$=' ? */
                                if (    (   defexpr->op_type == OP_NULL
                                         || defexpr->op_type == OP_UNDEF)
                                    && !(defexpr->op_flags & OPf_KIDS))
                                {
                                    if (var) {
                                        /* '$=' is legal, '$var=' isn't */
                                        if (defexpr->op_type == OP_NULL)
                                            yyerror("Optional parameter "
                                                "lacks default expression");
                                        else
                                            expr = argn;
                                    }
                                    op_free(defexpr);
                                }
                                else {
                                    /* @_ >= N */
                                    OP *ge_op = 
                                        newBINOP(OP_GE, 0,
                                        scalar(newUNOP(OP_RV2AV, 0,
                                                newGVOP(OP_GV, 0, PL_defgv))),
                                        newSVOP(OP_CONST, 0,
                                            newSViv(PL_parser->sig_elems)));

                                    expr = var
                                        ? newCONDOP(0, ge_op, argn, defexpr)
                                        : newLOGOP(OP_OR, 0, ge_op, defexpr);
                                }
                            }
                            else {
                                if (PL_parser->sig_optelems)
                                    yyerror("Mandatory parameter "
                                            "follows optional parameter");
                                expr = argn;
                            }

                            if (var)
                                expr = newASSIGNOP(OPf_STACKED, var, 0, expr);
                            if (expr)
                                (yyval.opval) = op_prepend_elem(OP_LINESEQ,
                                        newSTATEOP(0, NULL, NULL),
                                        expr);
                            else
                                (yyval.opval) = (OP*)NULL;
                        }
=======
  case 104:
#line 677 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[-1].val.opval); }
>>>>>>>

    break;

<<<<<<<
  case 104:
#line 799 "perly.y" /* yacc.c:1646  */
    { parser->expect = XSIGVAR; (yyval.opval) = (ps[0].val.opval); }

    break;

  case 105:
#line 801 "perly.y" /* yacc.c:1646  */
    { parser->expect = XSIGVAR; (yyval.opval) = (ps[0].val.opval); }

    break;

  case 106:
#line 807 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[-1].val.opval); }

    break;

  case 107:
#line 809 "perly.y" /* yacc.c:1646  */
    {
			  (yyval.opval) = op_append_list(OP_LINESEQ, (ps[-2].val.opval), (ps[0].val.opval));
			}

    break;

  case 108:
#line 813 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }

    break;

  case 109:
#line 818 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (OP*)NULL; }

    break;

  case 110:
#line 820 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }

    break;

  case 111:
#line 824 "perly.y" /* yacc.c:1646  */
    {
                            ENTER;
                            SAVEINT(PL_parser->sig_elems);
                            SAVEINT(PL_parser->sig_optelems);
                            SAVEI8(PL_parser->sig_slurpy);
                            PL_parser->sig_elems    = 0;
                            PL_parser->sig_optelems = 0;
                            PL_parser->sig_slurpy   = 0;
                            parser->expect = XSIGVAR;
                        }

    break;

  case 112:
#line 836 "perly.y" /* yacc.c:1646  */
    {
                            OP *sigops = (ps[-1].val.opval);
                            int min_arity =
                                PL_parser->sig_elems - PL_parser->sig_optelems;

                            assert(FEATURE_SIGNATURES_IS_ENABLED);
#ifndef USE_CPERL
                            /* We shouldn't get here otherwise */
                            Perl_ck_warner_d(aTHX_
                                packWARN(WARN_EXPERIMENTAL__SIGNATURES),
                                "The signatures feature is experimental");
#endif

                            /* handle odd/even for %foo */
                            if (PL_parser->sig_slurpy == '%') {
                                OP *chkop =
                                    newLOGOP(
                                        (PL_parser->sig_elems & 1)
                                                ? OP_OR : OP_AND,
                                        0,
                                        newBINOP(OP_BIT_AND, 0,
                                            scalar(newUNOP(OP_RV2AV, 0,
                                                newGVOP(OP_GV, 0, PL_defgv))),
                                            newSVOP(OP_CONST, 0, newSViv(1))),
                                        op_convert_list(OP_DIE, 0,
                                            op_convert_list(OP_SPRINTF, 0,
                                                op_append_list(OP_LIST,
                                                    newSVOP(OP_CONST, 0,
                                                        newSVpvs("Odd name/value argument for subroutine at %s line %d.\n")),
                                                    newSLICEOP(0,
                                                        op_append_list(OP_LIST,
                                                            newSVOP(OP_CONST, 0, newSViv(1)),
                                                            newSVOP(OP_CONST, 0, newSViv(2))),
                                                        newOP(OP_CALLER, 0))))));
                                if (PL_parser->sig_optelems)
                                    chkop = newLOGOP(OP_AND, 0,
                                                newBINOP(OP_GT, 0,
                                                    scalar(newUNOP(OP_RV2AV, 0,
                                                        newGVOP(OP_GV, 0, PL_defgv))),
                                                    newSVOP(OP_CONST, 0,
                                                    newSViv(PL_parser->sig_elems))),
                                                chkop);
                                sigops = op_prepend_elem(OP_LINESEQ,
                                            chkop, sigops);

                            }
                            if (min_arity)
                                sigops = op_prepend_elem(OP_LINESEQ,
                                            Perl_check_arity(aTHX_ min_arity,
                                                FALSE),
                                            sigops);
                            if (!PL_parser->sig_slurpy)
                                sigops = op_prepend_elem(OP_LINESEQ,
                                            Perl_check_arity(aTHX_
                                                PL_parser->sig_elems, TRUE),
                                            sigops);

                            (yyval.opval) = op_append_elem(OP_LINESEQ, sigops,
                                newSTATEOP(0, NULL, NULL));

                            parser->expect = XATTRBLOCK;
                            LEAVE;
			}

    break;

  case 114:
#line 905 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (OP*)NULL; }

    break;

  case 115:
#line 910 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newLOGOP(OP_AND, 0, (ps[-2].val.opval), (ps[0].val.opval)); }

    break;

  case 116:
#line 912 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newLOGOP((ps[-1].val.ival), 0, (ps[-2].val.opval), (ps[0].val.opval)); }

    break;

  case 117:
#line 914 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newLOGOP(OP_DOR, 0, (ps[-2].val.opval), (ps[0].val.opval)); }

    break;

  case 119:
#line 920 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[-1].val.opval); }

    break;

  case 120:
#line 922 "perly.y" /* yacc.c:1646  */
=======
  case 105:
#line 679 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  OP* term = (ps[0].val.opval);
			  (yyval.opval) = op_append_elem(OP_LIST, (ps[-2].val.opval), term);
			}

    break;

<<<<<<<
  case 107:
#line 688 "perly.y" /* yacc.c:1646  */
=======
  case 122:
#line 931 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = op_convert_list((ps[-2].val.ival), OPf_STACKED,
				op_prepend_elem(OP_LIST, newGVREF((ps[-2].val.ival),(ps[-1].val.opval)), (ps[0].val.opval)) );
			}

    break;

<<<<<<<
  case 108:
#line 692 "perly.y" /* yacc.c:1646  */
=======
  case 123:
#line 935 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = op_convert_list((ps[-4].val.ival), OPf_STACKED,
				op_prepend_elem(OP_LIST, newGVREF((ps[-4].val.ival),(ps[-2].val.opval)), (ps[-1].val.opval)) );
			}

    break;

<<<<<<<
  case 109:
#line 696 "perly.y" /* yacc.c:1646  */
=======
  case 124:
#line 939 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = op_convert_list(OP_ENTERSUB, OPf_STACKED,
				op_append_elem(OP_LIST,
				    op_prepend_elem(OP_LIST, scalar((ps[-5].val.opval)), (ps[-1].val.opval)),
				    newMETHOP(OP_METHOD, 0, (ps[-3].val.opval))));
			}

    break;

<<<<<<<
  case 110:
#line 702 "perly.y" /* yacc.c:1646  */
=======
  case 125:
#line 945 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = op_convert_list(OP_ENTERSUB, OPf_STACKED,
				op_append_elem(OP_LIST, scalar((ps[-2].val.opval)),
				    newMETHOP(OP_METHOD, 0, (ps[0].val.opval))));
			}

    break;

<<<<<<<
  case 111:
#line 707 "perly.y" /* yacc.c:1646  */
=======
  case 126:
#line 950 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = op_convert_list(OP_ENTERSUB, OPf_STACKED,
				op_append_elem(OP_LIST,
				    op_prepend_elem(OP_LIST, (ps[-1].val.opval), (ps[0].val.opval)),
				    newMETHOP(OP_METHOD, 0, (ps[-2].val.opval))));
			}

    break;

<<<<<<<
  case 112:
#line 713 "perly.y" /* yacc.c:1646  */
=======
  case 127:
#line 956 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = op_convert_list(OP_ENTERSUB, OPf_STACKED,
				op_append_elem(OP_LIST,
				    op_prepend_elem(OP_LIST, (ps[-3].val.opval), (ps[-1].val.opval)),
				    newMETHOP(OP_METHOD, 0, (ps[-4].val.opval))));
			}

    break;

<<<<<<<
  case 113:
#line 719 "perly.y" /* yacc.c:1646  */
=======
  case 128:
#line 962 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = op_convert_list((ps[-1].val.ival), 0, (ps[0].val.opval)); }

    break;

<<<<<<<
  case 114:
#line 721 "perly.y" /* yacc.c:1646  */
=======
  case 129:
#line 964 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = op_convert_list((ps[-3].val.ival), 0, (ps[-1].val.opval)); }

    break;

<<<<<<<
  case 115:
#line 723 "perly.y" /* yacc.c:1646  */
=======
  case 130:
#line 966 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { SvREFCNT_inc_simple_void(PL_compcv);
			  (yyval.opval) = newANONATTRSUB((ps[-1].val.ival), 0, (OP*)NULL, (ps[0].val.opval)); }

    break;

<<<<<<<
  case 116:
#line 726 "perly.y" /* yacc.c:1646  */
=======
  case 131:
#line 969 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newUNOP(OP_ENTERSUB, OPf_STACKED,
				 op_append_elem(OP_LIST,
				   op_prepend_elem(OP_LIST, (ps[-1].val.opval), (ps[0].val.opval)), (ps[-4].val.opval)));
			}

    break;

<<<<<<<
  case 119:
#line 741 "perly.y" /* yacc.c:1646  */
=======
  case 134:
#line 984 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newBINOP(OP_GELEM, 0, (ps[-4].val.opval), scalar((ps[-2].val.opval))); }

    break;

<<<<<<<
  case 120:
#line 743 "perly.y" /* yacc.c:1646  */
=======
  case 135:
#line 986 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newBINOP(OP_AELEM, 0, oopsAV((ps[-3].val.opval)), scalar((ps[-1].val.opval)));
			}

    break;

<<<<<<<
  case 121:
#line 746 "perly.y" /* yacc.c:1646  */
=======
  case 136:
#line 989 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newBINOP(OP_AELEM, 0,
					ref(newAVREF((ps[-4].val.opval)),OP_RV2AV),
					scalar((ps[-1].val.opval)));
			}

    break;

<<<<<<<
  case 122:
#line 751 "perly.y" /* yacc.c:1646  */
=======
  case 137:
#line 994 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newBINOP(OP_AELEM, 0,
					ref(newAVREF((ps[-3].val.opval)),OP_RV2AV),
					scalar((ps[-1].val.opval)));
			}

    break;

<<<<<<<
  case 123:
#line 756 "perly.y" /* yacc.c:1646  */
=======
  case 138:
#line 999 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newBINOP(OP_HELEM, 0, oopsHV((ps[-4].val.opval)), jmaybe((ps[-2].val.opval)));
			}

    break;

<<<<<<<
  case 124:
#line 759 "perly.y" /* yacc.c:1646  */
=======
  case 139:
#line 1002 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newBINOP(OP_HELEM, 0,
					ref(newHVREF((ps[-5].val.opval)),OP_RV2HV),
					jmaybe((ps[-2].val.opval))); }

    break;

<<<<<<<
  case 125:
#line 763 "perly.y" /* yacc.c:1646  */
=======
  case 140:
#line 1006 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newBINOP(OP_HELEM, 0,
					ref(newHVREF((ps[-4].val.opval)),OP_RV2HV),
					jmaybe((ps[-2].val.opval))); }

    break;

<<<<<<<
  case 126:
#line 767 "perly.y" /* yacc.c:1646  */
=======
  case 141:
#line 1010 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newUNOP(OP_ENTERSUB, OPf_STACKED,
				   newCVREF(0, scalar((ps[-3].val.opval)))); }

    break;

<<<<<<<
  case 127:
#line 770 "perly.y" /* yacc.c:1646  */
=======
  case 142:
#line 1013 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newUNOP(OP_ENTERSUB, OPf_STACKED,
				   op_append_elem(OP_LIST, (ps[-1].val.opval),
				       newCVREF(0, scalar((ps[-4].val.opval))))); }

    break;

<<<<<<<
  case 128:
#line 775 "perly.y" /* yacc.c:1646  */
=======
  case 143:
#line 1018 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newUNOP(OP_ENTERSUB, OPf_STACKED,
				   op_append_elem(OP_LIST, (ps[-1].val.opval),
					       newCVREF(0, scalar((ps[-3].val.opval))))); }

    break;

<<<<<<<
  case 129:
#line 779 "perly.y" /* yacc.c:1646  */
=======
  case 144:
#line 1022 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newUNOP(OP_ENTERSUB, OPf_STACKED,
				   newCVREF(0, scalar((ps[-2].val.opval)))); }

    break;

<<<<<<<
  case 130:
#line 782 "perly.y" /* yacc.c:1646  */
=======
  case 145:
#line 1025 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newSLICEOP(0, (ps[-1].val.opval), (ps[-4].val.opval)); }

    break;

<<<<<<<
  case 131:
#line 784 "perly.y" /* yacc.c:1646  */
=======
  case 146:
#line 1027 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newSLICEOP(0, (ps[-1].val.opval), (ps[-3].val.opval)); }

    break;

<<<<<<<
  case 132:
#line 786 "perly.y" /* yacc.c:1646  */
=======
  case 147:
#line 1029 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newSLICEOP(0, (ps[-1].val.opval), (OP*)NULL); }

    break;

<<<<<<<
  case 133:
#line 791 "perly.y" /* yacc.c:1646  */
=======
  case 148:
#line 1034 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newASSIGNOP(OPf_STACKED, (ps[-2].val.opval), (ps[-1].val.ival), (ps[0].val.opval)); }

    break;

<<<<<<<
  case 134:
#line 793 "perly.y" /* yacc.c:1646  */
=======
  case 149:
#line 1036 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newBINOP(OP_POW, 0, scalar((ps[-2].val.opval)), scalar((ps[0].val.opval))); }

    break;

<<<<<<<
  case 135:
#line 795 "perly.y" /* yacc.c:1646  */
=======
  case 150:
#line 1038 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {   if ((ps[-1].val.ival) != OP_REPEAT)
				scalar((ps[-2].val.opval));
			    (yyval.opval) = newBINOP((ps[-1].val.ival), 0, (ps[-2].val.opval), scalar((ps[0].val.opval)));
			}

    break;

<<<<<<<
  case 136:
#line 800 "perly.y" /* yacc.c:1646  */
=======
  case 151:
#line 1043 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newBINOP((ps[-1].val.ival), 0, scalar((ps[-2].val.opval)), scalar((ps[0].val.opval))); }

    break;

  case 152:
#line 1045 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newBINOP((ps[-1].val.ival), 0, scalar((ps[-2].val.opval)), scalar((ps[0].val.opval))); }

    break;

<<<<<<<
  case 137:
#line 802 "perly.y" /* yacc.c:1646  */
=======
  case 153:
#line 1047 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newBINOP((ps[-1].val.ival), 0, scalar((ps[-2].val.opval)), scalar((ps[0].val.opval))); }

    break;

<<<<<<<
  case 138:
#line 804 "perly.y" /* yacc.c:1646  */
=======
  case 154:
#line 1049 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newBINOP((ps[-1].val.ival), 0, scalar((ps[-2].val.opval)), scalar((ps[0].val.opval))); }

    break;

<<<<<<<
  case 139:
#line 806 "perly.y" /* yacc.c:1646  */
=======
  case 155:
#line 1051 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newBINOP((ps[-1].val.ival), 0, scalar((ps[-2].val.opval)), scalar((ps[0].val.opval))); }

    break;

<<<<<<<
  case 140:
#line 808 "perly.y" /* yacc.c:1646  */
=======
  case 156:
#line 1053 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newBINOP((ps[-1].val.ival), 0, scalar((ps[-2].val.opval)), scalar((ps[0].val.opval))); }

    break;

<<<<<<<
  case 141:
#line 810 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newBINOP((ps[-1].val.ival), 0, scalar((ps[-2].val.opval)), scalar((ps[0].val.opval))); }
=======
  case 157:
#line 1055 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newRANGE((ps[-1].val.ival), scalar((ps[-2].val.opval)), scalar((ps[0].val.opval))); }
>>>>>>>

    break;

<<<<<<<
  case 142:
#line 812 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newRANGE((ps[-1].val.ival), scalar((ps[-2].val.opval)), scalar((ps[0].val.opval))); }
=======
  case 158:
#line 1057 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newLOGOP(OP_AND, 0, (ps[-2].val.opval), (ps[0].val.opval)); }
>>>>>>>

    break;

<<<<<<<
  case 143:
#line 814 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newLOGOP(OP_AND, 0, (ps[-2].val.opval), (ps[0].val.opval)); }
=======
  case 159:
#line 1059 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newLOGOP(OP_OR, 0, (ps[-2].val.opval), (ps[0].val.opval)); }
>>>>>>>

    break;

<<<<<<<
  case 144:
#line 816 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newLOGOP(OP_OR, 0, (ps[-2].val.opval), (ps[0].val.opval)); }
=======
  case 160:
#line 1061 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newLOGOP(OP_DOR, 0, (ps[-2].val.opval), (ps[0].val.opval)); }
>>>>>>>

    break;

<<<<<<<
  case 145:
#line 818 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newLOGOP(OP_DOR, 0, (ps[-2].val.opval), (ps[0].val.opval)); }
=======
  case 161:
#line 1063 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = bind_match((ps[-1].val.ival), (ps[-2].val.opval), (ps[0].val.opval)); }
>>>>>>>

    break;

<<<<<<<
  case 146:
#line 820 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = bind_match((ps[-1].val.ival), (ps[-2].val.opval), (ps[0].val.opval)); }
=======
  case 162:
#line 1068 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP(OP_NEGATE, 0, scalar((ps[0].val.opval))); }
>>>>>>>

    break;

<<<<<<<
  case 147:
#line 825 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP(OP_NEGATE, 0, scalar((ps[0].val.opval))); }
=======
  case 163:
#line 1070 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }
>>>>>>>

    break;

<<<<<<<
  case 148:
#line 827 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }
=======
  case 164:
#line 1073 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP(OP_NOT, 0, scalar((ps[0].val.opval))); }
>>>>>>>

    break;

<<<<<<<
  case 149:
#line 830 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP(OP_NOT, 0, scalar((ps[0].val.opval))); }
=======
  case 165:
#line 1075 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP((ps[-1].val.ival), 0, scalar((ps[0].val.opval))); }
>>>>>>>

    break;

<<<<<<<
  case 150:
#line 832 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP((ps[-1].val.ival), 0, scalar((ps[0].val.opval))); }
=======
  case 166:
#line 1077 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP(OP_POSTINC, 0,
					op_lvalue(scalar((ps[-1].val.opval)), OP_POSTINC)); }
>>>>>>>

    break;

<<<<<<<
  case 151:
#line 834 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP(OP_POSTINC, 0,
					op_lvalue(scalar((ps[-1].val.opval)), OP_POSTINC)); }
=======
  case 167:
#line 1080 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP(OP_POSTDEC, 0,
					op_lvalue(scalar((ps[-1].val.opval)), OP_POSTDEC));}
>>>>>>>

    break;

<<<<<<<
  case 152:
#line 837 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP(OP_POSTDEC, 0,
					op_lvalue(scalar((ps[-1].val.opval)), OP_POSTDEC));}

    break;

  case 153:
#line 840 "perly.y" /* yacc.c:1646  */
=======
  case 168:
#line 1083 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = op_convert_list(OP_JOIN, 0,
				       op_append_elem(
					OP_LIST,
					newSVREF(scalar(
					    newSVOP(OP_CONST,0,
						    newSVpvs("\""))
					)),
					(ps[-1].val.opval)
				       ));
			}

    break;

<<<<<<<
  case 154:
#line 851 "perly.y" /* yacc.c:1646  */
=======
  case 169:
#line 1094 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newBINOP(OP_POW, 0, scalar((ps[-1].val.opval)),
                                        newSVOP(OP_CONST, 0, newSViv(parser->yylval.ival))); }

    break;

<<<<<<<
  case 155:
#line 854 "perly.y" /* yacc.c:1646  */
=======
  case 170:
#line 1097 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newUNOP(OP_PREINC, 0,
					op_lvalue(scalar((ps[0].val.opval)), OP_PREINC)); }

    break;

<<<<<<<
  case 156:
#line 857 "perly.y" /* yacc.c:1646  */
=======
  case 171:
#line 1100 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newUNOP(OP_PREDEC, 0,
					op_lvalue(scalar((ps[0].val.opval)), OP_PREDEC)); }

    break;

<<<<<<<
  case 157:
#line 864 "perly.y" /* yacc.c:1646  */
=======
  case 172:
#line 1107 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newANONLIST((ps[-1].val.opval)); }

    break;

<<<<<<<
  case 158:
#line 866 "perly.y" /* yacc.c:1646  */
=======
  case 173:
#line 1109 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newANONLIST((OP*)NULL);}

    break;

<<<<<<<
  case 159:
#line 868 "perly.y" /* yacc.c:1646  */
=======
  case 174:
#line 1111 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newANONHASH((ps[-2].val.opval)); }

    break;

<<<<<<<
  case 160:
#line 870 "perly.y" /* yacc.c:1646  */
=======
  case 175:
#line 1113 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newANONHASH((OP*)NULL); }

    break;

<<<<<<<
  case 161:
#line 872 "perly.y" /* yacc.c:1646  */
=======
  case 176:
#line 1115 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { SvREFCNT_inc_simple_void(PL_compcv);
			  (yyval.opval) = newANONATTRSUB((ps[-3].val.ival), (ps[-2].val.opval), (ps[-1].val.opval), (ps[0].val.opval)); }

    break;

<<<<<<<
  case 162:
#line 875 "perly.y" /* yacc.c:1646  */
=======
  case 177:
#line 1118 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  OP *sig = (ps[-4].val.opval), *body = (ps[-1].val.opval);
                          /* empty sig sub needs a nextstate at the end
                           * to clear the stack of any default expression
                           * detritus */
                          if (!body && (!sig || !OpHAS_SIBLING(sig)))
                               body = newSTATEOP(0, NULL, NULL);
			  if (parser->copline > (line_t)(ps[-2].val.ival))
			      parser->copline = (line_t)(ps[-2].val.ival);
			  body = block_end((ps[-5].val.ival),
				op_append_list(OP_LINESEQ, sig, body));
			  SvREFCNT_inc_simple_void(PL_compcv);
			  (yyval.opval) = newANONATTRSUB((ps[-6].val.ival), NULL, (ps[-3].val.opval), body);
			}

    break;

<<<<<<<
  case 163:
#line 894 "perly.y" /* yacc.c:1646  */
=======
  case 178:
#line 1137 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = dofile((ps[0].val.opval), (ps[-1].val.ival));}

    break;

<<<<<<<
  case 164:
#line 896 "perly.y" /* yacc.c:1646  */
=======
  case 179:
#line 1139 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newUNOP(OP_NULL, OPf_SPECIAL, op_scope((ps[0].val.opval)));}

    break;

<<<<<<<
  case 169:
#line 904 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newCONDOP(0, (ps[-4].val.opval), (ps[-2].val.opval), (ps[0].val.opval)); }
=======
  case 184:
#line 1147 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newCONDOP(0, (ps[-4].val.opval), (ps[-2].val.opval), (ps[0].val.opval)); }

    break;

  case 185:
#line 1149 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP(OP_REFGEN, 0, (ps[0].val.opval)); }
>>>>>>>

    break;

<<<<<<<
  case 170:
#line 906 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP(OP_REFGEN, 0, (ps[0].val.opval)); }
=======
  case 186:
#line 1151 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP(OP_REFGEN, 0, localize((ps[0].val.opval),1)); }
>>>>>>>

    break;

<<<<<<<
  case 171:
#line 908 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP(OP_REFGEN, 0, localize((ps[0].val.opval),1)); }
=======
  case 187:
#line 1153 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }
>>>>>>>

    break;

<<<<<<<
  case 172:
#line 910 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }
=======
  case 188:
#line 1155 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = localize((ps[0].val.opval),0); }
>>>>>>>

    break;

<<<<<<<
  case 173:
#line 912 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = localize((ps[0].val.opval),0); }
=======
  case 189:
#line 1157 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = sawparens((ps[-1].val.opval)); }
>>>>>>>

    break;

<<<<<<<
  case 174:
#line 914 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = sawparens((ps[-1].val.opval)); }
=======
  case 190:
#line 1159 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }
>>>>>>>

    break;

<<<<<<<
  case 175:
#line 916 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }
=======
  case 191:
#line 1161 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = sawparens(newNULLLIST()); }
>>>>>>>

    break;

<<<<<<<
  case 176:
#line 918 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = sawparens(newNULLLIST()); }
=======
  case 192:
#line 1163 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }
>>>>>>>

    break;

<<<<<<<
  case 177:
#line 920 "perly.y" /* yacc.c:1646  */
=======
  case 193:
#line 1165 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = (ps[0].val.opval); }

    break;

<<<<<<<
  case 178:
#line 922 "perly.y" /* yacc.c:1646  */
=======
  case 194:
#line 1167 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = (ps[0].val.opval); }

    break;

<<<<<<<
  case 179:
#line 924 "perly.y" /* yacc.c:1646  */
=======
  case 195:
#line 1169 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = (ps[0].val.opval); }

    break;

<<<<<<<
  case 180:
#line 926 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }
=======
  case 196:
#line 1171 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP(OP_AV2ARYLEN, 0, ref((ps[0].val.opval), OP_AV2ARYLEN));}
>>>>>>>

    break;

<<<<<<<
  case 181:
#line 928 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP(OP_AV2ARYLEN, 0, ref((ps[0].val.opval), OP_AV2ARYLEN));}
=======
  case 197:
#line 1173 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }
>>>>>>>

    break;

<<<<<<<
  case 182:
#line 930 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }

    break;

  case 183:
#line 932 "perly.y" /* yacc.c:1646  */
=======
  case 198:
#line 1175 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = op_prepend_elem(OP_ASLICE,
				newOP(OP_PUSHMARK, 0),
				    newLISTOP(OP_ASLICE, 0,
					list((ps[-1].val.opval)),
					ref((ps[-3].val.opval), OP_ASLICE)));
			  if ((yyval.opval) && (ps[-3].val.opval))
			      (yyval.opval)->op_private |=
				  (ps[-3].val.opval)->op_private & OPpSLICEWARNING;
			}

    break;

<<<<<<<
  case 184:
#line 942 "perly.y" /* yacc.c:1646  */
=======
  case 199:
#line 1185 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = op_prepend_elem(OP_KVASLICE,
				newOP(OP_PUSHMARK, 0),
				    newLISTOP(OP_KVASLICE, 0,
					list((ps[-1].val.opval)),
					ref(oopsAV((ps[-3].val.opval)), OP_KVASLICE)));
			  if ((yyval.opval) && (ps[-3].val.opval))
			      (yyval.opval)->op_private |=
				  (ps[-3].val.opval)->op_private & OPpSLICEWARNING;
			}

    break;

<<<<<<<
  case 185:
#line 952 "perly.y" /* yacc.c:1646  */
=======
  case 200:
#line 1195 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = op_prepend_elem(OP_HSLICE,
				newOP(OP_PUSHMARK, 0),
				    newLISTOP(OP_HSLICE, 0,
					list((ps[-2].val.opval)),
					ref(oopsHV((ps[-4].val.opval)), OP_HSLICE)));
			  if ((yyval.opval) && (ps[-4].val.opval))
			      (yyval.opval)->op_private |=
				  (ps[-4].val.opval)->op_private & OPpSLICEWARNING;
			}

    break;

<<<<<<<
  case 186:
#line 962 "perly.y" /* yacc.c:1646  */
=======
  case 201:
#line 1205 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = op_prepend_elem(OP_KVHSLICE,
				newOP(OP_PUSHMARK, 0),
				    newLISTOP(OP_KVHSLICE, 0,
					list((ps[-2].val.opval)),
					ref((ps[-4].val.opval), OP_KVHSLICE)));
			  if ((yyval.opval) && (ps[-4].val.opval))
			      (yyval.opval)->op_private |=
				  (ps[-4].val.opval)->op_private & OPpSLICEWARNING;
			}

    break;

<<<<<<<
  case 187:
#line 972 "perly.y" /* yacc.c:1646  */
=======
  case 202:
#line 1215 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = (ps[0].val.opval); }

    break;

<<<<<<<
  case 188:
#line 974 "perly.y" /* yacc.c:1646  */
=======
  case 203:
#line 1217 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newUNOP(OP_ENTERSUB, 0, scalar((ps[0].val.opval))); }

    break;

<<<<<<<
  case 189:
#line 976 "perly.y" /* yacc.c:1646  */
=======
  case 204:
#line 1219 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newUNOP(OP_ENTERSUB, OPf_STACKED, scalar((ps[-2].val.opval)));
			}

    break;

<<<<<<<
  case 190:
#line 979 "perly.y" /* yacc.c:1646  */
=======
  case 205:
#line 1222 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  (yyval.opval) = newUNOP(OP_ENTERSUB, OPf_STACKED,
				op_append_elem(OP_LIST, (ps[-1].val.opval), scalar((ps[-3].val.opval))));
			}

    break;

<<<<<<<
  case 191:
#line 984 "perly.y" /* yacc.c:1646  */
=======
  case 206:
#line 1227 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newUNOP(OP_ENTERSUB, OPf_STACKED,
			    op_append_elem(OP_LIST, (ps[0].val.opval), scalar((ps[-1].val.opval))));
			}

    break;

<<<<<<<
  case 192:
#line 988 "perly.y" /* yacc.c:1646  */
=======
  case 207:
#line 1231 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newSVREF((ps[-3].val.opval)); }

    break;

<<<<<<<
  case 193:
#line 990 "perly.y" /* yacc.c:1646  */
=======
  case 208:
#line 1233 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newAVREF((ps[-3].val.opval)); }

    break;

<<<<<<<
  case 194:
#line 992 "perly.y" /* yacc.c:1646  */
=======
  case 209:
#line 1235 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newHVREF((ps[-3].val.opval)); }

    break;

<<<<<<<
  case 195:
#line 994 "perly.y" /* yacc.c:1646  */
=======
  case 210:
#line 1237 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newUNOP(OP_ENTERSUB, 0,
				       scalar(newCVREF((ps[-1].val.ival),(ps[-3].val.opval)))); }

    break;

<<<<<<<
  case 196:
#line 997 "perly.y" /* yacc.c:1646  */
=======
  case 211:
#line 1240 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newGVREF(0,(ps[-3].val.opval)); }

    break;

<<<<<<<
  case 197:
#line 999 "perly.y" /* yacc.c:1646  */
=======
  case 212:
#line 1242 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newOP((ps[0].val.ival), OPf_SPECIAL);
			    PL_hints |= HINT_BLOCK_SCOPE; }

    break;

<<<<<<<
  case 198:
#line 1002 "perly.y" /* yacc.c:1646  */
=======
  case 213:
#line 1245 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newLOOPEX((ps[-1].val.ival),(ps[0].val.opval)); }

    break;

<<<<<<<
  case 199:
#line 1004 "perly.y" /* yacc.c:1646  */
=======
  case 214:
#line 1247 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newUNOP(OP_NOT, 0, scalar((ps[0].val.opval))); }

    break;

<<<<<<<
  case 200:
#line 1006 "perly.y" /* yacc.c:1646  */
=======
  case 215:
#line 1249 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newOP((ps[0].val.ival), 0); }

    break;

<<<<<<<
  case 201:
#line 1008 "perly.y" /* yacc.c:1646  */
=======
  case 216:
#line 1251 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newUNOP((ps[-1].val.ival), 0, (ps[0].val.opval)); }

    break;

<<<<<<<
  case 202:
#line 1010 "perly.y" /* yacc.c:1646  */
=======
  case 217:
#line 1253 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newUNOP((ps[-1].val.ival), 0, (ps[0].val.opval)); }

    break;

<<<<<<<
  case 203:
#line 1012 "perly.y" /* yacc.c:1646  */
=======
  case 218:
#line 1255 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newOP(OP_REQUIRE, (ps[0].val.ival) ? OPf_SPECIAL : 0); }

    break;

<<<<<<<
  case 204:
#line 1014 "perly.y" /* yacc.c:1646  */
=======
  case 219:
#line 1257 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newUNOP(OP_REQUIRE, (ps[-1].val.ival) ? OPf_SPECIAL : 0, (ps[0].val.opval)); }

    break;

<<<<<<<
  case 205:
#line 1016 "perly.y" /* yacc.c:1646  */
=======
  case 220:
#line 1259 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newUNOP(OP_ENTERSUB, OPf_STACKED, scalar((ps[0].val.opval))); }

    break;

<<<<<<<
  case 206:
#line 1018 "perly.y" /* yacc.c:1646  */
=======
  case 221:
#line 1261 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newUNOP(OP_ENTERSUB, OPf_STACKED,
			    op_append_elem(OP_LIST, (ps[0].val.opval), scalar((ps[-1].val.opval)))); }

    break;

<<<<<<<
  case 207:
#line 1021 "perly.y" /* yacc.c:1646  */
=======
  case 222:
#line 1264 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newOP((ps[0].val.ival), 0); }

    break;

<<<<<<<
  case 208:
#line 1023 "perly.y" /* yacc.c:1646  */
=======
  case 223:
#line 1266 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newOP((ps[-2].val.ival), 0);}

    break;

<<<<<<<
  case 209:
#line 1025 "perly.y" /* yacc.c:1646  */
=======
  case 224:
#line 1268 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = (ps[0].val.opval); }

    break;

<<<<<<<
  case 210:
#line 1027 "perly.y" /* yacc.c:1646  */
=======
  case 225:
#line 1270 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = (ps[-2].val.opval); }

    break;

<<<<<<<
  case 211:
#line 1029 "perly.y" /* yacc.c:1646  */
=======
  case 226:
#line 1272 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newUNOP(OP_ENTERSUB, OPf_STACKED, scalar((ps[0].val.opval))); }

    break;

<<<<<<<
  case 212:
#line 1031 "perly.y" /* yacc.c:1646  */
=======
  case 227:
#line 1274 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = ((ps[-2].val.ival) == OP_NOT)
                          ? newUNOP((ps[-2].val.ival), 0, newSVOP(OP_CONST, 0, newSViv(0)))
                          : newOP((ps[-2].val.ival), OPf_SPECIAL); }

    break;

<<<<<<<
  case 213:
#line 1035 "perly.y" /* yacc.c:1646  */
=======
  case 228:
#line 1278 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newUNOP((ps[-3].val.ival), 0, (ps[-1].val.opval)); }

    break;

<<<<<<<
  case 214:
#line 1037 "perly.y" /* yacc.c:1646  */
=======
  case 229:
#line 1280 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			    if (   (ps[0].val.opval)->op_type != OP_TRANS
			        && (ps[0].val.opval)->op_type != OP_TRANSR
				&& (((PMOP*)(ps[0].val.opval))->op_pmflags & PMf_HAS_CV))
			    {
				(yyval.ival) = start_subparse(FALSE, CVf_ANON);
				SAVEFREESV(PL_compcv);
			    } else
				(yyval.ival) = 0;
			}

    break;

<<<<<<<
  case 215:
#line 1048 "perly.y" /* yacc.c:1646  */
=======
  case 230:
#line 1291 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = pmruntime((ps[-5].val.opval), (ps[-2].val.opval), (ps[-1].val.opval), 1, (ps[-4].val.ival)); }

    break;

<<<<<<<
  case 218:
#line 1052 "perly.y" /* yacc.c:1646  */
=======
  case 233:
#line 1295 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  (yyval.opval) = newLISTOP(OP_DIE, 0, newOP(OP_PUSHMARK, 0),
				newSVOP(OP_CONST, 0, newSVpvs("Unimplemented")));
			}

    break;

<<<<<<<
  case 220:
#line 1061 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = my_attrs((ps[-1].val.opval),(ps[0].val.opval)); }
=======
  case 235:
#line 1304 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = my_attrs((ps[-1].val.opval),(ps[0].val.opval)); }

    break;

  case 236:
#line 1306 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = localize((ps[0].val.opval),1); }
>>>>>>>

    break;

<<<<<<<
  case 221:
#line 1063 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = localize((ps[0].val.opval),1); }
=======
  case 237:
#line 1308 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP(OP_REFGEN, 0, my_attrs((ps[-1].val.opval),(ps[0].val.opval))); }
>>>>>>>

    break;

<<<<<<<
  case 222:
#line 1065 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP(OP_REFGEN, 0, my_attrs((ps[-1].val.opval),(ps[0].val.opval))); }
=======
  case 238:
#line 1313 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = sawparens((ps[-1].val.opval)); }
>>>>>>>

    break;

<<<<<<<
  case 223:
#line 1070 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = sawparens((ps[-1].val.opval)); }
=======
  case 239:
#line 1315 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = sawparens(newNULLLIST()); }
>>>>>>>

    break;

<<<<<<<
  case 224:
#line 1072 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = sawparens(newNULLLIST()); }
=======
  case 240:
#line 1318 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }
>>>>>>>

    break;

<<<<<<<
  case 225:
#line 1075 "perly.y" /* yacc.c:1646  */
=======
  case 241:
#line 1320 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = (ps[0].val.opval); }

    break;

<<<<<<<
  case 226:
#line 1077 "perly.y" /* yacc.c:1646  */
=======
  case 242:
#line 1322 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = (ps[0].val.opval); }

    break;

<<<<<<<
  case 227:
#line 1079 "perly.y" /* yacc.c:1646  */
=======
  case 243:
#line 1324 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = (ps[0].val.opval); }

    break;

<<<<<<<
  case 228:
#line 1081 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }
=======
  case 244:
#line 1329 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (OP*)NULL; }
>>>>>>>

    break;

<<<<<<<
  case 229:
#line 1086 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (OP*)NULL; }
=======
  case 245:
#line 1331 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }
>>>>>>>

    break;

<<<<<<<
  case 230:
#line 1088 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }
=======
  case 246:
#line 1335 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (OP*)NULL; }
>>>>>>>

    break;

<<<<<<<
  case 231:
#line 1092 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (OP*)NULL; }
=======
  case 247:
#line 1337 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }
>>>>>>>

    break;

<<<<<<<
  case 232:
#line 1094 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }
=======
  case 248:
#line 1341 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (OP*)NULL; }
>>>>>>>

    break;

<<<<<<<
  case 233:
#line 1098 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (OP*)NULL; }
=======
  case 249:
#line 1343 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }
>>>>>>>

    break;

<<<<<<<
  case 234:
#line 1100 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }

    break;

  case 235:
#line 1104 "perly.y" /* yacc.c:1646  */
    { (yyval.ival) = (ps[0].val.ival); }

    break;

  case 236:
#line 1106 "perly.y" /* yacc.c:1646  */
    { munge_qwlist_to_paren_list((ps[0].val.opval)); }

    break;

  case 237:
#line 1108 "perly.y" /* yacc.c:1646  */
    { (yyval.ival) = (ps[0].val.ival); }

    break;

  case 238:
#line 1114 "perly.y" /* yacc.c:1646  */
=======
  case 250:
#line 1349 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { parser->in_my = 0; (yyval.opval) = my((ps[0].val.opval)); }

    break;

<<<<<<<
  case 246:
#line 1131 "perly.y" /* yacc.c:1646  */
=======
  case 258:
#line 1366 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newCVREF((ps[-1].val.ival),(ps[0].val.opval)); }

    break;

<<<<<<<
  case 247:
#line 1135 "perly.y" /* yacc.c:1646  */
=======
  case 259:
#line 1370 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newSVREF((ps[0].val.opval)); }

    break;

<<<<<<<
  case 248:
#line 1139 "perly.y" /* yacc.c:1646  */
=======
  case 260:
#line 1374 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newAVREF((ps[0].val.opval));
			  if ((yyval.opval)) (yyval.opval)->op_private |= (ps[-1].val.ival);
			}

    break;

<<<<<<<
  case 249:
#line 1145 "perly.y" /* yacc.c:1646  */
=======
  case 261:
#line 1380 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
                          SV *constsv = cSVOPx_sv((ps[-1].val.opval));
                          assert((ps[-3].val.opval)->op_targ);
                          if (SvTYPE(constsv) != SVt_IV)
                            Perl_croak(aTHX_ "Invalid array size %s[%s]",
                                  PAD_COMPNAME_PV((ps[-3].val.opval)->op_targ),
                                  SvPOK(constsv) ? SvPVX(constsv) : "");
                          /* - is not a THING, syntax error near "[-"
                          if (size <= 0)
                            Perl_croak(aTHX_ "Invalid array size %s[%d]",
                                  PAD_COMPNAME_PV($2->op_targ), size);
                          */
			  if (!FEATURE_SHAPED_ARRAYS_IS_ENABLED)
                              Perl_croak(aTHX_ "Experimental "
                                    "shaped_arrays not enabled");
#ifndef USE_CPERL
                          /* Policies... Either provide a stable feature or not.
                             No need to be defensive about every single new feature */
			  ck_warner_d(
				packWARN(WARN_EXPERIMENTAL__SHAPED_ARRAYS),
				"The shaped_arrays feature is experimental");
#endif
			  (yyval.opval) = newAVREF((ps[-3].val.opval));
                          av_init_shaped(MUTABLE_AV(PAD_SV((ps[-3].val.opval)->op_targ)), SvIVX(constsv),
                                        PadnameTYPE(PAD_COMPNAME((ps[-3].val.opval)->op_targ)));
			}

    break;

<<<<<<<
  case 250:
#line 1174 "perly.y" /* yacc.c:1646  */
=======
  case 262:
#line 1409 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newHVREF((ps[0].val.opval));
			  if ((yyval.opval)) (yyval.opval)->op_private |= (ps[-1].val.ival);
			}

    break;

<<<<<<<
  case 251:
#line 1180 "perly.y" /* yacc.c:1646  */
=======
  case 263:
#line 1415 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newAVREF((ps[0].val.opval)); }

    break;

<<<<<<<
  case 252:
#line 1182 "perly.y" /* yacc.c:1646  */
=======
  case 264:
#line 1417 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newAVREF((ps[-3].val.opval)); }

    break;

<<<<<<<
  case 253:
#line 1186 "perly.y" /* yacc.c:1646  */
=======
  case 265:
#line 1421 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newGVREF(0,(ps[0].val.opval)); }

    break;

<<<<<<<
  case 255:
#line 1191 "perly.y" /* yacc.c:1646  */
=======
  case 267:
#line 1426 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newAVREF((ps[-2].val.opval)); }

    break;

<<<<<<<
  case 257:
#line 1196 "perly.y" /* yacc.c:1646  */
=======
  case 269:
#line 1431 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newHVREF((ps[-2].val.opval)); }

    break;

<<<<<<<
  case 259:
#line 1201 "perly.y" /* yacc.c:1646  */
=======
  case 271:
#line 1436 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newGVREF(0,(ps[-2].val.opval)); }

    break;

<<<<<<<
  case 260:
#line 1206 "perly.y" /* yacc.c:1646  */
=======
  case 272:
#line 1441 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = scalar((ps[0].val.opval)); }

    break;

<<<<<<<
  case 261:
#line 1208 "perly.y" /* yacc.c:1646  */
=======
  case 273:
#line 1443 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = scalar((ps[0].val.opval)); }

    break;

<<<<<<<
  case 262:
#line 1210 "perly.y" /* yacc.c:1646  */
=======
  case 274:
#line 1445 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = op_scope((ps[0].val.opval)); }

    break;

<<<<<<<
  case 263:
#line 1213 "perly.y" /* yacc.c:1646  */
=======
  case 275:
#line 1448 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = (ps[0].val.opval); }

    break;



      default: break;
    

/* Generated from:
<<<<<<<
 * 9a94681ba0acc02457d97697f3914966e112074f0d18d3656676ce2e2d766ad0 perly.y
=======
 * d05dd327dc67452eabf31fb86d50000777cae721beb59e30a2b9e31a205cce47 perly.y
>>>>>>>
 * d75acf04e5e050e9d0de13999b5b46a13f176dcf9f75c07acf51e913fc41db9a regen_perly.pl
 * ex: set ro: */
