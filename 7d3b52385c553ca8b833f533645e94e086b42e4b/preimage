=encoding utf8

=head1 NAME

perlcdelta - what is new for cperl v5.29.1

=head1 DESCRIPTION

This document describes differences between the cperl 5.29.1 and the cperl
5.28.0 release.

<<<<<<<
If you are upgrading from an earlier release such as v5.26.3c, first read
L<perl5280cdelta>, which describes differences between v5.26.3c and v5.28.0c.
=======
If you are upgrading from an earlier release such as v5.28.1c, first read
L<perl5290cdelta>, which describes differences between v5.28.1c and v5.29.0c.

=head1 Notice

XXX Any important notices here
>>>>>>>

=head1 Core Enhancements

=head2 Check bless name under use strict names

The second argument to bless, the new classname, is now checked to be a
valid package name identifier when B<strict 'names'> is in effect, and the
name is now normalized.
L<[cperl #376]|https://github.com/perl11/cperl/issues/376>

This is a bugfix, but a major compatibility change.

<<<<<<<
=head1 Security

XXX Any security-related notices go here.  In particular, any security
vulnerabilities closed should be noted here rather than in the
L</Selected Bug Fixes> section.

[ List each security issue as a =head2 entry ]

=======
=head2 New warning shadow package

When a subroutine with the same name of a package exists, all package
methods are rerouted through this subroutine, effectively
eliminating all access to the package via methods.  This is almost
always an error, unless you want to override access to the package
or want a data-only package, without any methods.
cperl added the shadow warnings
L<perldiag/"Subroutine &%s::%s masks existing package %s::%s">
and L<perldiag/"Subroutine &%s masks new package %s">.
Use C<no warnings 'shadow';> to silence these new warnings.

=head2 extern sub - libffi

A new L<ffi> was added to core, with a syntax resembling perl6
NativeCall.  Perl6 traits are cperl L<attributes>, but attribute
values may be deferred to run-time. Packagers need to add B<libffi> to
their library dependencies. Windows packages are provided,
see F<appveyor.yml>.

Not yet implemented are the C<:encoded()> attribute for string
arguments and return values, the various encoded string types Uni,
wchar, c-struct helpers, native arrays and native classes
(i.e. structs), callback helpers and support for variadic (varargs)
functions.

>>>>>>>
=head1 Incompatible Changes

<<<<<<<
=head2 Protected hash iterators
=======
XXX For a release on a stable branch, this section aspires to be:

    There are no changes intentionally incompatible with 5.XXX.XXX
    If any exist, they are bugs, and we request that you submit a
    report.  See L</Reporting Bugs> below.

[ List each incompatible change as a =head2 entry ]

=head2 HINTS_LOCALE_PARTIAL
>>>>>>>

The scalarC< HINTS_LOCALE_PARTIAL> hints bit is gone, you need to look at
the C<%^H> value. For backward compatibility the value of
C<HINTS_LOCALE_PARTIAL> is now the same as C<HINTS_LOCALE>.

=head1 Deprecations

XXX Any deprecated features, syntax, modules etc. should be listed here.

=head1 Performance Enhancements

=over 4

=item Improve newSVpvn_share

Don't downgrade twice, the is_utf8 flags can be taken from the
returned hek, which does the downgrading to bytes already.

=back

=head1 Modules and Pragmata

=head2 New Modules and Pragmata

=over 4

=item *

XXX

=back

=head2 Updated Modules and Pragmata

=over 4

=item *

L<XXX> has been upgraded from version A.xx to B.yy.

=back

=head2 Removed Modules and Pragmata

=over 4

=item *

XXX

=back

=head1 Documentation

XXX Changes to files in F<pod/> go here.  Consider grouping entries by
file and be sure to link to the appropriate page, e.g. L<perlfunc>.

=head2 Changes to Existing Documentation

We have attempted to update the documentation to reflect the changes
listed in this document.  If you find any we have missed, send email
to L<perlbug@perl.org|mailto:perlbug@perl.org>.

<<<<<<<
=head3 L<perlfaq> 5.20180915
=======
XXX Changes which significantly change existing files in F<pod/> go here.
However, any changes to F<pod/perldiag.pod> should go in the L</Diagnostics>
section.

Additionally, the following selected changes have been made:

=head3 L<XXX>
>>>>>>>

<<<<<<<
=over 4

=item *

XXX Description of the change here
=======
prepend "./" to local require calls.
Mojolicious ands Dancer2 are not called young anymore.
>>>>>>>

=head1 Diagnostics

The following additions or changes have been made to diagnostic output,
including warnings and fatal error messages.  For the complete list of
diagnostic messages, see L<perldiag>.

=head2 New Diagnostics

=head3 New Errors

=over 4

=item *

L<ffi_prep_cif error %d: %s at %s, line %d|perldiag/"ffi_prep_cif error %d: %s at %s, line %d">

=item *

L<An extern sub may not have a prototype|perldiag/"An extern sub may not have a prototype">

=item *

L<ffi not available|perldiag/"ffi not available">

=item *

L<Illegal declaration of extern subroutine %s. Need signature|perldiag/"Illegal declaration of extern subroutine %s. Need signature">

=item *

L<Illegal :encoded(%s) argument|perldiag/"Illegal :encoded(%s) argument">

=item *

L<Illegal :nativeconv(%s) argument|perldiag/"Illegal :nativeconv(%s) argument">

=item *

L<Invalid :%s(%s) attribute argument type|perldiag/"Invalid :%s(%s) attribute argument type">

=item *

L<Missing type for extern sub argument %s|perldiag/"Missing type for extern sub argument %s">

=item *

L<:nativeconv is only valid for :native or extern sub|perldiag/":nativeconv is only valid for :native or extern sub">

=item *

L<Null extern sub symbol|perldiag/"Null extern sub symbol">

=item *

L<:%s() attribute argument missing|perldiag/":%s() attribute argument missing">

=item *

L<:%s is only valid for :native or extern sub|perldiag/":%s is only valid for :native or extern sub">

=item *

L<Unknown ffi return type :%s, assume :void|perldiag/"Unknown ffi return type :%s, assume :void">

=item *

L<Attempt to change hash while iterating over it|perldiag/"Attempt to change hash while iterating over it">

=back

=head3 New Warnings

=over 4

=item *

XXX L<message|perldiag/"message">

=item *

L<ffi: Possible %s overflow %d|perldiag/"ffi: Possible %s overflow %d">

=item *

L<no ffi without DynaLoader|perldiag/"no ffi without DynaLoader">

=item *

L<:symbol is already resolved|perldiag/":symbol is already resolved">

=item *

L<Use of '%s' in \p{} or \P{} is deprecated because: %s|perldiag/"Use of '%s' in \p{} or \P{} is deprecated because: %s">

=back

=head2 Changes to Existing Diagnostics

=over 4

=item No autovivification of hash slice anymore

Added note that this warning is only enabled with the
lexical C<syntax> warnings category, not C<-w> anymore.

=item Unescaped left brace in regex is deprecated here (and will be fatal in Perl 5.32), passed through in regex; marked by S<<-- HERE> in m/%s/

Added note that cperl allows more. In cperl only the combinations with C<\NpPbBxog{}>
are illegal.

=back

=head1 Configuration and Compilation

=over 4

<<<<<<<
=item *
=======
=item useffi

Added if F<ffi.h> is being found. If so the C<incpth>, C<ccflags> and
C<libs> is extended to include libffi.

=item ffi_targets

With C<useffi> this space-seperated string is filled with the valid and
supported C<:nativeconv()> ABI's, in uppercase. Matching HAVE_FFI_*
defines in F<config.h>. See L<attributes/nativeconv(STRING)>.

=item usesafehashiter

Disable destructive hash key modifications during iteration by default.
C<use hashiter;> to allow it.
L<[cperl #117]|https://github.com/perl11/cperl/issues/117>

=item doubleinfbytes,doublenanbytes,longdblinfbytes,longdblnanbytes

Fixed the error cases when the double or long double probes returned undef.

=item F<Porting/do-make-cperl-release>
>>>>>>>

XXX

=back

=head1 Testing

Tests were added and changed to reflect the other additions and
changes in this release.  Furthermore, these significant changes were
made:

=over 4

=item *

XXX

=item *

F<op/chdir.t> when pwd is a symlink.

=back

=head1 Platform Support

=head2 Platform-Specific Notes

=over 4

<<<<<<<
=item Oracle Linux

=over 4

=item *

DTrace support has been added by also looking for F</sbin/dtrace>.
Install it with C<sudo yum install -y dtrace-utils dtrace-utils-devel>.

=back

=item Windows

=over 4

=item *

Add DynaLoader fallbacks to C<dl_find_symbol> to mimic the POSIX behaviour with
an empty libhandle argument: Search the symbol in all loaded/most shared
libraries. This is a convenience platform-compat feature for the L<ffi>.

=item *

The new Windows 10 DTrace support has not been tested yet.

=back

=item mingw

=over 4

=item *

Fixed Errno from processing some protected intrinsics directly, which fail with
#error "Never use <avx512vpopcntdqintrin.h>, <avx512ifmaintrin.h> directly; include <immintrin.h> instead."
#error "Never use <fmaintrin.h> directly; include <immintrin.h> instead."
#error "Never use <xsavesintrin.h> directly; include <x86intrin.h> instead."
=======
=item XXX-some-platform
>>>>>>>

XXX

=back

=head1 Selected Bug Fixes

XXX Important bug fixes in the core language are summarized here.  Bug fixes in
files in F<ext/> and F<lib/> are best summarized in L</Modules and Pragmata>.

<<<<<<<
A shared string and a GV with chars in the range 128-255 are downgraded to
bytes without the UTF8 flag. Store at least the HEK_WASUTF8 flag then.

=item *

Check bless name under use strict 'names'.
=======
[ List each fix as an =item entry ]
>>>>>>>

<<<<<<<
=over 4
=======
The second argument to bless, the new classname, is now checked to be a
valid package name identifier when B<strict 'names'> is in effect, and the
name is now normalized.
L<[cperl #376]|https://github.com/perl11/cperl/issues/376>
>>>>>>>

=item *

XXX

=back

=head1 Known Problems

=over 4

=item *

<<<<<<<
Detect shared-only import libraries like F<libNAME.dll.a>, which have no static
counterpart F<libNAME.a>, which happens e.g. for C<libffi> on B<cygwin> or msys.

=======
XXX

>>>>>>>
=back

=head1 Acknowledgements

cperl 5.29.0 represents approximately 5 weeks of development since cperl
5.28.0c and contains approximately 63,000 lines of changes across 1,100
files from 2 authors.

Excluding auto-generated files, documentation and release tools, there were
approximately 14,000 lines of changes to 200 .pm, .t, .c and .h files.

The following people are known to have contributed the improvements that
became cperl 5.29.0:

Reini Urban, Andreas König.

Many of the changes included in this version originated in the CPAN modules
included in Perl's core. We're grateful to the entire CPAN community for
helping Perl to flourish.

For a more complete list of all of Perl's historical contributors, please
see the F<AUTHORS> file in the Perl source distribution.

Generated with:

    cperl Porting/acknowledgements.pl cperl-5.29.0..HEAD -c

=head1 Reporting Bugs

If you find what you think is a bug, you might check the perl bug database
at L<https://rt.perl.org/> .  There may also be information at
L<http://www.perl.org/> , the Perl Home Page.

If you believe you have an unreported bug, please run the L<cperlbug> program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of C<perl -V>,
will be sent off to perlbug@perl.org to be analysed by the Perl porting team.

If you think it's a cperl specific bug or trust the cperl developers more 
please file an issue at L<https://github.com/perl11/cperl/issues>.

If the bug you are reporting has security implications which make it
inappropriate to send to a publicly archived mailing list, then see
L<perlsec/SECURITY VULNERABILITY CONTACT INFORMATION>
For details of how to report the issue.

=head1 SEE ALSO

The F<Changes> file for an explanation of how to view exhaustive details on
what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut
