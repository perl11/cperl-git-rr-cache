=encoding utf8

=head1 NAME

perlcdelta - what is new for cperl v5.29.2

=head1 DESCRIPTION

This document describes differences between the cperl 5.29.2 and the cperl
5.29.1 release.

If you are upgrading from an earlier release such as v5.29.0c, first read
L<perl5291cdelta>, which describes differences between v5.29.0c and v5.29.1c.

=head1 Notice

XXX Any important notices here

=head1 Core Enhancements

=head2 Unicode 11.0 is supported

For details, see L<https://www.unicode.org/versions/Unicode11.0.0/>.

The Word_Break property, as in past Perl releases, remains tailored to
behave more in line with expectations of Perl users.  This means that
sequential runs of horizontal white space characters are not broken
apart, but kept as a single run.  Unicode 11 changed from past versions
to be more in line with Perl, but it left several white space characters
as causing breaks: TAB, NO BREAK SPACE, and FIGURE SPACE (U+2007).  We
have decided to continue to use the previous Perl tailoring with regards
to these.

As of July 2018, another aspect of Unicode 11.0 is causing problems, and
that is the changing the Georgian script to have both lower and
uppercase letters.  It turns out that many devices do not have fonts
installed that can display the new uppercase letters, and people using
Georgian are finding their text more or less illegible.  It is being
suggested that implementations delay their adoption of this portion of
11.0.

But since the next stable release of Perl is almost a year away, this
aspect of 11.0 is being left in, with the option to back it out if
things haven't improved by that time, or if we get too many complaints
about the development release being unusable for Georgian users.

=head2 Handle qr!\p{nv=6/8}!

Allow a rational number specified in looking up the Numeric
Value Unicode property to not be in lowest possible terms.

The Numeric Value property allows one to find all code points that have
a certain numeric value.  An example would be to match against any
character in any of the world's scripts which is effectively equivalent
to the digit zero.

We accept either integers (like C<\p{nv=9}>) or rationals (like C<\p{nv=1/2}>).
But we also accept floating point representations in case a conversion to numeric
has happened, (like C<\p{nv=0.5}>).
The necessary precision is now automatically pre-calculated and the lookup
normalized.

=head2 The maximum number of times a pattern can match has been doubled
to 65535

This means if you specify C<qr/a+/> that there can be anywhere from 1
through 65535 C<"a">'s in a row, instead of 32267 as previously.

=head1 Security

XXX Any security-related notices go here.  In particular, any security
vulnerabilities closed should be noted here rather than in the
L</Selected Bug Fixes> section.

[ List each security issue as a =head2 entry ]

=head1 Incompatible Changes

XXX For a release on a stable branch, this section aspires to be:

    There are no changes intentionally incompatible with 5.XXX.XXX
    If any exist, they are bugs, and we request that you submit a
    report.  See L</Reporting Bugs> below.

[ List each incompatible change as a =head2 entry ]

=head1 Deprecations

XXX Any deprecated features, syntax, modules etc. should be listed here.

=head2 Module removals

XXX Remove this section if inapplicable.

The following modules will be removed from the core distribution in a
future release, and will at that time need to be installed from CPAN.
Distributions on CPAN which require these modules will need to list them as
prerequisites.

The core versions of these modules will now issue C<"deprecated">-category
warnings to alert you to this fact.  To silence these deprecation warnings,
install the modules in question from CPAN.

Note that these are (with rare exceptions) fine modules that you are encouraged
to continue to use.  Their disinclusion from core primarily hinges on their
necessity to bootstrapping a fully functional, CPAN-capable Perl installation,
not usually on concerns over their design.

=over

=item XXX

XXX Note that deprecated modules should be listed here even if they are listed
as an updated module in the L</Modules and Pragmata> section.

=back

=head2 Remove support for C<qr/\p{_Case_Ignorable}>

This property is no longer used in the core, nor in cpan, and is marked
as for core use only, not necessarily stable.  I have kept it around
because it was work to remove it, but now the revamping of the property
lookup scheme was causing failures with it, when compiling on early
Unicode releases.  That could be fixed with extra work, but simply
removing it also fixes the problem and avoids future maintenance
costs.

=head2 Remove support for C<qr/\p{_Comb_Above}>

This property is no longer used in the core, nor in cpan, and is marked
as for core use only, not necessarily stable.  I have kept it around
because it was work to remove it, but now the revamping of the property
lookup scheme was causing failures with a similar property, and the
previous commit removed that one.

=head2 Remove support for C<qr/\p{_CanonDCIJ}>

The property is not used in cpan, and is being removed as part of the cleanup
instigated because another of the 3 would
require extra code to handle if we were to keep it around.

=head1 Performance Enhancements

=over 4

=item *

Improved Unicode numeric property lookups, for C<\p{nv=float}>,
in size and speed by using more pre-compiled perfect hashes instead
of slow pure-perl invlist walks at run-time, esp. for all numeric
properties (70 more).
Also avoids more swash creations.

=item *

Translating from UTF-8 into the code point it represents now is done via a
deterministic finite automaton, speeding it up.  As a typical example,
C<ord("\x7fff")> now requires 12% fewer instructions than before.  The
performance of checking that a sequence of bytes is valid UTF-8 is similarly
improved, again by using a dfa.

=back

=head1 Modules and Pragmata

XXX All changes to installed files in F<cpan/>, F<dist/>, F<ext/> and F<lib/>
go here.  If Module::CoreList is updated, generate an initial draft of the
following sections using F<Porting/corelist-perldelta.pl>.  A paragraph summary
for important changes should then be added by hand.  In an ideal world,
dual-life modules would have a F<Changes> file that could be cribbed.

The list of new and updated modules is modified automatically as part of
preparing a Perl release, so the only reason to manually add entries here is if
you're summarising the important changes in the module update. (Also, if the
manually-added details don't match the automatically-generated ones, the
release manager will have to investigate the situation carefully.)

[ Within each section, list entries as an =item entry ]

=head2 New Modules and Pragmata

=over 4

=item *

XXX

=back

=head2 Updated Modules and Pragmata

=over 4

=item L<B::Deparse> 1.49_05c

Removed arybase support.

=item L<Config> 6.23

Add the FREEBSD_KERNEL_VERSION key for FreeBSD.

=item L<Config::Extensions> 0.03

Whitespace only

=item L<feature> 1.54_01

C<array_base> was removed.

=item L<IO> 1.39_02

Skip EINVAL on FreeBSD tests when binding a tcp listener on localhost.

=item L<IO::Socket::IP> 0.39_03

Allow ETIMEDOUT on FreeBSD INET6 socket with V6Only true.
L<[cpan #128986]|https://rt.cpan.org/Ticket/Display.html?id=128986>

=item L<Net::Ping> 2.72

Features

Allow data_size > 1024, up to 65535, i.e. fragmented packets.
It is recommended to stay below 1472 though for the typical 1500 MTU.
Many simple devices do not allow fragmented ICMP packets (> 1472).
L<[cpan #17409]|https://rt.cpan.org/Ticket/Display.html?id=17409>

Bugfixes

Fix the max_datasize documentation

Test fixes

The 2 sudo tests on PERL_CORE with a shared perl lib.
Skip failing freebsd localhost resolver tests.

=item L<PerlIO::scalar> 0.30

Allow Off_t smaller than size_t. (Win64 with USE_LARGE_FILES=undef)
L<[perl #133422]|https://rt.perl.org/Public/Bug/Display.html?id=133422>

=item L<POSIX> 1.85_03

Use quadmath versions of log10, ldexp and signbit
L<[perl #133510]|https://rt.perl.org/Public/Bug/Display.html?id=133510>

=item L<Storable> 3.13_04

fix and clarify handling of recurs_sv.
L<[perl #133326]|https://rt.perl.org/Public/Bug/Display.html?id=133326>

=item L<Time::HiRes> 1.9760_02

make utime() available only if we have both fd and name setting
L<[perl #133030]|https://rt.perl.org/Public/Bug/Display.html?id=133030>

Adjust Makefile.PL for windows: the DEFINE() in Makefile.PL
can't be be in sub init() because that sub isn't called on windows

t/itimer.t: avoid race condition. don't truncate nanosec utime

fallback/const-c.inc: Avoid compiler warning showing up on darwin.

=item L<Unicode::UCD> 0.71_03

Preserve old-style casing for C<%SCRIPTS>, i.e.
C<Egyptian_hieroglyphs> for C<Egyptian_Hieroglyphs>.

=item L<vars> 1.05_01c

F<vars.pm> no longer disables non-vars strict when checking if strict
vars is enabled.
L<[perl #130674]|https://rt.perl.org/Public/Bug/Display.html?id=130674>


=back

=head2 Removed Modules and Pragmata

=over 4

=item *

L<arybase> was removed.

Setting C<$[> to a non-zero value has been deprecated since Perl 5.12 and
throws a fatal error as of Perl 5.30.
See L<perldeprecation/Assigning non-zero to C<< $[ >> is fatal>

=item *

L<B::Debug> is no longer distributed with the core distribution.
This was announced with v5.28.0. It remains available on CPAN.

=back

=head1 Documentation

XXX Changes to files in F<pod/> go here.  Consider grouping entries by
file and be sure to link to the appropriate page, e.g. L<perlfunc>.

=head2 New Documentation

XXX Changes which create B<new> files in F<pod/> go here.

=head3 L<XXX>

XXX Description of the purpose of the new file here

=head2 Changes to Existing Documentation

We have attempted to update the documentation to reflect the changes
listed in this document.  If you find any we have missed, send email
to L<perlbug@perl.org|mailto:perlbug@perl.org>.

XXX Changes which significantly change existing files in F<pod/> go here.
However, any changes to F<pod/perldiag.pod> should go in the L</Diagnostics>
section.

Additionally, the following selected changes have been made:

=head3 L<XXX>

=over 4

=item *

XXX Description of the change here

=back

=head1 Diagnostics

The following additions or changes have been made to diagnostic output,
including warnings and fatal error messages.  For the complete list of
diagnostic messages, see L<perldiag>.

XXX New or changed warnings emitted by the core's C<C> code go here.  Also
include any changes in L<perldiag> that reconcile it to the C<C> code.

=head2 New Diagnostics

XXX Newly added diagnostic messages go under here, separated into New Errors
and New Warnings

=head3 New Errors

=over 4

=item *

XXX L<message|perldiag/"message">

=back

=head3 New Warnings

=over 4

=item *

XXX L<message|perldiag/"message">

=back

=head2 Changes to Existing Diagnostics

=over 4

=item *

cperl fatalized the error on non-grapheme string delimiters (ie. illegal utf8)
in v5.25.3c already, e.g with C<qr ̂foobar̂>.
perl5 did it with v5.29.0 but used 3 error lines instead of just one.

"Use of unassigned code point or non-standalone grapheme for a delimiter"
uses now 3 lines:
"Use of unassigned code point or non-standalone grapheme for a delimiter is not allowed at -, near"
"Use of unassigned code point or non-standalone grapheme for a delimiter is not allowed at -, near"
"Execution of - aborted due to compilation errors."

=back

=head1 Utility Changes

XXX Changes to installed programs such as F<perlbug> and F<xsubpp> go here.
Most of these are built within the directory F<utils>.

[ List utility changes as a =head2 entry for each utility and =item
entries for each change
Use L<XXX> with program names to get proper documentation linking. ]

=head2 L<XXX>

=over 4

=item *

XXX

=back

=head1 Configuration and Compilation

XXX Changes to F<Configure>, F<installperl>, F<installman>, and analogous tools
go here.  Any other changes to the Perl build process should be listed here.
However, any platform-specific changes should be listed in the
L</Platform Support> section, instead.

[ List changes as an =item entry ].

=over 4

=item *

Avoid bumping F<config.sh>/F<config.h> mtimes when adding valid libffi
targets in F<configpm>.  This caused massive miniperl rebuilds, but
is only needed for perl-dependent targets much later.

=back

=head1 Testing

XXX Any significant changes to the testing of a freshly built perl should be
listed here.  Changes which create B<new> files in F<t/> go here as do any
large changes to the testing harness (e.g. when parallel testing was added).
Changes to existing files in F<t/> aren't worth summarizing, although the bugs
that they represent may be covered elsewhere.

XXX If there were no significant test changes, say this:

Tests were added and changed to reflect the other additions and changes
in this release.

XXX If instead there were significant changes, say this:

Tests were added and changed to reflect the other additions and
changes in this release.  Furthermore, these significant changes were
made:

[ List each test improvement as an =item entry ]

=over 4

=item *

XXX

=back

=head1 Platform Support

XXX Any changes to platform support should be listed in the sections below.

[ Within the sections, list each platform as an =item entry with specific
changes as paragraphs below it. ]

=head2 New Platforms

XXX List any platforms that this version of perl compiles on, that previous
versions did not.  These will either be enabled by new files in the F<hints/>
directories, or new subdirectories and F<README> files at the top level of the
source tree.

=over 4

=item XXX-some-platform

XXX

=back

=head2 Discontinued Platforms

XXX List any platforms that this version of perl no longer compiles on.

=over 4

=item XXX-some-platform

XXX

=back

=head2 Platform-Specific Notes

XXX List any changes for specific platforms.  This could include configuration
and compilation changes or changes in portability/compatibility.  However,
changes within modules for platforms should generally be listed in the
L</Modules and Pragmata> section.

=over 4

=item Win32

=over 4

=item *

C<sleep()> with warnings enabled for a C<USE_IMP_SYS> build no longer
warns about the sleep timeout being too large.
L<[perl #133376]|https://rt.perl.org/Public/Bug/Display.html?id=133376>

=back

=item Linux

=over 4

=item *

The hints now detect newer compilers and set optimize=-O3 by default,
needed for better -flto and inlining support, instead of -O2.

=back

=item FreeBSD

=over 4

=item *

Added F</usr/local/include> to C<incpth>, which helps probing libffi during F<configpm>.
If was only in ccflags via C<-I>.

=item *

Fixed wrong clang C<llvm-ar$llvmsuffix> and C<arflags>. BSD ar is fine to use C<-D>.

=item *

Improved clang -flto support, set default optimize to -O3.
-flto still needs the extra gold linker from a clang/llvm ports package
for static archives.

=back

=back

=head1 Internal Changes

=over 4

=item *

Added C<my_atof3()> to support parsing strings which are not necessarily
NUL-terminated to an NV.
C<grok_atoUV> supports that too now.

=back

=head1 Selected Bug Fixes

XXX Important bug fixes in the core language are summarized here.  Bug fixes in
files in F<ext/> and F<lib/> are best summarized in L</Modules and Pragmata>.

[ List each fix as an =item entry ]

=over 4

=item *

C<pack "u", "invalid uuencoding"> now properly NUL terminates the
zero-length SV produced.
L<[perl #132655]|https://rt.perl.org/Public/Bug/Display.html?id=132655>

=item *

The new in-place editing code no longer leaks directory handles.
L<[perl #133314]|https://rt.perl.org/Public/Bug/Display.html?id=133314>

=item *

Warnings produced from constant folding operations on overloaded
values no longer produce spurious "Use of uninitialized value"
warnings.
L<[perl #132683]|https://rt.perl.org/Public/Bug/Display.html?id=132683>

=item *

Fix for multiconcat "mutator not seen in (lex = ...) .= ..."
L<[perl #133441]|https://rt.perl.org/Public/Bug/Display.html?id=133441>

=item *

Detect more L<perldiag/"This use of C<my()> in a false conditional"> cases,
esp. scalar assignments like C<my $x = 0 if 0;>
L<[perl #133543]|https://rt.perl.org/Public/Bug/Display.html?id=133543>

This feature was deprecated in 5.10 (and replaced by two better constructs,
one of it backwards compatible) and is now a fatal error.

Note: cperl does not agree that this feature is a bug, but this ship
sailed already over a decade ago.

=item *

Regexp script runs were failing to permit ASCII digits in some cases.
L<[perl #133547]|https://rt.perl.org/Public/Bug/Display.html?id=133547>

=back

=head1 Known Problems

XXX Descriptions of platform agnostic bugs we know we can't fix go here.  Any
tests that had to be C<TODO>ed for the release would be noted here.  Unfixed
platform specific bugs also go here.

[ List each fix as an =item entry ]

=over 4

=item *

XXX

=back

=head1 Errata From Previous Releases

=over 4

=item *

XXX Add anything here that we forgot to add, or were mistaken about, in
the perldelta of a previous release.

=back

=head1 Obituary

XXX If any significant core contributor has died, we've added a short obituary
here.

=head1 Acknowledgements

XXX Generate this with:

    cperl Porting/acknowledgements.pl cperl-5.29.0..HEAD -c

=head1 Reporting Bugs

If you find what you think is a bug, you might check the perl bug database
at L<https://rt.perl.org/> .  There may also be information at
L<http://www.perl.org/> , the Perl Home Page.

If you believe you have an unreported bug, please run the L<cperlbug> program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of C<perl -V>,
will be sent off to perlbug@perl.org to be analysed by the Perl porting team.

If you think it's a cperl specific bug or trust the cperl developers more 
please file an issue at L<https://github.com/perl11/cperl/issues>.

If the bug you are reporting has security implications which make it
inappropriate to send to a publicly archived mailing list, then see
L<perlsec/SECURITY VULNERABILITY CONTACT INFORMATION>
For details of how to report the issue.

=head1 SEE ALSO

The F<Changes> file for an explanation of how to view exhaustive details on
what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut
