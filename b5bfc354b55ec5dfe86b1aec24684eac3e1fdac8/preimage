=encoding utf8

=head1 NAME

perlcdelta - what is new for cperl v5.24.4

=head1 DESCRIPTION

This document describes the differences between the cperl 5.24.4c
and the cperl 5.24.3c releases.

If you are upgrading from an earlier release such as v5.24.2c, first
read the L<perl5243cdelta> documentation, which describes differences
between v5.24.3c and v5.24.2c.

=head1 Security

=head2 [CVE-2018-6797] heap-buffer-overflow (WRITE of size 1) in S_regatom (regcomp.c)

A crafted regular expression could cause a heap buffer write overflow, with
control over the bytes written.
L<[perl #132227]|https://rt.perl.org/Public/Bug/Display.html?id=132227>

=head2 [CVE-2018-6798] Heap-buffer-overflow in Perl__byte_dump_string (utf8.c)

Matching a crafted locale dependent regular expression could cause a heap
buffer read overflow and potentially information disclosure.
L<[perl #132063]|https://rt.perl.org/Public/Bug/Display.html?id=132063>

=head2 [CVE-2018-6913] heap-buffer-overflow in S_pack_rec

C<pack()> could cause a heap buffer write overflow with a large item count.
L<[perl #131844]|https://rt.perl.org/Public/Bug/Display.html?id=131844>

=head2 Assertion failure in Perl__core_swash_init (utf8.c)

Control characters in a supposed Unicode property name could cause perl to
crash.  This has been fixed.
L<[perl #132055]|https://rt.perl.org/Public/Bug/Display.html?id=132055>
L<[perl #132553]|https://rt.perl.org/Public/Bug/Display.html?id=132553>
L<[perl #132658]|https://rt.perl.org/Public/Bug/Display.html?id=132658>

=head1 Incompatible Changes

There are no changes intentionally incompatible with 5.24.3c.  If any exist,
they are bugs, and we request that you submit a report.  See L</Reporting
Bugs> below.

=head1 Selected Bug Fixes

=over 4

=item *

<<<<<<<
Fixed error message for illegal charnames, and avoid passing NUL into
the charnames lookup, which is a potential security threat.  E.g. on
"\N{TILDE\000}" report "Missing right brace on \\N\{\}" as before
with 5.27.2 and on "\N{TILDE\001}" report "Unknown charname 'TILDE\1'" and
not "Unknown charname 'TILDE'".  perl5.27.5 started reporting those
errors with "Unknown charname 'TILDE'" hiding all characters behind
the embedded NUL or any non-printable character.
L<[cperl #342]|https://github.com/perl11/cperl/issues/342>

=item *

Fixed endless loop in the parser with a syntax error on an aborted
class declaration, such as e.g. with C<class $>. The previous behavior
was repeating the warning message C<Bareword found where operator expected>
endlessly.
L<[cperl #346]|https://github.com/perl11/cperl/issues/346>

=item *

Fixed autovivifaction of hash slices and key/value hash slices in sub args.
They are now consistent with a list of hash elements.
hash slices still autovivify in for loops.

There's also a new syntax warning about this change,
L<perldiag/"No autovivification of hash slice anymore">
L<[cperl #347]|https://github.com/perl11/cperl/issues/347>.

=item *

Fixed wrong C<panic: distributed hash flood> when dealing with
large C<%^H> hints hashes, with >127 entries, such as C<_charnames.pm> in
C<Regexp::Common>. Fixed the logic dealing with such a hints hash.
L<[cperl #350]|https://github.com/perl11/cperl/issues/350>.

=item *

Fixed endless rpeep compiler loop with a constant loop and a nested loop,
which e.g. broke C<Net:HTTP>.
L<[cperl #349]|https://github.com/perl11/cperl/issues/349>.

=item *

Fixed missing compile-time AvSHAPED detection in nested scopes.
E.g.:

    my @a[1]; sub { $a[0]->[5] = 1 }->(); # mderef_u
    my @b[1]; sub { $b[0] = 1 }->();      # aelemfast_lex_u

See L<[cperl #354]|https://github.com/perl11/cperl/issues/354>.

=back

=head1 Known Problems

XXX Descriptions of platform agnostic bugs we know we can't fix go here.  Any
tests that had to be C<TODO>ed for the release would be noted here.  Unfixed
platform specific bugs also go here.

[ List each fix as an =item entry ]

=over 4

=item *

XXX
=======
The C<readpipe()> built-in function now checks at compile time that it has only
one parameter expression, and puts it in scalar context, thus ensuring that it
doesn't corrupt the stack at runtime.
L<[perl #4574]|https://rt.perl.org/Public/Bug/Display.html?id=4574>
>>>>>>>

=item *

C<re_intuit_start()> was fixed for non-utf8 targets to ignore the utf8 folding rules.

=back

=head1 Acknowledgements

Generated with:

    cperl Porting/acknowledgements.pl cperl-5.24.3..HEAD

=head1 Reporting Bugs

If you find what you think is a bug, you might check the articles recently
posted to the comp.lang.perl.misc newsgroup and the perl bug database at
L<https://rt.perl.org/> .  There may also be information at
L<http://www.perl.org/> , the Perl Home Page.

If you believe you have an unreported bug, please run the L<cperlbug> program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of C<perl -V>,
will be sent off to perlbug@perl.org to be analysed by the Perl porting team.

If you think it's a cperl specific bug or trust the cperl developers more 
please file an issue at L<https://github.com/perl11/cperl/issues>.

If the bug you are reporting has security implications which make it
inappropriate to send to a publicly archived mailing list, then see
L<perlsec/SECURITY VULNERABILITY CONTACT INFORMATION>
For details of how to report the issue.

=head1 SEE ALSO

The F<Changes> file for an explanation of how to view exhaustive details on
what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut
