/* ex: set ro ft=c: -*- buffer-read-only: t -*-
   !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!
   This file is built by regen_perly.pl from perly.y.
   Any changes made here will be lost!
 */

case 2:
#line 117 "perly.y" /* yacc.c:1646  */
    {
			  parser->expect = XSTATE;
			}

    break;

  case 3:
#line 121 "perly.y" /* yacc.c:1646  */
    {
			  newPROG(block_end((ps[-1].val.ival),(ps[0].val.opval)));
			  PL_compiling.cop_seq = 0;
			  (yyval.ival) = 0;
			}

    break;

  case 4:
#line 127 "perly.y" /* yacc.c:1646  */
    {
			  parser->expect = XTERM;
			}

    break;

  case 5:
#line 131 "perly.y" /* yacc.c:1646  */
    {
			  PL_eval_root = (ps[0].val.opval);
			  (yyval.ival) = 0;
			}

    break;

  case 6:
#line 136 "perly.y" /* yacc.c:1646  */
    {
			  parser->expect = XBLOCK;
			}

    break;

  case 7:
#line 140 "perly.y" /* yacc.c:1646  */
    {
			  PL_pad_reset_pending = TRUE;
			  PL_eval_root = (ps[0].val.opval);
			  (yyval.ival) = 0;
			  yyunlex();
			  parser->yychar = yytoken = YYEOF;
			}

    break;

  case 8:
#line 148 "perly.y" /* yacc.c:1646  */
    {
			  parser->expect = XSTATE;
			}

    break;

  case 9:
#line 152 "perly.y" /* yacc.c:1646  */
    {
			  PL_pad_reset_pending = TRUE;
			  PL_eval_root = (ps[0].val.opval);
			  (yyval.ival) = 0;
			  yyunlex();
			  parser->yychar = yytoken = YYEOF;
			}

    break;

  case 10:
#line 160 "perly.y" /* yacc.c:1646  */
    {
			  parser->expect = XSTATE;
			}

    break;

  case 11:
#line 164 "perly.y" /* yacc.c:1646  */
    {
			  PL_pad_reset_pending = TRUE;
			  PL_eval_root = (ps[0].val.opval);
			  (yyval.ival) = 0;
			  yyunlex();
			  parser->yychar = yytoken = YYEOF;
			}

    break;

  case 12:
#line 172 "perly.y" /* yacc.c:1646  */
    {
			  parser->expect = XSTATE;
			}

    break;

  case 13:
#line 176 "perly.y" /* yacc.c:1646  */
    {
			  PL_eval_root = (ps[0].val.opval);
			  (yyval.ival) = 0;
			}

    break;

  case 14:
#line 184 "perly.y" /* yacc.c:1646  */
    { if (parser->copline > (line_t)(ps[-3].val.ival))
			      parser->copline = (line_t)(ps[-3].val.ival);
			  (yyval.opval) = block_end((ps[-2].val.ival), (ps[-1].val.opval));
			}

    break;

  case 15:
#line 192 "perly.y" /* yacc.c:1646  */
    { if (parser->copline > (line_t)(ps[-6].val.ival))
			      parser->copline = (line_t)(ps[-6].val.ival);
			  (yyval.opval) = block_end((ps[-5].val.ival), (ps[-2].val.opval));
			}

    break;

  case 16:
#line 199 "perly.y" /* yacc.c:1646  */
    { (yyval.ival) = block_start(TRUE);
			  parser->parsed_sub = 0; }

    break;

  case 17:
#line 204 "perly.y" /* yacc.c:1646  */
    { if (parser->copline > (line_t)(ps[-3].val.ival))
			      parser->copline = (line_t)(ps[-3].val.ival);
			  (yyval.opval) = block_end((ps[-2].val.ival), (ps[-1].val.opval));
			}

    break;

  case 18:
#line 211 "perly.y" /* yacc.c:1646  */
    { (yyval.ival) = block_start(FALSE);
			  parser->parsed_sub = 0; }

    break;

  case 19:
#line 217 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = NULL; }

    break;

  case 20:
#line 219 "perly.y" /* yacc.c:1646  */
    {   (yyval.opval) = op_append_list(OP_LINESEQ, (ps[-1].val.opval), (ps[0].val.opval));
			    PL_pad_reset_pending = TRUE;
			    if ((ps[-1].val.opval) && (ps[0].val.opval))
				PL_hints |= HINT_BLOCK_SCOPE;
			}

    break;

  case 21:
#line 228 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = NULL; }

    break;

  case 22:
#line 230 "perly.y" /* yacc.c:1646  */
    {   (yyval.opval) = op_append_list(OP_LINESEQ, (ps[-1].val.opval), (ps[0].val.opval));
			    PL_pad_reset_pending = TRUE;
			    if ((ps[-1].val.opval) && (ps[0].val.opval))
				PL_hints |= HINT_BLOCK_SCOPE;
			}

    break;

  case 23:
#line 239 "perly.y" /* yacc.c:1646  */
    {
			  (yyval.opval) = (ps[0].val.opval) ? newSTATEOP(0, NULL, (ps[0].val.opval)) : NULL;
			}

    break;

  case 24:
#line 243 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }

    break;

  case 25:
#line 247 "perly.y" /* yacc.c:1646  */
    {
			  (yyval.opval) = newSTATEOP(SVf_UTF8 * (ps[-1].val.pval)[strlen((ps[-1].val.pval))+1], (ps[-1].val.pval), (ps[0].val.opval));
			}

    break;

  case 26:
#line 251 "perly.y" /* yacc.c:1646  */
    {
			  (yyval.opval) = newSTATEOP(SVf_UTF8 * (ps[-1].val.pval)[strlen((ps[-1].val.pval))+1], (ps[-1].val.pval), (ps[0].val.opval));
			}

    break;

  case 27:
#line 258 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }

    break;

  case 28:
#line 260 "perly.y" /* yacc.c:1646  */
    {
			  CV *fmtcv = PL_compcv;
			  newFORM((ps[-2].val.ival), (ps[-1].val.opval), (ps[0].val.opval));
			  (yyval.opval) = NULL;
			  if (CvOUTSIDE(fmtcv) && !CvEVAL(CvOUTSIDE(fmtcv)))
			      pad_add_weakref(fmtcv);
			  parser->parsed_sub = 1;
<<<<<<<
			  parser->in_sub = 0;
			;}
=======
			}

>>>>>>>
    break;

  case 29:
<<<<<<<
#line 269 "perly.y" /* yacc.c:1646  */
=======
#line 270 "perly.y"
>>>>>>>
    {
			  if ((ps[-1].val.opval)->op_type == OP_CONST) {
			    const char *const name =
				SvPV_nolen_const(((SVOP*)(ps[-1].val.opval))->op_sv);
			    if (strEQc(name, "BEGIN") || strEQc(name, "END")
                             || strEQc(name, "INIT")  || strEQc(name, "CHECK")
                             || strEQ(name, "UNITCHECK"))
			      CvSPECIAL_on(PL_compcv);
			  }
			  else
                              /* State subs inside anonymous subs need to be
                                 clonable themselves. */
                              if (CvANON(CvOUTSIDE(PL_compcv))
                                  || CvCLONE(CvOUTSIDE(PL_compcv))
                                  || !PadnameIsSTATE(PadlistNAMESARRAY(CvPADLIST(
                                         CvOUTSIDE(PL_compcv)))[(ps[-1].val.opval)->op_targ]))
                                  CvCLONE_on(PL_compcv);
			  parser->in_my = 0;
			  parser->in_my_stash = NULL;
			}

    break;

  case 30:
<<<<<<<
#line 290 "perly.y" /* yacc.c:1646  */
=======
#line 291 "perly.y"
>>>>>>>
    {
                          CV *cv;
			  SvREFCNT_inc_simple_void(PL_compcv);
			  cv = ((ps[-5].val.opval)->op_type == OP_CONST)
			      ? newATTRSUB((ps[-4].val.ival), (ps[-5].val.opval), (ps[-2].val.opval), (ps[-1].val.opval), (ps[0].val.opval))
			      : newMYSUB((ps[-4].val.ival), (ps[-5].val.opval), (ps[-2].val.opval), (ps[-1].val.opval), (ps[0].val.opval))
			  ;
			  (yyval.opval) = cv && (ps[-1].val.opval) ? attrs_runtime(cv, (ps[-1].val.opval)) : NULL;
			  intro_my();
			  parser->parsed_sub = 1;
			}

    break;

  case 31:
<<<<<<<
#line 302 "perly.y" /* yacc.c:1646  */
=======
#line 303 "perly.y"
>>>>>>>
    {
			  if ((ps[-1].val.opval)->op_type == OP_CONST) {
			    const char *const name =
				SvPV_nolen_const(((SVOP*)(ps[-1].val.opval))->op_sv);
			    if (strEQc(name, "BEGIN") || strEQc(name, "END")
                             || strEQc(name, "INIT")  || strEQc(name, "CHECK")
                             || strEQc(name, "UNITCHECK"))
                                CvSPECIAL_on(PL_compcv);
			  }
			  else
                              /* State subs inside anonymous subs need to be
                                 clonable themselves. */
                              if (CvANON(CvOUTSIDE(PL_compcv))
                               || CvCLONE(CvOUTSIDE(PL_compcv))
                               || !PadnameIsSTATE(PadlistNAMESARRAY(CvPADLIST(
                                      CvOUTSIDE(PL_compcv)))[(ps[-1].val.opval)->op_targ]))
                                  CvCLONE_on(PL_compcv);
			  parser->in_my = 0;
			  parser->in_my_stash = NULL;
			}

    break;

  case 32:
<<<<<<<
#line 323 "perly.y" /* yacc.c:1646  */
=======
#line 324 "perly.y"
>>>>>>>
    {
                          OP *sig = (ps[-4].val.opval), *body = (ps[-1].val.opval), *attr = (ps[-3].val.opval); CV *cv;
                          /* empty sig sub needs a nextstate at the end
                           * to clear the stack of any default expression
                           * detritus */
                          if (!body && (!sig || !OpHAS_SIBLING(sig)))
                               body = newSTATEOP(0, NULL, NULL);
			  if (parser->copline > (line_t)(ps[-2].val.ival))
			      parser->copline = (line_t)(ps[-2].val.ival);
			  body = block_end((ps[-5].val.ival),
				op_append_list(OP_LINESEQ, sig, body));

			  SvREFCNT_inc_simple_void(PL_compcv);
			  cv = ((ps[-8].val.opval)->op_type == OP_CONST)
			      ? newATTRSUB((ps[-7].val.ival), (ps[-8].val.opval), NULL, attr, body)
			      : newMYSUB((ps[-7].val.ival), (ps[-8].val.opval), NULL, attr, body);
			  (yyval.opval) = attr ? attrs_runtime(cv, attr) : NULL;
			  intro_my();
			  parser->parsed_sub = 1;
			}

    break;

  case 33:
<<<<<<<
#line 344 "perly.y" /* yacc.c:1646  */
=======
#line 345 "perly.y"
>>>>>>>
    {
                          CvEXTERN_on(PL_compcv);
			  if ((ps[-1].val.opval)->op_type != OP_CONST) {
                              /* XXX lexical: my extern sub name */
                              if (CvANON(CvOUTSIDE(PL_compcv))
                               || CvCLONE(CvOUTSIDE(PL_compcv))
                               || !PadnameIsSTATE(PadlistNAMESARRAY(CvPADLIST(
                                      CvOUTSIDE(PL_compcv)))[(ps[-1].val.opval)->op_targ])) {
                                  CvCLONE_on(PL_compcv);
                              }
                          }
			  parser->in_my = 0;
			  parser->in_my_stash = NULL;
			}

    break;

  case 34:
<<<<<<<
#line 359 "perly.y" /* yacc.c:1646  */
=======
#line 360 "perly.y"
>>>>>>>
    {
                          OP *sig = (ps[-2].val.opval), *name = (ps[-5].val.opval), *attr = (ps[-1].val.opval); CV *cv;
			  SvREFCNT_inc_simple_void(PL_compcv);
			  cv = (name->op_type == OP_CONST)
			      ? newATTRSUB((ps[-4].val.ival), name, NULL, attr, sig)
			      : newMYSUB((ps[-4].val.ival), name, NULL, attr, sig);
			  (yyval.opval) = attr ? attrs_runtime(cv, attr) : NULL;
			  parser->parsed_sub = 1;
			}

    break;

  case 35:
<<<<<<<
#line 369 "perly.y" /* yacc.c:1646  */
=======
#line 370 "perly.y"
>>>>>>>
    {
			  package((ps[-1].val.opval));
			  if ((ps[-2].val.opval))
			      package_version((ps[-2].val.opval));
			  (yyval.opval) = NULL;
			}

    break;

  case 36:
<<<<<<<
#line 376 "perly.y" /* yacc.c:1646  */
=======
#line 377 "perly.y"
>>>>>>>
    { CvSPECIAL_on(PL_compcv); /* It's a BEGIN {} */
			  parser->in_sub = 0; }

    break;

  case 37:
<<<<<<<
#line 379 "perly.y" /* yacc.c:1646  */
=======
#line 380 "perly.y"
>>>>>>>
    {
			  SvREFCNT_inc_simple_void(PL_compcv);
			  utilize((ps[-6].val.ival), (ps[-5].val.ival), (ps[-3].val.opval), (ps[-2].val.opval), (ps[-1].val.opval));
			  parser->parsed_sub = 1;
			  (yyval.opval) = NULL;
			}

    break;

  case 38:
<<<<<<<
#line 386 "perly.y" /* yacc.c:1646  */
=======
#line 387 "perly.y"
>>>>>>>
    {
			  (yyval.opval) = block_end((ps[-4].val.ival),
			      newCONDOP(0, (ps[-3].val.opval), op_scope((ps[-1].val.opval)), (ps[0].val.opval)));
			  parser->copline = (line_t)(ps[-6].val.ival);
			}

    break;

  case 39:
<<<<<<<
#line 392 "perly.y" /* yacc.c:1646  */
=======
#line 393 "perly.y"
>>>>>>>
    {
			  (yyval.opval) = block_end((ps[-4].val.ival),
                              newCONDOP(0, (ps[-3].val.opval), (ps[0].val.opval), op_scope((ps[-1].val.opval))));
			  parser->copline = (line_t)(ps[-6].val.ival);
			}

    break;

  case 40:
<<<<<<<
#line 398 "perly.y" /* yacc.c:1646  */
=======
#line 399 "perly.y"
>>>>>>>
    {
			  const PADOFFSET offset = pad_findmy_pvs("$_", 0);
			  (yyval.opval) = block_end((ps[-3].val.ival),
				  newGIVENOP((ps[-2].val.opval), op_scope((ps[0].val.opval)),
				    offset == NOT_IN_PAD
				    || PAD_COMPNAME_FLAGS_isOUR(offset)
				      ? 0
				      : offset));
			  parser->copline = (line_t)(ps[-5].val.ival);
			}

    break;

  case 41:
<<<<<<<
#line 409 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = block_end((ps[-3].val.ival), newWHENOP((ps[-2].val.opval), op_scope((ps[0].val.opval)))); }

=======
#line 410 "perly.y"
    { (yyval.opval) = block_end((ps[(3) - (6)].val.ival), newWHENOP((ps[(4) - (6)].val.opval), op_scope((ps[(6) - (6)].val.opval)))); ;}
>>>>>>>
    break;

  case 42:
<<<<<<<
#line 411 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newWHENOP(0, op_scope((ps[0].val.opval))); }

=======
#line 412 "perly.y"
    { (yyval.opval) = newWHENOP(0, op_scope((ps[(2) - (2)].val.opval))); ;}
>>>>>>>
    break;

  case 43:
<<<<<<<
#line 413 "perly.y" /* yacc.c:1646  */
=======
#line 414 "perly.y"
>>>>>>>
    {
			  (yyval.opval) = block_end((ps[-5].val.ival),
				  newWHILEOP(0, 1, NULL,
				      (ps[-4].val.opval), (ps[-1].val.opval), (ps[0].val.opval), (ps[-2].val.ival)));
			  parser->copline = (line_t)(ps[-7].val.ival);
			}

    break;

  case 44:
<<<<<<<
#line 420 "perly.y" /* yacc.c:1646  */
=======
#line 421 "perly.y"
>>>>>>>
    {
			  (yyval.opval) = block_end((ps[-5].val.ival),
				  newWHILEOP(0, 1, NULL,
				      (ps[-4].val.opval), (ps[-1].val.opval), (ps[0].val.opval), (ps[-2].val.ival)));
			  parser->copline = (line_t)(ps[-7].val.ival);
			}

    break;

  case 45:
<<<<<<<
#line 427 "perly.y" /* yacc.c:1646  */
    { parser->expect = XTERM; }

=======
#line 428 "perly.y"
    { parser->expect = XTERM; ;}
>>>>>>>
    break;

  case 46:
<<<<<<<
#line 429 "perly.y" /* yacc.c:1646  */
    { parser->expect = XTERM; }

=======
#line 430 "perly.y"
    { parser->expect = XTERM; ;}
>>>>>>>
    break;

  case 47:
<<<<<<<
#line 432 "perly.y" /* yacc.c:1646  */
=======
#line 433 "perly.y"
>>>>>>>
    {
			  OP *initop = (ps[-9].val.opval);
			  OP *forop = newWHILEOP(0, 1, NULL,
				      scalar((ps[-6].val.opval)), (ps[0].val.opval), (ps[-2].val.opval), (ps[-3].val.ival));
			  if (initop) {
			      forop = op_prepend_elem(OP_LINESEQ, initop,
				  op_append_elem(OP_LINESEQ,
				      newOP(OP_UNSTACK, OPf_SPECIAL),
				      forop));
			  }
			  PL_hints |= HINT_BLOCK_SCOPE;
			  (yyval.opval) = block_end((ps[-10].val.ival), forop);
			  parser->copline = (line_t)(ps[-12].val.ival);
			}

    break;

  case 48:
<<<<<<<
#line 447 "perly.y" /* yacc.c:1646  */
    { parser->expect = XBLOCK; }

=======
#line 448 "perly.y"
    { parser->expect = XBLOCK; ;}
>>>>>>>
    break;

  case 49:
<<<<<<<
#line 449 "perly.y" /* yacc.c:1646  */
=======
#line 450 "perly.y"
>>>>>>>
    {
			  (yyval.opval) = block_end((ps[-7].val.ival), newFOROP(0, (ps[-6].val.opval), (ps[-4].val.opval), (ps[-1].val.opval), (ps[0].val.opval)));
			  parser->copline = (line_t)(ps[-9].val.ival);
			}

    break;

  case 50:
<<<<<<<
#line 454 "perly.y" /* yacc.c:1646  */
    { parser->expect = XBLOCK; }

=======
#line 455 "perly.y"
    { parser->expect = XBLOCK; ;}
>>>>>>>
    break;

  case 51:
<<<<<<<
#line 456 "perly.y" /* yacc.c:1646  */
=======
#line 457 "perly.y"
>>>>>>>
    {
			  (yyval.opval) = block_end((ps[-5].val.ival), newFOROP(0,
			         op_lvalue((ps[-7].val.opval), OP_ENTERLOOP), (ps[-4].val.opval), (ps[-1].val.opval), (ps[0].val.opval)));
			  parser->copline = (line_t)(ps[-8].val.ival);
			}

    break;

  case 52:
<<<<<<<
#line 462 "perly.y" /* yacc.c:1646  */
    { parser->in_my = 0; (yyval.opval) = my((ps[0].val.opval)); }

=======
#line 463 "perly.y"
    { parser->in_my = 0; (yyval.opval) = my((ps[(4) - (4)].val.opval)); ;}
>>>>>>>
    break;

  case 53:
<<<<<<<
#line 464 "perly.y" /* yacc.c:1646  */
=======
#line 465 "perly.y"
>>>>>>>
    {
			  (yyval.opval) = block_end((ps[-7].val.ival), newFOROP(0,
			         op_lvalue(newUNOP(OP_REFGEN, 0, (ps[-5].val.opval)),
                                           OP_ENTERLOOP),
					 (ps[-3].val.opval), (ps[-1].val.opval), (ps[0].val.opval)));
			  parser->copline = (line_t)(ps[-9].val.ival);
			}

    break;

  case 54:
<<<<<<<
#line 472 "perly.y" /* yacc.c:1646  */
=======
#line 473 "perly.y"
>>>>>>>
    {
                          (yyval.opval) = block_end((ps[-4].val.ival), newFOROP(0,
				 op_lvalue(newUNOP(OP_REFGEN, 0, (ps[-6].val.opval)),
                                           OP_ENTERLOOP),
                                         (ps[-3].val.opval), (ps[-1].val.opval), (ps[0].val.opval)));
			  parser->copline = (line_t)(ps[-8].val.ival);
			}

    break;

  case 55:
<<<<<<<
#line 480 "perly.y" /* yacc.c:1646  */
=======
#line 481 "perly.y"
>>>>>>>
    {
			  (yyval.opval) = block_end((ps[-4].val.ival),
				  newFOROP(0, NULL, (ps[-3].val.opval), (ps[-1].val.opval), (ps[0].val.opval)));
			  parser->copline = (line_t)(ps[-6].val.ival);
			}

    break;

  case 56:
<<<<<<<
#line 486 "perly.y" /* yacc.c:1646  */
    { parser->expect = XBLOCK; }

=======
#line 487 "perly.y"
    { parser->expect = XBLOCK; ;}
>>>>>>>
    break;

  case 57:
<<<<<<<
#line 488 "perly.y" /* yacc.c:1646  */
=======
#line 489 "perly.y"
>>>>>>>
    {
			  (yyval.opval) = block_end((ps[-4].val.ival),
				  newFOROP(0, (OP*)NULL, (ps[-3].val.opval), (ps[-1].val.opval), (ps[0].val.opval)));
			  parser->copline = (line_t)(ps[-5].val.ival);
			}

    break;

  case 58:
<<<<<<<
#line 494 "perly.y" /* yacc.c:1646  */
=======
#line 495 "perly.y"
>>>>>>>
    {
			  /* a block is a loop that happens once */
			  (yyval.opval) = newWHILEOP(0, 1, NULL,
				  NULL, (ps[-1].val.opval), (ps[0].val.opval), 0);
			}

    break;

  case 59:
<<<<<<<
#line 500 "perly.y" /* yacc.c:1646  */
=======
#line 501 "perly.y"
>>>>>>>
    {
			  package((ps[-2].val.opval));
			  if ((ps[-3].val.opval)) {
			      package_version((ps[-3].val.opval));
			  }
			}

    break;

  case 60:
<<<<<<<
#line 507 "perly.y" /* yacc.c:1646  */
=======
#line 508 "perly.y"
>>>>>>>
    {
			  /* a block is a loop that happens once */
			  (yyval.opval) = newWHILEOP(0, 1, NULL,
				  NULL, block_end((ps[-3].val.ival), (ps[-1].val.opval)), NULL, 0);
			  if (parser->copline > (line_t)(ps[-4].val.ival))
			      parser->copline = (line_t)(ps[-4].val.ival);
			}

    break;

  case 61:
<<<<<<<
#line 515 "perly.y" /* yacc.c:1646  */
=======
#line 516 "perly.y"
>>>>>>>
    {
			  (yyval.opval) = (ps[-1].val.opval);
			}

    break;

  case 62:
<<<<<<<
#line 519 "perly.y" /* yacc.c:1646  */
=======
#line 520 "perly.y"
>>>>>>>
    {
			  (yyval.opval) = NULL;
			  parser->copline = NOLINE;
			}

    break;

  case 63:
<<<<<<<
#line 527 "perly.y" /* yacc.c:1646  */
=======
#line 528 "perly.y"
>>>>>>>
    { OP *list;
			  if ((ps[0].val.opval)) {
			      OP *term = (ps[0].val.opval);
			      list = op_append_elem(OP_LIST, (ps[-1].val.opval), term);
			  }
			  else {
			      list = (ps[-1].val.opval);
			  }
			  if (parser->copline == NOLINE)
			       parser->copline = CopLINE(PL_curcop)-1;
			  else parser->copline--;
			  (yyval.opval) = newSTATEOP(0, NULL,
					  op_convert_list(OP_FORMLINE, 0, list));
			}

    break;

  case 64:
<<<<<<<
#line 544 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = NULL; }

=======
#line 545 "perly.y"
    { (yyval.opval) = NULL; ;}
>>>>>>>
    break;

  case 65:
<<<<<<<
#line 546 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = op_unscope((ps[-1].val.opval)); }

=======
#line 547 "perly.y"
    { (yyval.opval) = op_unscope((ps[(2) - (3)].val.opval)); ;}
>>>>>>>
    break;

  case 66:
<<<<<<<
#line 551 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = NULL; }

=======
#line 552 "perly.y"
    { (yyval.opval) = NULL; ;}
>>>>>>>
    break;

  case 67:
<<<<<<<
#line 553 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }

=======
#line 554 "perly.y"
    { (yyval.opval) = (ps[(1) - (1)].val.opval); ;}
>>>>>>>
    break;

  case 68:
<<<<<<<
#line 555 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newLOGOP(OP_AND, 0, (ps[0].val.opval), (ps[-2].val.opval)); }

=======
#line 556 "perly.y"
    { (yyval.opval) = newLOGOP(OP_AND, 0, (ps[(3) - (3)].val.opval), (ps[(1) - (3)].val.opval)); ;}
>>>>>>>
    break;

  case 69:
<<<<<<<
#line 557 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newLOGOP(OP_OR, 0, (ps[0].val.opval), (ps[-2].val.opval)); }

=======
#line 558 "perly.y"
    { (yyval.opval) = newLOGOP(OP_OR, 0, (ps[(3) - (3)].val.opval), (ps[(1) - (3)].val.opval)); ;}
>>>>>>>
    break;

  case 70:
<<<<<<<
#line 559 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newLOOPOP(OPf_PARENS, 1, scalar((ps[0].val.opval)), (ps[-2].val.opval)); }

=======
#line 560 "perly.y"
    { (yyval.opval) = newLOOPOP(OPf_PARENS, 1, scalar((ps[(3) - (3)].val.opval)), (ps[(1) - (3)].val.opval)); ;}
>>>>>>>
    break;

  case 71:
<<<<<<<
#line 561 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newLOOPOP(OPf_PARENS, 1, (ps[0].val.opval), (ps[-2].val.opval)); }

=======
#line 562 "perly.y"
    { (yyval.opval) = newLOOPOP(OPf_PARENS, 1, (ps[(3) - (3)].val.opval), (ps[(1) - (3)].val.opval)); ;}
>>>>>>>
    break;

  case 72:
<<<<<<<
#line 563 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newFOROP(0, NULL, (ps[0].val.opval), (ps[-2].val.opval), NULL);
			  parser->copline = (line_t)(ps[-1].val.ival); }

=======
#line 564 "perly.y"
    { (yyval.opval) = newFOROP(0, NULL, (ps[(3) - (3)].val.opval), (ps[(1) - (3)].val.opval), NULL);
			  parser->copline = (line_t)(ps[(2) - (3)].val.ival); ;}
>>>>>>>
    break;

  case 73:
<<<<<<<
#line 566 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newWHENOP((ps[0].val.opval), op_scope((ps[-2].val.opval))); }

=======
#line 567 "perly.y"
    { (yyval.opval) = newWHENOP((ps[(3) - (3)].val.opval), op_scope((ps[(1) - (3)].val.opval))); ;}
>>>>>>>
    break;

  case 74:
<<<<<<<
#line 571 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = NULL; }

=======
#line 572 "perly.y"
    { (yyval.opval) = NULL; ;}
>>>>>>>
    break;

  case 75:
<<<<<<<
#line 573 "perly.y" /* yacc.c:1646  */
=======
#line 574 "perly.y"
>>>>>>>
    {
			  ((ps[0].val.opval))->op_flags |= OPf_PARENS;
			  (yyval.opval) = op_scope((ps[0].val.opval));
			}

    break;

  case 76:
<<<<<<<
#line 578 "perly.y" /* yacc.c:1646  */
    {   parser->copline = (line_t)(ps[-5].val.ival);
=======
#line 579 "perly.y"
    {   parser->copline = (line_t)(ps[(1) - (6)].val.ival);
>>>>>>>
			    (yyval.opval) = newCONDOP(0,
				newSTATEOP(OPf_SPECIAL,NULL,(ps[-3].val.opval)),
				op_scope((ps[-1].val.opval)), (ps[0].val.opval));
			  PL_hints |= HINT_BLOCK_SCOPE;
			}

    break;

  case 77:
<<<<<<<
#line 588 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = NULL; }

=======
#line 589 "perly.y"
    { (yyval.opval) = NULL; ;}
>>>>>>>
    break;

  case 78:
<<<<<<<
#line 590 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = op_scope((ps[0].val.opval)); }

=======
#line 591 "perly.y"
    { (yyval.opval) = op_scope((ps[(2) - (2)].val.opval)); ;}
>>>>>>>
    break;

  case 79:
<<<<<<<
#line 595 "perly.y" /* yacc.c:1646  */
=======
#line 596 "perly.y"
>>>>>>>
    { (yyval.ival) = (PL_min_intro_pending &&
			    PL_max_intro_pending >=  PL_min_intro_pending);
			  intro_my(); }

    break;

  case 80:
<<<<<<<
#line 601 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = NULL; }

=======
#line 602 "perly.y"
    { (yyval.opval) = NULL; ;}
>>>>>>>
    break;

  case 82:
<<<<<<<
#line 607 "perly.y" /* yacc.c:1646  */
=======
#line 608 "perly.y"
>>>>>>>
    { YYSTYPE tmplval;
			  (void)scan_num("1", &tmplval);
			  (yyval.opval) = tmplval.opval; }

    break;

  case 84:
<<<<<<<
#line 615 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = invert(scalar((ps[0].val.opval))); }

=======
#line 616 "perly.y"
    { (yyval.opval) = invert(scalar((ps[(1) - (1)].val.opval))); ;}
>>>>>>>
    break;

  case 85:
<<<<<<<
#line 620 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); intro_my(); }

=======
#line 621 "perly.y"
    { (yyval.opval) = (ps[(1) - (1)].val.opval); intro_my(); ;}
>>>>>>>
    break;

  case 86:
<<<<<<<
#line 624 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); intro_my(); }

=======
#line 625 "perly.y"
    { (yyval.opval) = (ps[(1) - (1)].val.opval); intro_my(); ;}
>>>>>>>
    break;

  case 87:
<<<<<<<
#line 627 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }

=======
#line 628 "perly.y"
    { (yyval.opval) = (ps[(1) - (1)].val.opval); ;}
>>>>>>>
    break;

  case 88:
<<<<<<<
#line 628 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = NULL; }

=======
#line 629 "perly.y"
    { (yyval.opval) = NULL; ;}
>>>>>>>
    break;

  case 89:
<<<<<<<
#line 632 "perly.y" /* yacc.c:1646  */
=======
#line 633 "perly.y"
>>>>>>>
    { (yyval.ival) = start_subparse(FALSE, 0);
			    SAVEFREESV(PL_compcv); }

    break;

  case 90:
<<<<<<<
#line 638 "perly.y" /* yacc.c:1646  */
=======
#line 639 "perly.y"
>>>>>>>
    { (yyval.ival) = start_subparse(FALSE, CVf_ANON);
                            parser->in_sub = 0;
			    SAVEFREESV(PL_compcv); }

    break;

  case 91:
<<<<<<<
#line 644 "perly.y" /* yacc.c:1646  */
=======
#line 645 "perly.y"
>>>>>>>
    { (yyval.ival) = start_subparse(TRUE, 0);
			    SAVEFREESV(PL_compcv); }

    break;

  case 94:
<<<<<<<
#line 655 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = NULL; }

=======
#line 656 "perly.y"
    { (yyval.opval) = NULL; ;}
>>>>>>>
    break;

  case 96:
<<<<<<<
#line 661 "perly.y" /* yacc.c:1646  */
    { parser->in_sub = 0; (yyval.opval) = NULL; }

=======
#line 662 "perly.y"
    { parser->in_sub = 0; (yyval.opval) = NULL; ;}
>>>>>>>
    break;

  case 97:
<<<<<<<
#line 663 "perly.y" /* yacc.c:1646  */
    { parser->in_sub = 0; (yyval.opval) = (ps[0].val.opval); }

=======
#line 664 "perly.y"
    { parser->in_sub = 0; (yyval.opval) = (ps[(2) - (2)].val.opval); ;}
>>>>>>>
    break;

  case 98:
<<<<<<<
#line 665 "perly.y" /* yacc.c:1646  */
    { parser->in_sub = 0; (yyval.opval) = NULL; }

=======
#line 666 "perly.y"
    { parser->in_sub = 0; (yyval.opval) = NULL; ;}
>>>>>>>
    break;

  case 99:
<<<<<<<
#line 670 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }

=======
#line 671 "perly.y"
    { (yyval.opval) = (ps[(2) - (2)].val.opval); ;}
>>>>>>>
    break;

  case 100:
<<<<<<<
#line 672 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = NULL; }

=======
#line 673 "perly.y"
    { (yyval.opval) = NULL; ;}
>>>>>>>
    break;

  case 101:
<<<<<<<
#line 678 "perly.y" /* yacc.c:1646  */
=======
#line 679 "perly.y"
>>>>>>>
    {
#ifndef USE_CPERL
			  /* We shouldn't get here otherwise */
			  assert(FEATURE_SIGNATURES_IS_ENABLED);
			  Perl_ck_warner_d(aTHX_
				packWARN(WARN_EXPERIMENTAL__SIGNATURES),
				"The signatures feature is experimental");
#endif
			  (yyval.opval) = parse_subsignature();
			}

    break;

  case 102:
<<<<<<<
#line 689 "perly.y" /* yacc.c:1646  */
=======
#line 690 "perly.y"
>>>>>>>
    {
			  (yyval.opval) = (ps[-1].val.opval);
                          if (parser->lex_attr_state >= 5 &&
                              parser->lex_attr_state <= 6) {
			      parser->expect = parser->lex_attr_state;
                              parser->lex_attr_state = 0;
                          }
			}

    break;

  case 104:
<<<<<<<
#line 701 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = NULL; }

=======
#line 702 "perly.y"
    { (yyval.opval) = NULL; ;}
>>>>>>>
    break;

  case 105:
<<<<<<<
#line 706 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newLOGOP(OP_AND, 0, (ps[-2].val.opval), (ps[0].val.opval)); }

=======
#line 707 "perly.y"
    { (yyval.opval) = newLOGOP(OP_AND, 0, (ps[(1) - (3)].val.opval), (ps[(3) - (3)].val.opval)); ;}
>>>>>>>
    break;

  case 106:
<<<<<<<
#line 708 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newLOGOP((ps[-1].val.ival), 0, (ps[-2].val.opval), (ps[0].val.opval)); }

=======
#line 709 "perly.y"
    { (yyval.opval) = newLOGOP((ps[(2) - (3)].val.ival), 0, (ps[(1) - (3)].val.opval), (ps[(3) - (3)].val.opval)); ;}
>>>>>>>
    break;

  case 107:
<<<<<<<
#line 710 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newLOGOP(OP_DOR, 0, (ps[-2].val.opval), (ps[0].val.opval)); }

=======
#line 711 "perly.y"
    { (yyval.opval) = newLOGOP(OP_DOR, 0, (ps[(1) - (3)].val.opval), (ps[(3) - (3)].val.opval)); ;}
>>>>>>>
    break;

  case 109:
<<<<<<<
#line 716 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[-1].val.opval); }

=======
#line 717 "perly.y"
    { (yyval.opval) = (ps[(1) - (2)].val.opval); ;}
>>>>>>>
    break;

  case 110:
<<<<<<<
#line 718 "perly.y" /* yacc.c:1646  */
=======
#line 719 "perly.y"
>>>>>>>
    {
			  OP* term = (ps[0].val.opval);
			  (yyval.opval) = op_append_elem(OP_LIST, (ps[-2].val.opval), term);
			}

    break;

  case 112:
<<<<<<<
#line 727 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = op_convert_list((ps[-2].val.ival), OPf_STACKED,
				op_prepend_elem(OP_LIST, newGVREF((ps[-2].val.ival),(ps[-1].val.opval)), (ps[0].val.opval)) );
			}

=======
#line 728 "perly.y"
    { (yyval.opval) = op_convert_list((ps[(1) - (3)].val.ival), OPf_STACKED,
				op_prepend_elem(OP_LIST, newGVREF((ps[(1) - (3)].val.ival),(ps[(2) - (3)].val.opval)), (ps[(3) - (3)].val.opval)) );
			;}
>>>>>>>
    break;

  case 113:
<<<<<<<
#line 731 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = op_convert_list((ps[-4].val.ival), OPf_STACKED,
				op_prepend_elem(OP_LIST, newGVREF((ps[-4].val.ival),(ps[-2].val.opval)), (ps[-1].val.opval)) );
			}

=======
#line 732 "perly.y"
    { (yyval.opval) = op_convert_list((ps[(1) - (5)].val.ival), OPf_STACKED,
				op_prepend_elem(OP_LIST, newGVREF((ps[(1) - (5)].val.ival),(ps[(3) - (5)].val.opval)), (ps[(4) - (5)].val.opval)) );
			;}
>>>>>>>
    break;

  case 114:
<<<<<<<
#line 735 "perly.y" /* yacc.c:1646  */
=======
#line 736 "perly.y"
>>>>>>>
    { (yyval.opval) = op_convert_list(OP_ENTERSUB, OPf_STACKED,
				op_append_elem(OP_LIST,
				    op_prepend_elem(OP_LIST, scalar((ps[-5].val.opval)), (ps[-1].val.opval)),
				    newMETHOP(OP_METHOD, 0, (ps[-3].val.opval))));
			}

    break;

  case 115:
<<<<<<<
#line 741 "perly.y" /* yacc.c:1646  */
=======
#line 742 "perly.y"
>>>>>>>
    { (yyval.opval) = op_convert_list(OP_ENTERSUB, OPf_STACKED,
				op_append_elem(OP_LIST, scalar((ps[-2].val.opval)),
				    newMETHOP(OP_METHOD, 0, (ps[0].val.opval))));
			}

    break;

  case 116:
<<<<<<<
#line 746 "perly.y" /* yacc.c:1646  */
=======
#line 747 "perly.y"
>>>>>>>
    { (yyval.opval) = op_convert_list(OP_ENTERSUB, OPf_STACKED,
				op_append_elem(OP_LIST,
				    op_prepend_elem(OP_LIST, (ps[-1].val.opval), (ps[0].val.opval)),
				    newMETHOP(OP_METHOD, 0, (ps[-2].val.opval))));
			}

    break;

  case 117:
<<<<<<<
#line 752 "perly.y" /* yacc.c:1646  */
=======
#line 753 "perly.y"
>>>>>>>
    { (yyval.opval) = op_convert_list(OP_ENTERSUB, OPf_STACKED,
				op_append_elem(OP_LIST,
				    op_prepend_elem(OP_LIST, (ps[-3].val.opval), (ps[-1].val.opval)),
				    newMETHOP(OP_METHOD, 0, (ps[-4].val.opval))));
			}

    break;

  case 118:
<<<<<<<
#line 758 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = op_convert_list((ps[-1].val.ival), 0, (ps[0].val.opval)); }

=======
#line 759 "perly.y"
    { (yyval.opval) = op_convert_list((ps[(1) - (2)].val.ival), 0, (ps[(2) - (2)].val.opval)); ;}
>>>>>>>
    break;

  case 119:
<<<<<<<
#line 760 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = op_convert_list((ps[-3].val.ival), 0, (ps[-1].val.opval)); }

=======
#line 761 "perly.y"
    { (yyval.opval) = op_convert_list((ps[(1) - (4)].val.ival), 0, (ps[(3) - (4)].val.opval)); ;}
>>>>>>>
    break;

  case 120:
<<<<<<<
#line 762 "perly.y" /* yacc.c:1646  */
=======
#line 763 "perly.y"
>>>>>>>
    { SvREFCNT_inc_simple_void(PL_compcv);
			  (yyval.opval) = newANONATTRSUB((ps[-1].val.ival), 0, NULL, (ps[0].val.opval)); }

    break;

  case 121:
<<<<<<<
#line 765 "perly.y" /* yacc.c:1646  */
=======
#line 766 "perly.y"
>>>>>>>
    { (yyval.opval) = newUNOP(OP_ENTERSUB, OPf_STACKED,
				 op_append_elem(OP_LIST,
				   op_prepend_elem(OP_LIST, (ps[-1].val.opval), (ps[0].val.opval)), (ps[-4].val.opval)));
			}

    break;

  case 124:
<<<<<<<
#line 780 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newBINOP(OP_GELEM, 0, (ps[-4].val.opval), scalar((ps[-2].val.opval))); }

=======
#line 781 "perly.y"
    { (yyval.opval) = newBINOP(OP_GELEM, 0, (ps[(1) - (5)].val.opval), scalar((ps[(3) - (5)].val.opval))); ;}
>>>>>>>
    break;

  case 125:
<<<<<<<
#line 782 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newBINOP(OP_AELEM, 0, oopsAV((ps[-3].val.opval)), scalar((ps[-1].val.opval)));
			}

=======
#line 783 "perly.y"
    { (yyval.opval) = newBINOP(OP_AELEM, 0, oopsAV((ps[(1) - (4)].val.opval)), scalar((ps[(3) - (4)].val.opval)));
			;}
>>>>>>>
    break;

  case 126:
<<<<<<<
#line 785 "perly.y" /* yacc.c:1646  */
=======
#line 786 "perly.y"
>>>>>>>
    { (yyval.opval) = newBINOP(OP_AELEM, 0,
					ref(newAVREF((ps[-4].val.opval)),OP_RV2AV),
					scalar((ps[-1].val.opval)));
			}

    break;

  case 127:
<<<<<<<
#line 790 "perly.y" /* yacc.c:1646  */
=======
#line 791 "perly.y"
>>>>>>>
    { (yyval.opval) = newBINOP(OP_AELEM, 0,
					ref(newAVREF((ps[-3].val.opval)),OP_RV2AV),
					scalar((ps[-1].val.opval)));
			}

    break;

  case 128:
<<<<<<<
#line 795 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newBINOP(OP_HELEM, 0, oopsHV((ps[-4].val.opval)), jmaybe((ps[-2].val.opval)));
			}

=======
#line 796 "perly.y"
    { (yyval.opval) = newBINOP(OP_HELEM, 0, oopsHV((ps[(1) - (5)].val.opval)), jmaybe((ps[(3) - (5)].val.opval)));
			;}
>>>>>>>
    break;

  case 129:
<<<<<<<
#line 798 "perly.y" /* yacc.c:1646  */
=======
#line 799 "perly.y"
>>>>>>>
    { (yyval.opval) = newBINOP(OP_HELEM, 0,
					ref(newHVREF((ps[-5].val.opval)),OP_RV2HV),
					jmaybe((ps[-2].val.opval))); }

    break;

  case 130:
<<<<<<<
#line 802 "perly.y" /* yacc.c:1646  */
=======
#line 803 "perly.y"
>>>>>>>
    { (yyval.opval) = newBINOP(OP_HELEM, 0,
					ref(newHVREF((ps[-4].val.opval)),OP_RV2HV),
					jmaybe((ps[-2].val.opval))); }

    break;

  case 131:
<<<<<<<
#line 806 "perly.y" /* yacc.c:1646  */
=======
#line 807 "perly.y"
>>>>>>>
    { (yyval.opval) = newUNOP(OP_ENTERSUB, OPf_STACKED,
				   newCVREF(0, scalar((ps[-3].val.opval)))); }

    break;

  case 132:
<<<<<<<
#line 809 "perly.y" /* yacc.c:1646  */
=======
#line 810 "perly.y"
>>>>>>>
    { (yyval.opval) = newUNOP(OP_ENTERSUB, OPf_STACKED,
				   op_append_elem(OP_LIST, (ps[-1].val.opval),
				       newCVREF(0, scalar((ps[-4].val.opval))))); }

    break;

  case 133:
<<<<<<<
#line 814 "perly.y" /* yacc.c:1646  */
=======
#line 815 "perly.y"
>>>>>>>
    { (yyval.opval) = newUNOP(OP_ENTERSUB, OPf_STACKED,
				   op_append_elem(OP_LIST, (ps[-1].val.opval),
					       newCVREF(0, scalar((ps[-3].val.opval))))); }

    break;

  case 134:
<<<<<<<
#line 818 "perly.y" /* yacc.c:1646  */
=======
#line 819 "perly.y"
>>>>>>>
    { (yyval.opval) = newUNOP(OP_ENTERSUB, OPf_STACKED,
				   newCVREF(0, scalar((ps[-2].val.opval)))); }

    break;

  case 135:
<<<<<<<
#line 821 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newSLICEOP(0, (ps[-1].val.opval), (ps[-4].val.opval)); }

=======
#line 822 "perly.y"
    { (yyval.opval) = newSLICEOP(0, (ps[(5) - (6)].val.opval), (ps[(2) - (6)].val.opval)); ;}
>>>>>>>
    break;

  case 136:
<<<<<<<
#line 823 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newSLICEOP(0, (ps[-1].val.opval), (ps[-3].val.opval)); }

=======
#line 824 "perly.y"
    { (yyval.opval) = newSLICEOP(0, (ps[(3) - (4)].val.opval), (ps[(1) - (4)].val.opval)); ;}
>>>>>>>
    break;

  case 137:
<<<<<<<
#line 825 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newSLICEOP(0, (ps[-1].val.opval), NULL); }

=======
#line 826 "perly.y"
    { (yyval.opval) = newSLICEOP(0, (ps[(4) - (5)].val.opval), NULL); ;}
>>>>>>>
    break;

  case 138:
<<<<<<<
#line 830 "perly.y" /* yacc.c:1646  */
    {
                          OP* left = (ps[-2].val.opval);
                          if ( OP_TYPE_IS(left, OP_LIST) &&
                               attrs_has_const(left, TRUE) )
                          {   /* my $x :const = $y; dissect my_attrs() */
                              OP *attr = OpSIBLING(OpFIRST(left));
                              if (OP_TYPE_ISNT(attr, OP_ENTERSUB)) {
                                  left = attr;
                                  attr = OpSIBLING(attr);
                                  if (OpKIDS(left)) /* our rv2Xv -> gv */
                                      OpMORESIB_set(OpFIRST(left), NULL);
                              } else
                                  left = OpSIBLING(attr);
                              OpMORESIB_set(left, NULL);
                              OpMORESIB_set(attr, NULL);
                              /* defer :const after = */
                              (yyval.opval) = op_append_list(OP_LINESEQ,
                                       newASSIGNOP(OPf_STACKED, left, (ps[-1].val.ival), (ps[0].val.opval)),
                                       scalar(attr));
                          } else
                              (yyval.opval) = newASSIGNOP(OPf_STACKED, left, (ps[-1].val.ival), (ps[0].val.opval));
                        }

=======
#line 831 "perly.y"
    { (yyval.opval) = newASSIGNOP(OPf_STACKED, (ps[(1) - (3)].val.opval), (ps[(2) - (3)].val.ival), (ps[(3) - (3)].val.opval)); ;}
>>>>>>>
    break;

  case 139:
<<<<<<<
#line 833 "perly.y"
    { (yyval.opval) = newBINOP(OP_POW, 0, scalar((ps[(1) - (3)].val.opval)), scalar((ps[(3) - (3)].val.opval))); ;}
=======
#line 853 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newBINOP(OP_POW, 0, scalar((ps[-2].val.opval)), scalar((ps[0].val.opval))); }

>>>>>>>
    break;

  case 140:
<<<<<<<
#line 835 "perly.y"
    {   if ((ps[(2) - (3)].val.ival) != OP_REPEAT)
				scalar((ps[(1) - (3)].val.opval));
			    (yyval.opval) = newBINOP((ps[(2) - (3)].val.ival), 0, (ps[(1) - (3)].val.opval), scalar((ps[(3) - (3)].val.opval)));
			;}
=======
#line 855 "perly.y" /* yacc.c:1646  */
    {   if ((ps[-1].val.ival) != OP_REPEAT)
				scalar((ps[-2].val.opval));
			    (yyval.opval) = newBINOP((ps[-1].val.ival), 0, (ps[-2].val.opval), scalar((ps[0].val.opval)));
			}

>>>>>>>
    break;

  case 141:
<<<<<<<
#line 840 "perly.y"
    { (yyval.opval) = newBINOP((ps[(2) - (3)].val.ival), 0, scalar((ps[(1) - (3)].val.opval)), scalar((ps[(3) - (3)].val.opval))); ;}
=======
#line 860 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newBINOP((ps[-1].val.ival), 0, scalar((ps[-2].val.opval)), scalar((ps[0].val.opval))); }

>>>>>>>
    break;

  case 142:
<<<<<<<
#line 842 "perly.y"
    { (yyval.opval) = newBINOP((ps[(2) - (3)].val.ival), 0, scalar((ps[(1) - (3)].val.opval)), scalar((ps[(3) - (3)].val.opval))); ;}
=======
#line 862 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newBINOP((ps[-1].val.ival), 0, scalar((ps[-2].val.opval)), scalar((ps[0].val.opval))); }

>>>>>>>
    break;

  case 143:
<<<<<<<
#line 844 "perly.y"
    { (yyval.opval) = newBINOP((ps[(2) - (3)].val.ival), 0, scalar((ps[(1) - (3)].val.opval)), scalar((ps[(3) - (3)].val.opval))); ;}
=======
#line 864 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newBINOP((ps[-1].val.ival), 0, scalar((ps[-2].val.opval)), scalar((ps[0].val.opval))); }

>>>>>>>
    break;

  case 144:
<<<<<<<
#line 846 "perly.y"
    { (yyval.opval) = newBINOP((ps[(2) - (3)].val.ival), 0, scalar((ps[(1) - (3)].val.opval)), scalar((ps[(3) - (3)].val.opval))); ;}
=======
#line 866 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newBINOP((ps[-1].val.ival), 0, scalar((ps[-2].val.opval)), scalar((ps[0].val.opval))); }

>>>>>>>
    break;

  case 145:
<<<<<<<
#line 848 "perly.y"
    { (yyval.opval) = newBINOP((ps[(2) - (3)].val.ival), 0, scalar((ps[(1) - (3)].val.opval)), scalar((ps[(3) - (3)].val.opval))); ;}
=======
#line 868 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newBINOP((ps[-1].val.ival), 0, scalar((ps[-2].val.opval)), scalar((ps[0].val.opval))); }

>>>>>>>
    break;

  case 146:
<<<<<<<
#line 850 "perly.y"
    { (yyval.opval) = newBINOP((ps[(2) - (3)].val.ival), 0, scalar((ps[(1) - (3)].val.opval)), scalar((ps[(3) - (3)].val.opval))); ;}
=======
#line 870 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newBINOP((ps[-1].val.ival), 0, scalar((ps[-2].val.opval)), scalar((ps[0].val.opval))); }

>>>>>>>
    break;

  case 147:
<<<<<<<
#line 852 "perly.y"
    { (yyval.opval) = newRANGE((ps[(2) - (3)].val.ival), scalar((ps[(1) - (3)].val.opval)), scalar((ps[(3) - (3)].val.opval))); ;}
=======
#line 872 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newRANGE((ps[-1].val.ival), scalar((ps[-2].val.opval)), scalar((ps[0].val.opval))); }

>>>>>>>
    break;

  case 148:
<<<<<<<
#line 854 "perly.y"
    { (yyval.opval) = newLOGOP(OP_AND, 0, (ps[(1) - (3)].val.opval), (ps[(3) - (3)].val.opval)); ;}
=======
#line 874 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newLOGOP(OP_AND, 0, (ps[-2].val.opval), (ps[0].val.opval)); }

>>>>>>>
    break;

  case 149:
<<<<<<<
#line 856 "perly.y"
    { (yyval.opval) = newLOGOP(OP_OR, 0, (ps[(1) - (3)].val.opval), (ps[(3) - (3)].val.opval)); ;}
=======
#line 876 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newLOGOP(OP_OR, 0, (ps[-2].val.opval), (ps[0].val.opval)); }

>>>>>>>
    break;

  case 150:
<<<<<<<
#line 858 "perly.y"
    { (yyval.opval) = newLOGOP(OP_DOR, 0, (ps[(1) - (3)].val.opval), (ps[(3) - (3)].val.opval)); ;}
=======
#line 878 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newLOGOP(OP_DOR, 0, (ps[-2].val.opval), (ps[0].val.opval)); }

>>>>>>>
    break;

  case 151:
<<<<<<<
#line 860 "perly.y"
    { (yyval.opval) = bind_match((ps[(2) - (3)].val.ival), (ps[(1) - (3)].val.opval), (ps[(3) - (3)].val.opval)); ;}
=======
#line 880 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = bind_match((ps[-1].val.ival), (ps[-2].val.opval), (ps[0].val.opval)); }

>>>>>>>
    break;

  case 152:
<<<<<<<
#line 865 "perly.y"
    { (yyval.opval) = newUNOP(OP_NEGATE, 0, scalar((ps[(2) - (2)].val.opval))); ;}
=======
#line 885 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP(OP_NEGATE, 0, scalar((ps[0].val.opval))); }

>>>>>>>
    break;

  case 153:
<<<<<<<
#line 867 "perly.y"
    { (yyval.opval) = (ps[(2) - (2)].val.opval); ;}
=======
#line 887 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }

>>>>>>>
    break;

  case 154:
<<<<<<<
#line 870 "perly.y"
    { (yyval.opval) = newUNOP(OP_NOT, 0, scalar((ps[(2) - (2)].val.opval))); ;}
=======
#line 890 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP(OP_NOT, 0, scalar((ps[0].val.opval))); }

>>>>>>>
    break;

  case 155:
<<<<<<<
#line 872 "perly.y"
    { (yyval.opval) = newUNOP((ps[(1) - (2)].val.ival), 0, scalar((ps[(2) - (2)].val.opval))); ;}
=======
#line 892 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP((ps[-1].val.ival), 0, scalar((ps[0].val.opval))); }

>>>>>>>
    break;

  case 156:
<<<<<<<
#line 874 "perly.y"
=======
#line 894 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newUNOP(OP_POSTINC, 0,
					op_lvalue(scalar((ps[-1].val.opval)), OP_POSTINC)); }

    break;

  case 157:
<<<<<<<
#line 877 "perly.y"
=======
#line 897 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newUNOP(OP_POSTDEC, 0,
					op_lvalue(scalar((ps[-1].val.opval)), OP_POSTDEC));}

    break;

  case 158:
<<<<<<<
#line 880 "perly.y"
=======
#line 900 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = op_convert_list(OP_JOIN, 0,
				       op_append_elem(
					OP_LIST,
					newSVREF(scalar(
					    newSVOP(OP_CONST,0,
						    newSVpvs("\""))
					)),
					(ps[-1].val.opval)
				       ));
			}

    break;

  case 159:
<<<<<<<
#line 891 "perly.y"
    { (yyval.opval) = newBINOP(OP_POW, 0, scalar((ps[(1) - (2)].val.opval)),
                                        newSVOP(OP_CONST, 0, newSViv(parser->yylval.ival))); ;}
=======
#line 911 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newBINOP(OP_POW, 0, scalar((ps[-1].val.opval)),
                                        newSVOP(OP_CONST, 0, newSViv(parser->yylval.ival))); }

>>>>>>>
    break;

  case 160:
<<<<<<<
#line 894 "perly.y"
=======
#line 914 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newUNOP(OP_PREINC, 0,
					op_lvalue(scalar((ps[0].val.opval)), OP_PREINC)); }

    break;

  case 161:
<<<<<<<
#line 897 "perly.y"
=======
#line 917 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newUNOP(OP_PREDEC, 0,
					op_lvalue(scalar((ps[0].val.opval)), OP_PREDEC)); }

    break;

  case 162:
<<<<<<<
#line 904 "perly.y"
    { (yyval.opval) = newANONLIST((ps[(2) - (3)].val.opval)); ;}
=======
#line 924 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newANONLIST((ps[-1].val.opval)); }

>>>>>>>
    break;

  case 163:
<<<<<<<
#line 906 "perly.y"
    { (yyval.opval) = newANONLIST(NULL);;}
=======
#line 926 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newANONLIST(NULL);}

>>>>>>>
    break;

  case 164:
<<<<<<<
#line 908 "perly.y"
    { (yyval.opval) = newANONHASH((ps[(2) - (4)].val.opval)); ;}
=======
#line 928 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newANONHASH((ps[-2].val.opval)); }

>>>>>>>
    break;

  case 165:
<<<<<<<
#line 910 "perly.y"
    { (yyval.opval) = newANONHASH(NULL); ;}
=======
#line 930 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newANONHASH(NULL); }

>>>>>>>
    break;

  case 166:
<<<<<<<
#line 912 "perly.y"
=======
#line 932 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { SvREFCNT_inc_simple_void(PL_compcv);
			  (yyval.opval) = newANONATTRSUB((ps[-3].val.ival), (ps[-2].val.opval), (ps[-1].val.opval), (ps[0].val.opval)); }

    break;

  case 167:
<<<<<<<
#line 915 "perly.y"
=======
#line 935 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  OP *sig = (ps[-4].val.opval), *body = (ps[-1].val.opval);
                          /* empty sig sub needs a nextstate at the end
                           * to clear the stack of any default expression
                           * detritus */
                          if (!body && (!sig || !OpHAS_SIBLING(sig)))
                               body = newSTATEOP(0, NULL, NULL);
			  if (parser->copline > (line_t)(ps[-2].val.ival))
			      parser->copline = (line_t)(ps[-2].val.ival);
			  body = block_end((ps[-5].val.ival),
				op_append_list(OP_LINESEQ, sig, body));
			  SvREFCNT_inc_simple_void(PL_compcv);
			  (yyval.opval) = newANONATTRSUB((ps[-6].val.ival), NULL, (ps[-3].val.opval), body);
			}

    break;

  case 168:
<<<<<<<
#line 934 "perly.y"
    { (yyval.opval) = dofile((ps[(2) - (2)].val.opval), (ps[(1) - (2)].val.ival));;}
=======
#line 954 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = dofile((ps[0].val.opval), (ps[-1].val.ival));}

>>>>>>>
    break;

  case 169:
<<<<<<<
#line 936 "perly.y"
    { (yyval.opval) = newUNOP(OP_NULL, OPf_SPECIAL, op_scope((ps[(2) - (2)].val.opval)));;}
=======
#line 956 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP(OP_NULL, OPf_SPECIAL, op_scope((ps[0].val.opval)));}

>>>>>>>
    break;

  case 174:
<<<<<<<
#line 944 "perly.y"
    { (yyval.opval) = newCONDOP(0, (ps[(1) - (5)].val.opval), (ps[(3) - (5)].val.opval), (ps[(5) - (5)].val.opval)); ;}
=======
#line 964 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newCONDOP(0, (ps[-4].val.opval), (ps[-2].val.opval), (ps[0].val.opval)); }

>>>>>>>
    break;

  case 175:
<<<<<<<
#line 946 "perly.y"
    { (yyval.opval) = newUNOP(OP_REFGEN, 0, (ps[(2) - (2)].val.opval)); ;}
=======
#line 966 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP(OP_REFGEN, 0, (ps[0].val.opval)); }

>>>>>>>
    break;

  case 176:
<<<<<<<
#line 948 "perly.y"
    { (yyval.opval) = newUNOP(OP_REFGEN, 0, localize((ps[(3) - (3)].val.opval),1)); ;}
=======
#line 968 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP(OP_REFGEN, 0, localize((ps[0].val.opval),1)); }

>>>>>>>
    break;

  case 177:
<<<<<<<
#line 950 "perly.y"
    { (yyval.opval) = (ps[(1) - (1)].val.opval); ;}
=======
#line 970 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }

>>>>>>>
    break;

  case 178:
<<<<<<<
#line 952 "perly.y"
    { (yyval.opval) = localize((ps[(2) - (2)].val.opval),0); ;}
=======
#line 972 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = localize((ps[0].val.opval),0); }

>>>>>>>
    break;

  case 179:
<<<<<<<
#line 954 "perly.y"
    { (yyval.opval) = sawparens((ps[(2) - (3)].val.opval)); ;}
=======
#line 974 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = sawparens((ps[-1].val.opval)); }

>>>>>>>
    break;

  case 180:
<<<<<<<
#line 956 "perly.y"
    { (yyval.opval) = (ps[(1) - (1)].val.opval); ;}
=======
#line 976 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }

>>>>>>>
    break;

  case 181:
<<<<<<<
#line 958 "perly.y"
    { (yyval.opval) = sawparens(newNULLLIST()); ;}
=======
#line 978 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = sawparens(newNULLLIST()); }

>>>>>>>
    break;

  case 182:
<<<<<<<
#line 960 "perly.y"
    { (yyval.opval) = (ps[(1) - (1)].val.opval); ;}
=======
#line 980 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }

>>>>>>>
    break;

  case 183:
<<<<<<<
#line 962 "perly.y"
    { (yyval.opval) = (ps[(1) - (1)].val.opval); ;}
=======
#line 982 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }

>>>>>>>
    break;

  case 184:
<<<<<<<
#line 964 "perly.y"
    { (yyval.opval) = (ps[(1) - (1)].val.opval); ;}
=======
#line 984 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }

>>>>>>>
    break;

  case 185:
<<<<<<<
#line 966 "perly.y"
    { (yyval.opval) = (ps[(1) - (1)].val.opval); ;}
=======
#line 986 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }

>>>>>>>
    break;

  case 186:
<<<<<<<
#line 968 "perly.y"
    { (yyval.opval) = newUNOP(OP_AV2ARYLEN, 0, ref((ps[(1) - (1)].val.opval), OP_AV2ARYLEN));;}
=======
#line 988 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP(OP_AV2ARYLEN, 0, ref((ps[0].val.opval), OP_AV2ARYLEN));}

>>>>>>>
    break;

  case 187:
<<<<<<<
#line 970 "perly.y"
    { (yyval.opval) = (ps[(1) - (1)].val.opval); ;}
=======
#line 990 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }

>>>>>>>
    break;

  case 188:
<<<<<<<
#line 972 "perly.y"
=======
#line 992 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = op_prepend_elem(OP_ASLICE,
				newOP(OP_PUSHMARK, 0),
				    newLISTOP(OP_ASLICE, 0,
					list((ps[-1].val.opval)),
					ref((ps[-3].val.opval), OP_ASLICE)));
			  if ((yyval.opval) && (ps[-3].val.opval))
			      (yyval.opval)->op_private |=
				  (ps[-3].val.opval)->op_private & OPpSLICEWARNING;
			}

    break;

  case 189:
<<<<<<<
#line 1002 "perly.y" /* yacc.c:1646  */
=======
#line 982 "perly.y"
>>>>>>>
    { (yyval.opval) = op_prepend_elem(OP_KVASLICE,
				newOP(OP_PUSHMARK, 0),
				    newLISTOP(OP_KVASLICE, 0,
					list((ps[-1].val.opval)),
					ref(oopsAV((ps[-3].val.opval)), OP_KVASLICE)));
			  if ((yyval.opval) && (ps[-3].val.opval))
			      (yyval.opval)->op_private |=
				  (ps[-3].val.opval)->op_private & OPpSLICEWARNING;
			}

    break;

  case 190:
<<<<<<<
#line 1012 "perly.y" /* yacc.c:1646  */
=======
#line 992 "perly.y"
>>>>>>>
    { (yyval.opval) = op_prepend_elem(OP_HSLICE,
				newOP(OP_PUSHMARK, 0),
				    newLISTOP(OP_HSLICE, 0,
					list((ps[-2].val.opval)),
					ref(oopsHV((ps[-4].val.opval)), OP_HSLICE)));
			  if ((yyval.opval) && (ps[-4].val.opval))
			      (yyval.opval)->op_private |=
				  (ps[-4].val.opval)->op_private & OPpSLICEWARNING;
			}

    break;

  case 191:
<<<<<<<
#line 1002 "perly.y"
=======
#line 1022 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = op_prepend_elem(OP_KVHSLICE,
				newOP(OP_PUSHMARK, 0),
				    newLISTOP(OP_KVHSLICE, 0,
					list((ps[-2].val.opval)),
					ref((ps[-4].val.opval), OP_KVHSLICE)));
			  if ((yyval.opval) && (ps[-4].val.opval))
			      (yyval.opval)->op_private |=
				  (ps[-4].val.opval)->op_private & OPpSLICEWARNING;
			}

    break;

  case 192:
<<<<<<<
#line 1012 "perly.y"
    { (yyval.opval) = (ps[(1) - (1)].val.opval); ;}
=======
#line 1032 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }

>>>>>>>
    break;

  case 193:
<<<<<<<
#line 1014 "perly.y"
    { (yyval.opval) = newUNOP(OP_ENTERSUB, 0, scalar((ps[(1) - (1)].val.opval))); ;}
=======
#line 1034 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP(OP_ENTERSUB, 0, scalar((ps[0].val.opval))); }

>>>>>>>
    break;

  case 194:
<<<<<<<
#line 1016 "perly.y"
    { (yyval.opval) = newUNOP(OP_ENTERSUB, OPf_STACKED, scalar((ps[(1) - (3)].val.opval)));
			;}
=======
#line 1036 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP(OP_ENTERSUB, OPf_STACKED, scalar((ps[-2].val.opval)));
			}

>>>>>>>
    break;

  case 195:
<<<<<<<
#line 1019 "perly.y"
=======
#line 1039 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  (yyval.opval) = newUNOP(OP_ENTERSUB, OPf_STACKED,
				op_append_elem(OP_LIST, (ps[-1].val.opval), scalar((ps[-3].val.opval))));
			}

    break;

  case 196:
<<<<<<<
#line 1024 "perly.y"
=======
#line 1044 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newUNOP(OP_ENTERSUB, OPf_STACKED,
			    op_append_elem(OP_LIST, (ps[0].val.opval), scalar((ps[-1].val.opval))));
			}

    break;

  case 197:
<<<<<<<
#line 1028 "perly.y"
    { (yyval.opval) = newSVREF((ps[(1) - (4)].val.opval)); ;}
=======
#line 1048 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newSVREF((ps[-3].val.opval)); }

>>>>>>>
    break;

  case 198:
<<<<<<<
#line 1030 "perly.y"
    { (yyval.opval) = newAVREF((ps[(1) - (4)].val.opval)); ;}
=======
#line 1050 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newAVREF((ps[-3].val.opval)); }

>>>>>>>
    break;

  case 199:
<<<<<<<
#line 1032 "perly.y"
    { (yyval.opval) = newHVREF((ps[(1) - (4)].val.opval)); ;}
=======
#line 1052 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newHVREF((ps[-3].val.opval)); }

>>>>>>>
    break;

  case 200:
<<<<<<<
#line 1034 "perly.y"
=======
#line 1054 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newUNOP(OP_ENTERSUB, 0,
				       scalar(newCVREF((ps[-1].val.ival),(ps[-3].val.opval)))); }

    break;

  case 201:
<<<<<<<
#line 1037 "perly.y"
    { (yyval.opval) = newGVREF(0,(ps[(1) - (4)].val.opval)); ;}
=======
#line 1057 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newGVREF(0,(ps[-3].val.opval)); }

>>>>>>>
    break;

  case 202:
<<<<<<<
#line 1039 "perly.y"
    { (yyval.opval) = newOP((ps[(1) - (1)].val.ival), OPf_SPECIAL);
			    PL_hints |= HINT_BLOCK_SCOPE; ;}
=======
#line 1059 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newOP((ps[0].val.ival), OPf_SPECIAL);
			    PL_hints |= HINT_BLOCK_SCOPE; }

>>>>>>>
    break;

  case 203:
<<<<<<<
#line 1042 "perly.y"
    { (yyval.opval) = newLOOPEX((ps[(1) - (2)].val.ival),(ps[(2) - (2)].val.opval)); ;}
=======
#line 1062 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newLOOPEX((ps[-1].val.ival),(ps[0].val.opval)); }

>>>>>>>
    break;

  case 204:
<<<<<<<
#line 1044 "perly.y"
    { (yyval.opval) = newUNOP(OP_NOT, 0, scalar((ps[(2) - (2)].val.opval))); ;}
=======
#line 1064 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP(OP_NOT, 0, scalar((ps[0].val.opval))); }

>>>>>>>
    break;

  case 205:
<<<<<<<
#line 1046 "perly.y"
    { (yyval.opval) = newOP((ps[(1) - (1)].val.ival), 0); ;}
=======
#line 1066 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newOP((ps[0].val.ival), 0); }

>>>>>>>
    break;

  case 206:
<<<<<<<
#line 1048 "perly.y"
    { (yyval.opval) = newUNOP((ps[(1) - (2)].val.ival), 0, (ps[(2) - (2)].val.opval)); ;}
=======
#line 1068 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP((ps[-1].val.ival), 0, (ps[0].val.opval)); }

>>>>>>>
    break;

  case 207:
<<<<<<<
#line 1050 "perly.y"
    { (yyval.opval) = newUNOP((ps[(1) - (2)].val.ival), 0, (ps[(2) - (2)].val.opval)); ;}
=======
#line 1070 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP((ps[-1].val.ival), 0, (ps[0].val.opval)); }

>>>>>>>
    break;

  case 208:
<<<<<<<
#line 1052 "perly.y"
    { (yyval.opval) = newOP(OP_REQUIRE, (ps[(1) - (1)].val.ival) ? OPf_SPECIAL : 0); ;}
=======
#line 1072 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newOP(OP_REQUIRE, (ps[0].val.ival) ? OPf_SPECIAL : 0); }

>>>>>>>
    break;

  case 209:
<<<<<<<
#line 1054 "perly.y"
    { (yyval.opval) = newUNOP(OP_REQUIRE, (ps[(1) - (2)].val.ival) ? OPf_SPECIAL : 0, (ps[(2) - (2)].val.opval)); ;}
=======
#line 1074 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP(OP_REQUIRE, (ps[-1].val.ival) ? OPf_SPECIAL : 0, (ps[0].val.opval)); }

>>>>>>>
    break;

  case 210:
<<<<<<<
#line 1056 "perly.y"
    { (yyval.opval) = newUNOP(OP_ENTERSUB, OPf_STACKED, scalar((ps[(1) - (1)].val.opval))); ;}
=======
#line 1076 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP(OP_ENTERSUB, OPf_STACKED, scalar((ps[0].val.opval))); }

>>>>>>>
    break;

  case 211:
<<<<<<<
#line 1058 "perly.y"
=======
#line 1078 "perly.y" /* yacc.c:1646  */
>>>>>>>
    { (yyval.opval) = newUNOP(OP_ENTERSUB, OPf_STACKED,
			    op_append_elem(OP_LIST, (ps[0].val.opval), scalar((ps[-1].val.opval)))); }

    break;

  case 212:
<<<<<<<
#line 1061 "perly.y"
    { (yyval.opval) = newOP((ps[(1) - (1)].val.ival), 0); ;}
=======
#line 1081 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newOP((ps[0].val.ival), 0); }

>>>>>>>
    break;

  case 213:
<<<<<<<
#line 1063 "perly.y"
    { (yyval.opval) = newOP((ps[(1) - (3)].val.ival), 0);;}
=======
#line 1083 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newOP((ps[-2].val.ival), 0);}

>>>>>>>
    break;

  case 214:
<<<<<<<
#line 1065 "perly.y"
    { (yyval.opval) = (ps[(1) - (1)].val.opval); ;}
=======
#line 1085 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }

>>>>>>>
    break;

  case 215:
<<<<<<<
#line 1067 "perly.y"
    { (yyval.opval) = (ps[(1) - (3)].val.opval); ;}
=======
#line 1087 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[-2].val.opval); }

>>>>>>>
    break;

  case 216:
<<<<<<<
#line 1069 "perly.y"
    { (yyval.opval) = newUNOP(OP_ENTERSUB, OPf_STACKED, scalar((ps[(1) - (1)].val.opval))); ;}
=======
#line 1089 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP(OP_ENTERSUB, OPf_STACKED, scalar((ps[0].val.opval))); }

>>>>>>>
    break;

  case 217:
<<<<<<<
#line 1071 "perly.y"
    { (yyval.opval) = ((ps[(1) - (3)].val.ival) == OP_NOT)
                          ? newUNOP((ps[(1) - (3)].val.ival), 0, newSVOP(OP_CONST, 0, newSViv(0)))
                          : newOP((ps[(1) - (3)].val.ival), OPf_SPECIAL); ;}
=======
#line 1091 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = ((ps[-2].val.ival) == OP_NOT)
                          ? newUNOP((ps[-2].val.ival), 0, newSVOP(OP_CONST, 0, newSViv(0)))
                          : newOP((ps[-2].val.ival), OPf_SPECIAL); }

>>>>>>>
    break;

  case 218:
<<<<<<<
#line 1075 "perly.y"
    { (yyval.opval) = newUNOP((ps[(1) - (4)].val.ival), 0, (ps[(3) - (4)].val.opval)); ;}
=======
#line 1095 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP((ps[-3].val.ival), 0, (ps[-1].val.opval)); }

>>>>>>>
    break;

  case 219:
<<<<<<<
#line 1077 "perly.y"
=======
#line 1097 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			    if (   (ps[0].val.opval)->op_type != OP_TRANS
			        && (ps[0].val.opval)->op_type != OP_TRANSR
				&& (((PMOP*)(ps[0].val.opval))->op_pmflags & PMf_HAS_CV))
			    {
				(yyval.ival) = start_subparse(FALSE, CVf_ANON);
				SAVEFREESV(PL_compcv);
                                parser->in_sub = 0;
			    } else
				(yyval.ival) = 0;
			}

    break;

  case 220:
<<<<<<<
#line 1089 "perly.y"
    { (yyval.opval) = pmruntime((ps[(1) - (6)].val.opval), (ps[(4) - (6)].val.opval), (ps[(5) - (6)].val.opval), 1, (ps[(2) - (6)].val.ival)); ;}
=======
#line 1108 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = pmruntime((ps[-5].val.opval), (ps[-2].val.opval), (ps[-1].val.opval), 1, (ps[-4].val.ival)); }

>>>>>>>
    break;

  case 223:
<<<<<<<
#line 1093 "perly.y"
=======
#line 1112 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
			  (yyval.opval) = newLISTOP(OP_DIE, 0, newOP(OP_PUSHMARK, 0),
				newSVOP(OP_CONST, 0, newSVpvs("Unimplemented")));
			}

    break;

  case 225:
<<<<<<<
#line 1102 "perly.y"
    { (yyval.opval) = my_attrs((ps[(2) - (3)].val.opval),(ps[(3) - (3)].val.opval)); ;}
=======
#line 1121 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = my_attrs((ps[-1].val.opval),(ps[0].val.opval)); }

>>>>>>>
    break;

  case 226:
<<<<<<<
#line 1104 "perly.y"
    { (yyval.opval) = localize((ps[(2) - (2)].val.opval),1); ;}
=======
#line 1123 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = localize((ps[0].val.opval),1); }

>>>>>>>
    break;

  case 227:
<<<<<<<
#line 1106 "perly.y"
    { (yyval.opval) = newUNOP(OP_REFGEN, 0, my_attrs((ps[(3) - (4)].val.opval),(ps[(4) - (4)].val.opval))); ;}
=======
#line 1125 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newUNOP(OP_REFGEN, 0, my_attrs((ps[-1].val.opval),(ps[0].val.opval))); }

>>>>>>>
    break;

  case 228:
<<<<<<<
#line 1111 "perly.y"
    { (yyval.opval) = sawparens((ps[(2) - (3)].val.opval)); ;}
=======
#line 1130 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = sawparens((ps[-1].val.opval)); }

>>>>>>>
    break;

  case 229:
<<<<<<<
#line 1113 "perly.y"
    { (yyval.opval) = sawparens(newNULLLIST()); ;}
=======
#line 1132 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = sawparens(newNULLLIST()); }

>>>>>>>
    break;

  case 230:
<<<<<<<
#line 1116 "perly.y"
    { (yyval.opval) = (ps[(1) - (1)].val.opval); ;}
=======
#line 1135 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }

>>>>>>>
    break;

  case 231:
<<<<<<<
#line 1118 "perly.y"
    { (yyval.opval) = (ps[(1) - (1)].val.opval); ;}
=======
#line 1137 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }

>>>>>>>
    break;

  case 232:
<<<<<<<
#line 1120 "perly.y"
    { (yyval.opval) = (ps[(1) - (1)].val.opval); ;}
=======
#line 1139 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }

>>>>>>>
    break;

  case 233:
<<<<<<<
#line 1122 "perly.y"
    { (yyval.opval) = (ps[(1) - (1)].val.opval); ;}
=======
#line 1141 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }

>>>>>>>
    break;

  case 234:
<<<<<<<
#line 1127 "perly.y"
    { (yyval.opval) = NULL; ;}
=======
#line 1146 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = NULL; }

>>>>>>>
    break;

  case 235:
<<<<<<<
#line 1129 "perly.y"
    { (yyval.opval) = (ps[(1) - (1)].val.opval); ;}
=======
#line 1148 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }

>>>>>>>
    break;

  case 236:
<<<<<<<
#line 1133 "perly.y"
    { (yyval.opval) = NULL; ;}
=======
#line 1152 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = NULL; }

>>>>>>>
    break;

  case 237:
<<<<<<<
#line 1135 "perly.y"
    { (yyval.opval) = (ps[(1) - (1)].val.opval); ;}
=======
#line 1154 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }

>>>>>>>
    break;

  case 238:
<<<<<<<
#line 1139 "perly.y"
    { (yyval.opval) = NULL; ;}
=======
#line 1158 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = NULL; }

>>>>>>>
    break;

  case 239:
<<<<<<<
#line 1141 "perly.y"
    { (yyval.opval) = (ps[(2) - (2)].val.opval); ;}
=======
#line 1160 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }

>>>>>>>
    break;

  case 240:
<<<<<<<
#line 1145 "perly.y"
    { (yyval.ival) = (ps[(1) - (1)].val.ival); ;}
=======
#line 1164 "perly.y" /* yacc.c:1646  */
    { (yyval.ival) = (ps[0].val.ival); }

>>>>>>>
    break;

  case 241:
<<<<<<<
#line 1147 "perly.y"
    { munge_qwlist_to_paren_list((ps[(1) - (1)].val.opval)); ;}
=======
#line 1166 "perly.y" /* yacc.c:1646  */
    { munge_qwlist_to_paren_list((ps[0].val.opval)); }

>>>>>>>
    break;

  case 242:
<<<<<<<
#line 1149 "perly.y"
    { (yyval.ival) = (ps[(3) - (3)].val.ival); ;}
=======
#line 1168 "perly.y" /* yacc.c:1646  */
    { (yyval.ival) = (ps[0].val.ival); }

>>>>>>>
    break;

  case 243:
<<<<<<<
#line 1155 "perly.y"
    { parser->in_my = 0; (yyval.opval) = my((ps[(1) - (1)].val.opval)); ;}
=======
#line 1174 "perly.y" /* yacc.c:1646  */
    { parser->in_my = 0; (yyval.opval) = my((ps[0].val.opval)); }

>>>>>>>
    break;

  case 251:
<<<<<<<
#line 1172 "perly.y"
    { (yyval.opval) = newCVREF((ps[(1) - (2)].val.ival),(ps[(2) - (2)].val.opval)); ;}
=======
#line 1191 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newCVREF((ps[-1].val.ival),(ps[0].val.opval)); }

>>>>>>>
    break;

  case 252:
<<<<<<<
#line 1176 "perly.y"
    { (yyval.opval) = newSVREF((ps[(2) - (2)].val.opval)); ;}
=======
#line 1195 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newSVREF((ps[0].val.opval)); }

>>>>>>>
    break;

  case 253:
<<<<<<<
#line 1180 "perly.y"
    { (yyval.opval) = newAVREF((ps[(2) - (2)].val.opval));
			  if ((yyval.opval)) (yyval.opval)->op_private |= (ps[(1) - (2)].val.ival);
			;}
=======
#line 1199 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newAVREF((ps[0].val.opval));
			  if ((yyval.opval)) (yyval.opval)->op_private |= (ps[-1].val.ival);
			}

>>>>>>>
    break;

  case 254:
<<<<<<<
#line 1186 "perly.y"
=======
#line 1205 "perly.y" /* yacc.c:1646  */
>>>>>>>
    {
                          SV *constsv = cSVOPx_sv((ps[-1].val.opval));
                          assert((ps[-3].val.opval)->op_targ);
                          if (SvTYPE(constsv) != SVt_IV)
                            Perl_croak(aTHX_ "Invalid array size %s[%s]",
                                  PAD_COMPNAME_PV((ps[-3].val.opval)->op_targ),
                                  SvPOK(constsv) ? SvPVX(constsv) : "");
                          /* - is not a THING, syntax error near "[-"
                          if (size <= 0)
                            Perl_croak(aTHX_ "Invalid array size %s[%d]",
                                  PAD_COMPNAME_PV($2->op_targ), size);
                          */
			  if (!FEATURE_SHAPED_ARRAYS_IS_ENABLED)
                              Perl_croak(aTHX_ "Experimental "
                                    "shaped_arrays not enabled");
#ifndef USE_CPERL
                          /* Policies... Either provide a stable feature or not.
                             No need to be defensive about every single new feature */
			  ck_warner_d(
				packWARN(WARN_EXPERIMENTAL__SHAPED_ARRAYS),
				"The shaped_arrays feature is experimental");
#endif
			  (yyval.opval) = newAVREF((ps[-3].val.opval));
                          av_init_shaped(MUTABLE_AV(PAD_SV((ps[-3].val.opval)->op_targ)), SvIVX(constsv),
                                        PadnameTYPE(PAD_COMPNAME((ps[-3].val.opval)->op_targ)));
			}

    break;

  case 255:
<<<<<<<
#line 1215 "perly.y"
    { (yyval.opval) = newHVREF((ps[(2) - (2)].val.opval));
			  if ((yyval.opval)) (yyval.opval)->op_private |= (ps[(1) - (2)].val.ival);
			;}
=======
#line 1234 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newHVREF((ps[0].val.opval));
			  if ((yyval.opval)) (yyval.opval)->op_private |= (ps[-1].val.ival);
			}

>>>>>>>
    break;

  case 256:
<<<<<<<
#line 1221 "perly.y"
    { (yyval.opval) = newAVREF((ps[(2) - (2)].val.opval)); ;}
=======
#line 1240 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newAVREF((ps[0].val.opval)); }

>>>>>>>
    break;

  case 257:
<<<<<<<
#line 1223 "perly.y"
    { (yyval.opval) = newAVREF((ps[(1) - (4)].val.opval)); ;}
=======
#line 1242 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newAVREF((ps[-3].val.opval)); }

>>>>>>>
    break;

  case 258:
<<<<<<<
#line 1227 "perly.y"
    { (yyval.opval) = newGVREF(0,(ps[(2) - (2)].val.opval)); ;}
=======
#line 1246 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newGVREF(0,(ps[0].val.opval)); }

>>>>>>>
    break;

  case 260:
<<<<<<<
#line 1232 "perly.y"
    { (yyval.opval) = newAVREF((ps[(1) - (3)].val.opval)); ;}
=======
#line 1251 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newAVREF((ps[-2].val.opval)); }

>>>>>>>
    break;

  case 262:
<<<<<<<
#line 1237 "perly.y"
    { (yyval.opval) = newHVREF((ps[(1) - (3)].val.opval)); ;}
=======
#line 1256 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newHVREF((ps[-2].val.opval)); }

>>>>>>>
    break;

  case 264:
<<<<<<<
#line 1242 "perly.y"
    { (yyval.opval) = newGVREF(0,(ps[(1) - (3)].val.opval)); ;}
=======
#line 1261 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = newGVREF(0,(ps[-2].val.opval)); }

>>>>>>>
    break;

  case 265:
<<<<<<<
#line 1247 "perly.y"
    { (yyval.opval) = scalar((ps[(1) - (1)].val.opval)); ;}
=======
#line 1266 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = scalar((ps[0].val.opval)); }

>>>>>>>
    break;

  case 266:
<<<<<<<
#line 1249 "perly.y"
    { (yyval.opval) = scalar((ps[(1) - (1)].val.opval)); ;}
=======
#line 1268 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = scalar((ps[0].val.opval)); }

>>>>>>>
    break;

  case 267:
<<<<<<<
#line 1251 "perly.y"
    { (yyval.opval) = op_scope((ps[(1) - (1)].val.opval)); ;}
=======
#line 1270 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = op_scope((ps[0].val.opval)); }

>>>>>>>
    break;

  case 268:
<<<<<<<
#line 1254 "perly.y"
    { (yyval.opval) = (ps[(1) - (1)].val.opval); ;}
=======
#line 1273 "perly.y" /* yacc.c:1646  */
    { (yyval.opval) = (ps[0].val.opval); }

>>>>>>>
    break;



      default: break;
    

/* Generated from:
<<<<<<<
 * 339320c055e2655485d9c917f6bd38892b3f27e4531d9e1fc030d5922ed4b45d perly.y
 * d75acf04e5e050e9d0de13999b5b46a13f176dcf9f75c07acf51e913fc41db9a regen_perly.pl
=======
 * 373e4f6fc693617ab172a8fc8d02a6149a4def31bd43604fac3cc33c00858d3e perly.y
 * 34c0653ef7c691f2b4ac71336f4ea94e2bd925344002392f88ceeb0b435555fa regen_perly.pl
>>>>>>>
 * ex: set ro: */
