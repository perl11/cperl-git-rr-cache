=encoding utf8

=head1 NAME

perlcdelta - what is new for cperl v5.24.0

=head1 DESCRIPTION

<<<<<<<
This document describes perl-only differences between the cperl 5.22.2
release and the cperl 5.24.0 release.
=======
This document describes perl-only differences between the cperl 5.22.3
release and the cperl 5.24.0 release.
>>>>>>>

=head1 Core Enhancements

=over 4

<<<<<<<
=item * Keep the lexical topic feature
=======
=item * Keep the lexical topic feature

Undo the removal of lexical topic. We fixed that in 5.22.2c already, and
it is critically needed for given/when, smartmatch.

=item * Proper signatures

Support builtin and efficient signatures, with types and references (call-by-ref),
goto to a signatured function is now a true tail call, reusing the old padframe
variables, not using copies.
>>>>>>>

<<<<<<<
See L<perlsub/Signatures> and L<perlfunc/prototype>.
=======
Undo the removal of lexical topic. We fixed that in 5.22.2c already, and
it is critically needed for given/when, smartmatch.
>>>>>>>

<<<<<<<
=item * Less experimental needed
=======
The C<prototype> function returns the parsed string of a declared
signature if no prototype attribute overrides it.
>>>>>>>

<<<<<<<
Remove the previously required use experimental for
C<lexical_topic>, C<smartmatch>.
given/when is now standard cperl syntax.
=======
The C<@_> array inside a function body with a signature is empty. With
default parameters there's is currently no way to find out how many
actual arguments were provided, and how many were filled out with
defaults.
L<[cperl #7]|https://github.com/perl11/cperl/issues/7>
L<[cperl #134]|https://github.com/perl11/cperl/issues/134>
>>>>>>>

<<<<<<<
=item * Less experimental needed
=======
Note that C<postderef> and C<autoderef> were removed by perl5.
>>>>>>>

<<<<<<<
=item * keep CxFOREACHDEF removed with perl-5.24.0
=======
Remove the previously required use experimental for
C<lexical_topic>, C<smartmatch>.
C<given>/C<when> is now standard cperl syntax.
>>>>>>>

<<<<<<<
API macro to check for a loop with default var (gv or pad $_).
Added with 5.9.3 by Robin Houston when he added given/when.
Deleted with 5.24.0, without any deprecation or mention.
=======
Note that C<postderef> and C<autoderef> were removed by perl5.

=item * Improved fast arithmetic

The compile-time C<u_{add,subtract,multiply}> op variants for constant folding
have now proper overflowing behaviour, and are now also used with 32bit.
L<[cperl #2]|https://github.com/perl11/cperl/issues/2>

=item * keep CxFOREACHDEF removed with perl-5.24.0

API macro to check for a loop with default var (gv or pad C<$_>).
Added with 5.9.3 by Robin Houston when he added given/when.
Deleted with 5.24.0, without any deprecation or mention.

=item * 2 new OP members

C<op_rettype> was added and C<op_typechecked> taken from a spare bit.
>>>>>>>

=back

=head1 Core Enhancements from Perl5

Backported some fixes from p5p, merged with perl-5.24.0.
L<[cperl #137]|https://github.com/perl11/cperl/issues/137>

=over 4

<<<<<<<
=item * ~20% performance improvements with a CX context system rewrite
=======
=item * ~20% performance improvements with a CX context system rewrite

=item * DESTROY cache moved back from the stash to mro_meta

So we don't need our special B::SvSTASH fixes anymore.
>>>>>>>

=back

=head1 Modules and Pragmata

=head2 Updated Modules and Pragmata

<<<<<<<
=over 4

=item B::C 1.54_03

Fixed 5.24 specific assertions, with shared xpviv/xpvuv
=======
Many internal core modules are now properly "modernized", i.e.
use typed signatures, and catch errors at compile-time.
L<[cperl #97]|https://github.com/perl11/cperl/issues/97>

=over 4

=item B::C 1.54_06

Handle cperl OP_SIGNATURE.

Fix refcount of cop hints hashes with 5.22-nt (#220)

Better UVX L and U suffices.

Handle shared IV and UV xpv structs,
  fixed 5.24 specific assertions, with shared xpviv/xpvuv

=item B::Deparse 1.37_02c

Add more cperl-specific ops: aelem*_u, u_{add,subtract,multiply},
{i,n,s}_aelem{,_u}

=item Test-Simple 1.001014c

Modernized

=item File-Path 3.09c

Modernized. Enforce many str types.

=item PathTools 4.65c

Modernized. Enforce many str types.

=item Pod-Simple 4.30c

Modernized

=item Pod-Html 2.22c

Modernized

=item bignum 0.42c

Modernized

=item bigint 0.42c

Modernized

=item bigrat 0.42c

Modernized

=item CPAN

Fixed tests. Type skip calls and File-Path args.

=item ExtUtils-MakeMaker

Type File-Path args.

=item CPAN-Meta-YAML

Modernized.
str type for skip

=item CPAN-Meta 2.150005c

fix Encode test for modernized Test-Simple,
stringify the 1st skip arg

=item Test-Harness

type the skip calls

=item Hash-Util-FieldHash

type the skip calls

=item YAML-LibYAML

Spiffy and Test::Base 0.88c fixes for fake signatures.

Spiffy uses a source filter to expand many methods,
but this does not work with fake_signatures.
Expand the compile-time state of Test::Base to avoid
source filters.
Also add . to @INC in some tests

=item Filter-Util-Call

Fixed 1 test for signature errmsg

=item IO-Compress

Fixed 1 test for signature errmsg

=item Devel-Peek

Skip tests for changed dynamic prototype() with sigs.
Fix tests with -DDEBUG_LEAKING_SCALARS

=item B 1.62_02

add B::OP::rettype, B::OP::typechecked,
B::CV::SIGOP and support for OP_SIGNATURE with B::UNOP_AUX::aux_list
and B::UNOP_AUX::string.

Note: With threads in B::UNOP_AUX::aux_list the padoffsets are returned as such,
and not as SV. This is different to upstream perl5, a perl5 bug.

=item Devel-NYTProf

fix test for short CV_NAME_NOMAIN

=item perl5db 1.49_04c

fix test for short CV_NAME_NOMAIN.
run-time load IO::Handle, broke miniperl.

=item warnings

Add category C<types>.

Disable 3 experimental warnings which are now default with cperl.
>>>>>>>

=back

=head2 Not Updated Modules and Pragmata

This modules are currently not ready to be updated.

=over 4

=item Pod::Checker 1.71

1.71 breaks t/porting/podcheck.t
L<[RT #113846]|https://rt.cpan.org/Ticket/Display.html?id=113846>

=item MakeUtils::MakeMaker 7.11_06

Broken for -Dfortify_inc, no "." in @INC.
Broken new "_" logic when merged with our 'c' suffix logic.

=back

=head1 Platform Support

=head2 Platform-Specific Notes

=over 4

=item Win32

=item Darwin

<<<<<<<
=======
=item Other

>>>>>>>
=back

=head1 Selected Bug Fixes

=over 4

<<<<<<<
=item * XXX
=======
=item * XXX

=back

=head1 Other

=over 4

=item * XXX
>>>>>>>

=back

=head1 Acknowledgements

cperl 5.24.0 represents approximately 2 weeks of development since cperl
5.22.2c and contains approximately 32,000,000 lines of changes across 4,900
files from 53 authors.

Excluding auto-generated files, documentation and release tools, there were
approximately 140,000 lines of changes to 600 .pm, .t, .c and .h files.

The following people are known to have contributed the improvements that became
cperl 5.24.0:

Karl Williamson, David Mitchell, Jarkko Hietaniemi, Andy Broad, Reini Urban,
Tony Cook, Craig A. Berry, Lukas Mai, Aaron Crane, Daniel Dragan, Dagfinn
Ilmari Manns√•ker, Steve Hay, Ricardo Signes, James E Keenan, H.Merijn Brand,
Yves Orton, Matthew Horsfall, Aristotle Pagaltzis, Father Chrysostomos, Karen
Etheridge, Abigail, Doug Bell, Chris 'BinGOs' Williams, Stevan Little, Rafael
Garcia-Suarez, Andy Dougherty, Vincent Pit, Todd Rinaldo, Tom Hukins, Thomas
Sibley, Nicholas Clark, Ed J, Mohammed El-Afifi, Mattia Barbon, Shlomi Fish, Ed
Avis, Stanislaw Pusep, Alexander D'Archangel, Ludovic E. R. Tolhurst-Cleaver,
Chas. Owens, Victor Adam, Herbert Breunung, Sisyphus, Achim Gratz, Leon
Timmermans, Aaron Priven, Max Maischein, Dan Collins, Ivan Pozdeev, Peter
Martini, Zachary Storer, Dr.Ruud, John SJ Anderson.

The list above is almost certainly incomplete as it is automatically generated
from version control history including the perl and cperl repos. In particular,
it does not include the names of the (very much appreciated) contributors who
reported issues to the Perl bug tracker and the cperl github issues.

Many of the changes included in this version originated in the CPAN modules
included in Perl's core. We're grateful to the entire CPAN community for
helping Perl to flourish.

For a more complete list of all of Perl's historical contributors, please see
the F<AUTHORS> file in the Perl source distribution.

=head1 Reporting Bugs

If you find what you think is a bug, you might check the articles recently
posted to the comp.lang.perl.misc newsgroup and the perl bug database at
L<https://rt.perl.org/> .  There may also be information at
L<http://www.perl.org/> , the Perl Home Page.

If you believe you have an unreported bug, please run the C<perlbug> program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of C<perl -V>,
will be sent off to C<perlbug@perl.org> to be analysed by the Perl porting team.

If you think it's a cperl specific bug or trust the cperl developers more 
please file an issue at L<https://github.com/perl11/cperl/issues>.

If the bug you are reporting has security implications, which make it
inappropriate to send to a publicly archived mailing list, then please send it
to C<perl5-security-report@perl.org>.  This points to a closed subscription
unarchived mailing list, which includes all the p5p core committers, who will be
able to help assess the impact of issues, figure out a resolution, and help
co-ordinate the release of patches to mitigate or fix the problem across all
platforms on which Perl is supported.  Please only use this address for
security issues in the Perl core, not for modules independently distributed on
CPAN.

If you trust the cperl developers more, please send an email to
them. The p5p security teams skips many security issues, or are
unwilling to fix them.

=head1 SEE ALSO

The F<Changes> file for an explanation of how to view exhaustive details on
what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut
