=encoding utf8

=head1 NAME

perlcdelta - what is new for cperl v5.27.2

=head1 DESCRIPTION

This document describes the differences between the cperl 5.27.1
and the cperl 5.27.2 releases.

If you are upgrading from an earlier release such as v5.24.2c, first
read the L<perl526*cdelta> documentation, which describes differences
between v5.26.0c and v5.26.2c

=head1 Notice

XXX Any important notices here

=head1 Core Enhancements

XXX New core language features go here.  Summarize user-visible core language
enhancements.  Particularly prominent performance optimisations could go
here, but most should go in the L</Performance Enhancements> section.

[ List each enhancement as a =head2 entry ]

=head2 dump more COP fields

Dump the values of a COP $^H, %^H and the lexical warnings via
C<op_dump()> and it's XS module L<Devel::Peek>.
Improve the display of cop SEQ values and ranges, and padnames.
Added a DEBUGGING C<cop_dump()> helper, esp. useful for deleted PL_curcop's.

=head2 More unicode ops

Added the strong unicode fraction op C</> U+2044, which binds stronger
than all other arithmetic ops, and the two unicode multiplication ops
C<⋅> U+022C5 (dot operator) and C<∙> U+2219 (multiplication dot),
which binds the same as C<*>.

=head2 exact_arith

Zero-overhead exact integer arithmetic with automatic promotion to
L<Math::BigInt::GMP> or L<Math::BigInt> on integer overflows. Can be
turned on globally via C<-Duseexactarith> or lexically via C<use
exact_arith;>.

=head1 Security

XXX Any security-related notices go here.  In particular, any security
vulnerabilities closed should be noted here rather than in the
L</Selected Bug Fixes> section.

[ List each security issue as a =head2 entry ]

=head1 Incompatible Changes

XXX For a release on a stable branch, this section aspires to be:

    There are no changes intentionally incompatible with 5.XXX.XXX
    If any exist, they are bugs, and we request that you submit a
    report.  See L</Reporting Bugs> below.

[ List each incompatible change as a =head2 entry ]

=head2 HINTS_LOCALE_PARTIAL

The scalarC< HINTS_LOCALE_PARTIAL> hints bit is gone, you need to look at
the C<%^H> value. For backward compatibility the value of
C<HINTS_LOCALE_PARTIAL> is now the same as C<HINTS_LOCALE>.

=head1 Deprecations

XXX Any deprecated features, syntax, modules etc. should be listed here.

[ List each other deprecation as a =head2 entry ]

=head2 Module removals

XXX Remove this section if inapplicable.

The following modules will be removed from the core distribution in a
future release, and will at that time need to be installed from CPAN.
Distributions on CPAN which require these modules will need to list them as
prerequisites.

The core versions of these modules will now issue C<"deprecated">-category
warnings to alert you to this fact.  To silence these deprecation warnings,
install the modules in question from CPAN.

Note that these are (with rare exceptions) fine modules that you are encouraged
to continue to use.  Their disinclusion from core primarily hinges on their
necessity to bootstrapping a fully functional, CPAN-capable Perl installation,
not usually on concerns over their design.

=over

=item XXX

XXX Note that deprecated modules should be listed here even if they are listed
as an updated module in the L</Modules and Pragmata> section.

=back

=head1 Performance Enhancements

=over 4

=item *

The L<fields> API refactor using a local L<perlapi/HvFIELDS> buffer
and not globals C<%FIELDS> and C<@FIELDS> SVs anymore gained 25% speed
and similar memory improvements.

=back

=head1 Modules and Pragmata

XXX All changes to installed files in F<cpan/>, F<dist/>, F<ext/> and F<lib/>
go here.  If Module::CoreList is updated, generate an initial draft of the
following sections using F<Porting/corelist-perldelta.pl>.  A paragraph summary
for important changes should then be added by hand.  In an ideal world,
dual-life modules would have a F<Changes> file that could be cribbed.

[ Within each section, list entries as a =item entry ]

=head2 New Modules and Pragmata

=over 4

=item L<exact_arith> 0.01

Switch to L<Math::BigInt::GMP> or L<Math::BigInt> on arithmetic
integer overflows. Do not loose precision with any builtin integer
arithmetic operator.
See L<[cperl #21]|https://github.com/perl11/cperl/issues/21>

=back

=head2 Updated Modules and Pragmata

=over 4

=item C<coretypes> 0.03c

Each coretype is now a class.

=item L<Devel::Peek> 1.26_03

Dump the values of a COP $^H, %^H and lexical warnings.
Improved the test a bit.

=item L<fields> 2.26c

Implemented L<Mu/fields> returning fields objects, as in perl6
(there called I<Attributes>).

=item L<Mu> 0.02c

Implemented L<Mu/fields> returning fields objects.

=back

=head2 Removed Modules and Pragmata

=over 4

=item *

XXX

=back

=head1 Documentation

XXX Changes to files in F<pod/> go here.  Consider grouping entries by
file and be sure to link to the appropriate page, e.g. L<perlfunc>.

=head2 New Documentation

XXX Changes which create B<new> files in F<pod/> go here.

=head3 L<XXX>

XXX Description of the purpose of the new file here

=head2 Changes to Existing Documentation

=head3 L<perlapi>

=over 4

=item *

Added API docs for most hash macros.

=back

=head3 L<perlop>

=over 4

=item *

Added the missing operator precedences and documentation for the cperl
unicode operators.

=back

=head1 Diagnostics

The following additions or changes have been made to diagnostic output,
including warnings and fatal error messages.  For the complete list of
diagnostic messages, see L<perldiag>.

XXX New or changed warnings emitted by the core's C<C> code go here.  Also
include any changes in L<perldiag> that reconcile it to the C<C> code.

=head2 New Diagnostics

XXX Newly added diagnostic messages go under here, separated into New Errors
and New Warnings

=head3 New Errors

=over 4

=item *

L<Too many fields|perldiag/"Too many fields">

=back

=head3 New Warnings

=over 4

=item *

XXX L<message|perldiag/"message">

=back

=head2 Changes to Existing Diagnostics

XXX Changes (i.e. rewording) of diagnostic messages go here

=over 4

=item *

XXX Describe change here

=back

=head1 Utility Changes

XXX Changes to installed programs such as F<cperlbug> and F<xsubpp> go here.
Most of these are built within the directory F<utils>.

[ List utility changes as a =head2 entry for each utility and =item
entries for each change
Use L<XXX> with program names to get proper documentation linking. ]

=head2 L<XXX>

=over 4

=item *

XXX

=back

=head1 Configuration and Compilation

XXX Changes to F<Configure>, F<installperl>, F<installman>, and analogous tools
go here.  Any other changes to the Perl build process should be listed here.
However, any platform-specific changes should be listed in the
L</Platform Support> section, instead.

[ List changes as a =item entry ].

=over 4

=item *

Fixed C<d_builtin_arith_overflow> detection and usage for 32bit
systems with C<use64bitint>. They do use the 'll' suffix, same as with
WIN64.  Now we can use this optimization.

=item *

Added the C<-Duseexactarith> Configure argument to use the new
L<exact_arith> pragma by default. This is then similar to perl6.
There's also a new C<PERL_EXACT_ARITH> definition turned on by default
to specify that exact_arith can be used.

=back

=head1 Testing

XXX Any significant changes to the testing of a freshly built perl should be
listed here.  Changes which create B<new> files in F<t/> go here as do any
large changes to the testing harness (e.g. when parallel testing was added).
Changes to existing files in F<t/> aren't worth summarizing, although the bugs
that they represent may be covered elsewhere.

[ List each test improvement as a =item entry ]

=over 4

=item *

XXX

=back

=head1 Platform Support

XXX Any changes to platform support should be listed in the sections below.

[ Within the sections, list each platform as a =item entry with specific
changes as paragraphs below it. ]

=head2 New Platforms

XXX List any platforms that this version of perl compiles on, that previous
versions did not.  These will either be enabled by new files in the F<hints/>
directories, or new subdirectories and F<README> files at the top level of the
source tree.

=over 4

=item XXX-some-platform

XXX

=back

=head2 Discontinued Platforms

XXX List any platforms that this version of perl no longer compiles on.

=over 4

=item XXX-some-platform

XXX

=back

=head2 Platform-Specific Notes

XXX List any changes for specific platforms.  This could include configuration
and compilation changes or changes in portability/compatibility.  However,
changes within modules for platforms should generally be listed in the
L</Modules and Pragmata> section.

=over 4

=item XXX-some-platform

XXX

=back

=head1 Internal Changes

XXX Changes which affect the interface available to C<XS> code go here.  Other
significant internal changes for future core maintainers should be noted as
well.

[ List each change as a =item entry ]

=over 4

=item *

Added L<perlapi/hv_undef_flags> to the public API.

=item *

Refactored the L<fields> API from global data into methods.
Added a L<perlapi/HvFIELDS> field to HvAUX as linear buffer
of "name\0pad...\0" fields, no class C<%FIELDS> and C<@FIELDS> anymore.
See L<[cperl #322]|https://github.com/perl11/cperl/issues/322>

=back

=head1 Selected Bug Fixes

XXX Important bug fixes in the core language are summarized here.  Bug fixes in
files in F<ext/> and F<lib/> are best summarized in L</Modules and Pragmata>.

[ List each fix as a =item entry ]

=over 4

=item *

XXX

=back

=head1 Known Problems

XXX Descriptions of platform agnostic bugs we know we can't fix go here.  Any
tests that had to be C<TODO>ed for the release would be noted here.  Unfixed
platform specific bugs also go here.

[ List each fix as a =item entry ]

=over 4

=item *

XXX

=back

=head1 Errata From Previous Releases

=over 4

=item *

XXX Add anything here that we forgot to add, or were mistaken about, in
the perldelta of a previous release.

=back

=head1 Obituary

XXX If any significant core contributor has died, we've added a short obituary
here.

=head1 Acknowledgements

XXX Generate this with:

    cperl Porting/acknowledgements.pl cperl-5.27.1..HEAD

=head1 Reporting Bugs

If you find what you think is a bug, you might check the articles recently
posted to the comp.lang.perl.misc newsgroup and the perl bug database at
L<https://rt.perl.org/> .  There may also be information at
L<http://www.perl.org/> , the Perl Home Page.

If you believe you have an unreported bug, please run the L<cperlbug> program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of C<perl -V>,
will be sent off to perlbug@perl.org to be analysed by the Perl porting team.

If you think it's a cperl specific bug or trust the cperl developers more 
please file an issue at L<https://github.com/perl11/cperl/issues>.

If the bug you are reporting has security implications which make it
inappropriate to send to a publicly archived mailing list, then see
L<perlsec/SECURITY VULNERABILITY CONTACT INFORMATION>
For details of how to report the issue.

=head1 SEE ALSO

The F<Changes> file for an explanation of how to view exhaustive details on
what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut
