=encoding utf8

=head1 NAME

perlcdelta - what is new for cperl v5.28.2

=head1 DESCRIPTION

This document describes the differences between the cperl 5.28.1
and the cperl 5.28.2 release.

If you are upgrading from an earlier release such as v5.26.0c, first
read the L<perl526*cdelta> documentation, which describes differences
between v5.26.0c and v5.26.3c

=head1 Security

=head2 [CVE-2018-18311] Integer overflow leading to buffer overflow and segmentation fault

Integer arithmetic in C<Perl_my_setenv()> could wrap when the combined length
of the environment variable name and value exceeded around 0x7fffffff.  This
could lead to writing beyond the end of an allocated buffer with attacker
supplied data.

L<[perl #133204]|https://rt.perl.org/Ticket/Display.html?id=133204>

=head2 Restrict my_setenv to ARG_MAX

perl5 fixed C<Perl_my_setenv()> by allowing C<%ENV> sizes larger than
C<ARG_MAX> (typically 128Kb), up to 2GB. This is considered a security
risk. It writes onto the kernel stack, even if often caught by MAXEXECARGS
"Argument list too long" kernel errors on the next exec call.
cperl disallows C<%ENV> larger than the sysconf(_SC_ARG_MAX)/MAX_ARG_STRLEN/
ARG_MAX/NCARGS size with a new L<perldiag/"Environment size %d larger than the allowed %d">
error.

L<[cperl #329]|https://github.com/perl11/cperl/issues/390>

=head2 [CVE-2018-18312] Heap-buffer-overflow write in S_regatom (regcomp.c)

A crafted regular expression could cause heap-buffer-overflow write during
compilation, potentially allowing arbitrary code execution.

L<[perl #133423]|https://rt.perl.org/Ticket/Display.html?id=133423>

=head1 Modules and Pragmata

=head2 Updated Modules and Pragmata

=over 4

=item L<Cpanel::JSON::XS> 4.09

Silence Gconvert -Wunused-result.

Add unblessed_bool property (PR #118 by Pali)

Add seperate allow_dupkeys property, in relaxed (#122),
Fixed allow_dupkeys for the XS slow path,
Silence 2 -Wunused-value warnings,
Fix ->unblessed_bool to produce modifiable perl structures (PR #121 by Pali).

=item L<ExtUtils::MakeMaker> 8.35_08

Added C<-flto> support for static libs (need the lto plugin) and D for
deterministic builds, using arflags for AR_STATIC_ARGS, not just 'cr'.

fix FULLPERL for win32 cperl

=item L<Storable> 1.12_03

Fix stacklimit security issues introduced in the p5p release [cperl #393].
User limits must not be higher than the probed hard limits, when
overridden by user code or data, via hooks or even pst data.

=back

=head1 Configuration and Compilation

=over 4

=item *

=back

=head1 Testing

=over 4

=item *

Added F<t/run/envsize.t> for L</Restrict my_setenv to ARG_MAX>

=back

=head1 Selected Bug Fixes

=over 4

=item *

Perl 5.28 introduced an C<index()> optimization when comparing to -1 (or
indirectly, e.g. >= 0).  When this optimization was triggered inside a C<when>
clause it caused a warning ("Argument %s isn't numeric in smart match").  This
has now been fixed.
L<[perl #133368]|https://rt.perl.org/Ticket/Display.html?id=133368>

=item *

Matching of decimal digits in script runs, introduced in Perl 5.28, had a bug
that led to C<"1\N{THAI DIGIT FIVE}"> matching C</^(*sr:\d+)$/> when it should
not.  This has now been fixed.

=item *

The new in-place editing code no longer leaks directory handles.
L<[perl #133314]|https://rt.perl.org/Ticket/Display.html?id=133314>

=back

=head1 Acknowledgements

cperl 5.28.1 represents approximately 5 weeks of development since cperl
5.28.0c and contains approximately 40,000 lines of changes across 940 files
from 2 authors.

Excluding auto-generated files, documentation and release tools, there were
approximately 5,300 lines of changes to 110 .pm, .t, .c and .h files.

The following people are known to have contributed the improvements that
became cperl 5.28.1:

Reini Urban, Andreas KÃ¶nig.

Many of the changes included in this version originated in the CPAN modules
included in Perl's core. We're grateful to the entire CPAN community for
helping Perl to flourish.

For a more complete list of all of Perl's historical contributors, please
see the F<AUTHORS> file in the Perl source distribution.

Generated with:

    cperl Porting/acknowledgements.pl cperl-5.28.0..HEAD -c

=head1 Reporting Bugs

If you find what you think is a bug, you might check the articles recently
posted to the comp.lang.perl.misc newsgroup and the perl bug database at
L<https://rt.perl.org/> .  There may also be information at
L<http://www.perl.org/> , the Perl Home Page.

If you believe you have an unreported bug, please run the L<cperlbug> program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of C<perl -V>,
will be sent off to perlbug@perl.org to be analysed by the Perl porting team.

If you think it's a cperl specific bug or trust the cperl developers more 
please file an issue at L<https://github.com/perl11/cperl/issues>.

If the bug you are reporting has security implications which make it
inappropriate to send to a publicly archived mailing list, then see
L<perlsec/SECURITY VULNERABILITY CONTACT INFORMATION>
For details of how to report the issue.

=head1 SEE ALSO

The F<Changes> file for an explanation of how to view exhaustive details on
what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut
