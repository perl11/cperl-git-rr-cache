=encoding utf8

=head1 NAME

perlcdelta - what is new for cperl v5.24.3

=head1 DESCRIPTION

This document describes the differences between the cperl 5.24.2
and the cperl 5.24.3 releases.

If you are upgrading from an earlier release such as v5.24.1c, first read
L<perl5242cdelta>, which describes differences between v5.24.1c and v5.24.2c

=head1 Notice

XXX Any important notices here

=head1 Security

=head2 Set umask(0600) before calling mkstemp

POSIX 2008 demands such an umask, but it is still problematic on
Solaris, HP-UX and AIX and older libcs, e.g. glibc <= 2.06.
The old umask 0177 was insecure.

=head2 Disallow illegal glob with embedded NUL

E.g. C<< <$fh\000> >> throws now the safe syscalls warning, and errors
with C<Glob not terminated>, and does not pass the illegal glob path
to the internal or external glob.

See L<[cperl #342]|https://github.com/perl11/cperl/issues/342>

=head2 Follow chroot with chdir("/")

Fixed two security issues with the chroot op:

* fail on embedded NUL in the chroot argument.
Set C<errno> to EINVAL.

* If a call to chroot is not followed by a call to chdir("/") the
chroot jail confinement can be violated.  In Perl_pp_chroot: A call to
chroot followed by an operation that may escape from the chroot jail.
Coverity CID #165302 Insecure chroot.

=head2 [CVE-2017-12837] Heap buffer overflow in regular expression compiler

Compiling certain regular expression patterns with the case-insensitive
modifier could cause a heap buffer overflow and crash perl.  This has now been
fixed.
L<[perl #131582]|https://rt.perl.org/Public/Bug/Display.html?id=131582>

=head2 [CVE-2017-12883] Buffer over-read in regular expression parser

For certain types of syntax error in a regular expression pattern, the error
message could either contain the contents of a random, possibly large, chunk of
memory, or could crash perl.  This has now been fixed.
L<[perl #131598]|https://rt.perl.org/Public/Bug/Display.html?id=131598>

=head2 [CVE-2017-12814] C<$ENV{$key}> stack buffer overflow on Windows

A possible stack buffer overflow in the C<%ENV> code on Windows has been fixed
by removing the buffer completely since it was superfluous anyway.
L<[perl #131665]|https://rt.perl.org/Public/Bug/Display.html?id=131665>

=head1 Modules and Pragmata

=head2 Updated Modules and Pragmata

=over 4

=item L<B::Debug>  1.26

=item L<Config|XSConfig> 6.23

=item L<CPAN>  2.18_01

Update from upstream 2.16,
plus keep our cperl and secure YAML:::XS support.

=item L<ExtUtils::MM_Unix>  8.04_04

Support filehandles for C<<< MM->parse_version >>>.

=item L<IO>  1.38

from latest cperl.

=item L<Module::CoreList> 5.20180101c

=item L<Search::Dict>  1.07_01

=item L<SelectSaver>  1.02_01

3-arg open

=item L<Storable> 3.05_14

Updated from 3.01, many critical fixes.

=item L<VMS::DCLsym>  1.09

=item L<VMS::Stdio>  2.44_01

=back

=head1 Testing

=over 4

=item *

F<t/porting/cmp_version.t> was fixed together with EUMM to handle
parsing versions from filehandles. Backported.

=back

=head1 Internal Changes

XXX Changes which affect the interface available to C<XS> code go here.  Other
significant internal changes for future core maintainers should be noted as
well.

[ List each change as a =item entry ]

=over 4

=item *

XXX

=back

=head1 Selected Bug Fixes

=over 4

=item *

Fixed wrong C<panic: distributed hash flood> when dealing with
large C<%^H> hints hashes, with >127 entries, such as C<_charnames.pm> in
C<Regexp::Common>. Fixed the logic dealing with such a hints hash.
L<[cperl #350]|https://github.com/perl11/cperl/issues/350>.

=item *

Fixed return type of C<DynaLoader::dl_find_symbol_anywhere()>,
the address, not the name.
L<[cperl #352]|https://github.com/perl11/cperl/issues/352>.

=item *

Some regular expression parsing glitches could lead to assertion failures with
regular expressions such as C</(?<=/> and C</(?<!/>.
L<[perl #128170]|https://rt.perl.org/Public/Bug/Display.html?id=128170>

=item *

In v5.24.0c C<fchown> was changed not to accept negative one as an argument
because in some platforms that is an error.  However, in some other platforms
that is an acceptable argument.  This change has been reverted.
L<[perl #128967]|https://rt.perl.org/Public/Bug/Display.html?id=128967>.

=item *

A regression in Perl 5.24 with C<tr/\N{U+...}/foo/> when the code point was
between 128 and 255 has been fixed.
L<[perl #128734]|https://rt.perl.org/Public/Bug/Display.html?id=128734>.

=item *

A vulnerability in Perl's C<sprintf> implementation has been fixed by avoiding
a possible memory wrap.
L<[perl #131260]|https://rt.perl.org/Public/Bug/Display.html?id=131260>

=item *

The parser could sometimes crash if a bareword came after C<evalbytes>.
L<[perl #129196]|https://rt.perl.org/Public/Bug/Display.html?id=129196>

=item *

Many issues relating to C<printf "%a"> of hexadecimal floating point were
fixed.  In addition, the "subnormals" (formerly known as "denormals") floating
point numbers are now supported both with the plain IEEE 754 floating point
numbers (64-bit or 128-bit) and the x86 80-bit "extended precision".  Note that
subnormal hexadecimal floating point literals will give a warning about
"exponent underflow".
L<[perl #128843]|https://rt.perl.org/Public/Bug/Display.html?id=128843>
L<[perl #128888]|https://rt.perl.org/Public/Bug/Display.html?id=128888>
L<[perl #128889]|https://rt.perl.org/Public/Bug/Display.html?id=128889>
L<[perl #128890]|https://rt.perl.org/Public/Bug/Display.html?id=128890>
L<[perl #128893]|https://rt.perl.org/Public/Bug/Display.html?id=128893>
L<[perl #128909]|https://rt.perl.org/Public/Bug/Display.html?id=128909>
L<[perl #128919]|https://rt.perl.org/Public/Bug/Display.html?id=128919>

=item *

Fixed a place where the regex parser was not setting the syntax error correctly
on a syntactically incorrect pattern.
L<[perl #129122]|https://rt.perl.org/Public/Bug/Display.html?id=129122>

=item *

Fixed a memory leak in list assign from/to magic values, added with v5.23.6.
L<[perl #130766]|https://rt.perl.org/Public/Bug/Display.html?id=130766>

=back

=head1 Platform Support

=head2 Platform-Specific Notes

=over 4

=item VMS

=over 4

=item *

C<configure.com> now recognizes the VSI-branded C compiler.

=back

=item Windows

=over 4

=item *

Building XS modules with GCC 6 in a 64-bit build of Perl failed due to
incorrect mapping of C<strtoll> and C<strtoull>.  This has now been fixed.
L<[perl #131726]|https://rt.perl.org/Public/Bug/Display.html?id=131726>
L<[cpan #121683]|https://rt.cpan.org/Public/Bug/Display.html?id=121683>
L<[cpan #122353]|https://rt.cpan.org/Public/Bug/Display.html?id=122353>

=back

=back

=head1 Acknowledgements

XXX Generate this with:

    cperl Porting/acknowledgements.pl cperl-5.24.2..HEAD -c

=head1 Reporting Bugs

If you find what you think is a bug, you might check the articles recently
posted to the comp.lang.perl.misc newsgroup and the perl bug database at
L<https://rt.perl.org/> .  There may also be information at
L<http://www.perl.org/> , the Perl Home Page.

If you believe you have an unreported bug, please run the L<cperlbug> program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of C<perl -V>,
will be sent off to perlbug@perl.org to be analysed by the Perl porting team.

If you think it's a cperl specific bug or trust the cperl developers more 
please file an issue at L<https://github.com/perl11/cperl/issues>.

If the bug you are reporting has security implications which make it
inappropriate to send to a publicly archived mailing list, then see
L<perlsec/SECURITY VULNERABILITY CONTACT INFORMATION>
For details of how to report the issue.

=head1 SEE ALSO

The F<Changes> file for an explanation of how to view exhaustive details on
what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut
