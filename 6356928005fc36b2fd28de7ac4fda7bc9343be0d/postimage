=encoding utf8

=head1 NAME

perlcdelta - what is new for cperl v5.26.1

=head1 DESCRIPTION

This document describes the differences between the cperl 5.26.0
and the cperl 5.26.1 releases.

If you are upgrading from an earlier release such as v5.24.2c, first
read the L<perl525*cdelta> documentation, which describes differences
between v5.25.1c and v5.26.0c

=head1 Performance Enhancements

=over 4

=item *

Optimized method lookup on classes

C<hv_common()> can use combined C<HV_FETCH_ISEXISTS>, which
just skips the restricted stash error on classes.

Now again with the same speed as before 5.24.0c, using a single method
hash lookup, not two.

=back

=head1 Modules and Pragmata

=head2 Updated Modules and Pragmata

=over 4

=item L<B> 1.68_07

Add non-destructive $cv->PUREGV method, which does not create a GV
from a CvNAMED $cv.
Warning: $cv->GV does create a GV from a CvNAMED $cv.

=item L<B::C> 1.55_04

Protect from destructive $cv->GV, renamed is_lexsub to is_named,
allow @0, &0, ... types.

=item L<Cpanel::JSON::XS> 3.0233

MSVC 14.0 support and higher, changed nan in the runtime.

=item L<Encode>

Skip the flapping test F<t/Aliases.t> on threaded smokers, with random
segfaults.  This is a long standing core bug, with PMOP aliases or
clone. First observed at L<https://github.com/rurban/perl-compiler/issues/73>
(since 5.6)

=item L<ExtUtils::MakeMaker> 8.04_05

Support IO::Scalar handle as $parsefile argument to
ExtUtils::MM_Unix::parse_version().

mingw doesn't use the broken F<dlltool> anymore.

=item L<File::Spec::Functions> 3.36_05

Bumped version from unparsable 3.3.65, which prevented e.g.
File::chdir to install.

=item L<IO>

Bump versions of 3 Socket modules.

=item L<Memoize> 1.03

Skip flapping, timer-sensitive F<t/expmod_t.t> tests
on Travis CI.

=item L<Net::Ping> 2.61

Fix ping_udp for a started udp echo server (PR#5 by Stephan Loyd)

Fix t/400_ping_syn.t phases

Try to handle Windows Socket::getnameinfo errors

Improve some tests on missing network connections

=item L<Search::Dict> 1.07_01

Bump version

=item L<SelectSaver> 1.02_01

Bump version

=item L<VMS::Studio> 2.41_01

Bump version

=item L<Win32API::File> 0.1204

Fix xsubpp warnings

=back

=head1 Utility Changes

=head2 L<cperlivp>

=over 4

=item *

Add support for C<-d DESTDIR>, e.g. after

    make -s -j4 install DESTDIR=$HOME/cperl-inst
    cd $HOME/cperl-inst/usr/local/bin &&
    ./cperl cperlivp -p -d $HOME/cperl-inst

See L<[cperl #305]|https://github.com/perl11/cperl/issues/305>

=back

=head1 Testing

=over 4

=item *

Fixed F<Porting/cmpVERSION.pl> resp. F<t/porting/cmp_version.t>

=back

=head2 Platform-Specific Notes

=over 4

=item mingw

cperl on mingw was previously unsupported and didn't compile nor work.

The plan is to use mingw 32bit and 64bit packages instead of MSVC
compiled packages, which do require a special MS runtime DLL.

=over

=item *

Removed the broken F<dlltool>, which corrupted 64bit DLL's for years.
In our case Cpanel::JSON::XS and Unicode::Normalize.
Just use C<gcc> to create dll's and import libs, as in cygwin.

=item *

Added version specific gcc config values.

The default mingw configs were extremely defensive and slow.  Even
gcc-2.95.3 settings were disabled. Now several modern builtins and
attributes are used.

Fixed the wrong C<d_u32align> default, which caused Digest::MD5 to
crash.

=item *

Fixed C<BUILTIN_*_OVERFLOW> macros for mingw64, which uses long long
for normal IV/UV on win64.

=item *

Removed the version suffix from the importlib which is the entry for
C<$Config{libperl}>. C<-lcperl> works now for the compiler and embedders.
Just keep the version on MSVC, e.g. F<cperl526.lib>, as this had special
logic in perlcc already.

=item *

Improved F<t/run/switchDBG.t> for C<-D''> and C<-T> tests.

=item *

Fixed building of the extensions with the Extensions_normalize target.

=item *

Switched from F<C:\MinGW> to F<C:\Strawberry\c> as default B<CCHOME> prefix.
This is much more stable on 64bit, and easier to setup.

=item *

The compiler F<perlcc> only works with very simple programs under mingw yet.
With dynaloaded XS modules it usually fails.

=back

=back

=head1 Selected Bug Fixes

=over 4

=item *

Support method lookup from classes, i.e. restricted stashes.
Backported from 5.27.1c.

=item *

Fix "Attempt to access disallowed key" error message with named
hashes, i.e. stashes.
Backported from 5.27.1c.

=item *

Fixed signature corruption with skip'ed arguments without default and
with 0, 1, undef or op defaults, such as in C<sub func ($, $=0, $=1,
$=2, $=do{$i++} $="foo", $a="bar", $b="zoot")>, with the first C<$>,
the 2nd C<$=0>, the 3rd C<$=1> and the 5th C<$=do{}> argument.
cperl-only.
Backported from 5.27.1c.

=item *

Harmonized TOKENBUF_SIZE and stack buf sizes

The max identifier length depends on the max tokenbuf size, which went
from 256 in perl5 to 1024 in cperl, mostly to speed up parsing with a
larger parser buffer. A few places still had hardcoded 256 tmpbuf sizes, which
led to wrong error messages.
See L<[cperl #293]|https://github.com/perl11/cperl/issues/293>.
Backported from 5.27.1c.

=item *

Fixed one place in ck_sort for utf8 lexical variable names, which
passed the unneeded UTF8 flag to C<pad_findmy_pvn()>. In cperl all pads
are normalized UTF8 for faster searches, the flag argument must be 0.
See L<[cperl #293]|https://github.com/perl11/cperl/issues/293>.
Backported from 5.27.1c.

=item *

Fix regex stack recursion overflow with DEBUGGING

This is a regression since 5.26 (also in upstream perl5). Without
DEBUGGING it failed with the error message "Unmatched ( in regex", now
with more than 5000 open parens it will fail with the same error message.
This would be security relevant if one would use a DEBUGGING perl in
production as one can construct a pattern which writes arbitrary
values to the stack, similar to the Storable
(L<[cperl #257]|https://github.com/perl11/cperl/issues/257>,
L<[cpan #97526]|https://rt.cpan.org/Public/Bug/Display.html?id=97526>)
stack overflow and the old 5.10 regex stack overflow attack.
See L<[cperl #293]|https://github.com/perl11/cperl/issues/293>.
Backported from 5.27.1c.

=item *

Fix NULL sv dereference in formline (for ^*) chop fallthrough to
FF_DECIMAL. Coverity CID 165362

Backported from 5.27.2.

=item *

Fixed sub rettype. When the sub decl return type attribute is a
coretype set it. cperl-only.
Backported from 5.27.1c.

=item *

Fixed wrong "Donâ€™t stringify GV in numeric cx outside warnings scope"
optimization from 5.18, which fails with code like C<$* += (** = 0)>.
See L<[cperl #299]|https://github.com/perl11/cperl/issues/299>.
Backported from 5.27.1c.

=item *

Added missing arity check to C<readline>.
E.g. C<readline(1,2,3)> errors now.
Backported from 5.27.1c.

=item *

Attempting to apply an attribute to an C<our> variable where a
function of that name already exists could result in a NULL pointer
being supplied where an SV was expected, crashing perl.
See L<[perl #131597]|https://rt.perl.org/Public/Bug/Display.html?id=131597>.
Backported from 5.27.1c.

=back

=head1 Acknowledgements

XXX Generate this with:

    cperl Porting/acknowledgements.pl cperl-5.26.0..HEAD

=head1 Reporting Bugs

If you find what you think is a bug, you might check the articles recently
posted to the comp.lang.perl.misc newsgroup and the perl bug database at
L<https://rt.perl.org/> .  There may also be information at
L<http://www.perl.org/> , the Perl Home Page.

If you believe you have an unreported bug, please run the L<cperlbug> program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of C<perl -V>,
will be sent off to perlbug@perl.org to be analysed by the Perl porting team.

If you think it's a cperl specific bug or trust the cperl developers more 
please file an issue at L<https://github.com/perl11/cperl/issues>.

If the bug you are reporting has security implications which make it
inappropriate to send to a publicly archived mailing list, then see
L<perlsec/SECURITY VULNERABILITY CONTACT INFORMATION>
For details of how to report the issue.

=head1 SEE ALSO

The F<Changes> file for an explanation of how to view exhaustive details on
what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut
